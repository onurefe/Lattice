ARM GAS  /tmp/ccy4Xcy6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"synchronous_rectifier.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Sr_Start,"ax",%progbits
  18              		.align	1
  19              		.global	Sr_Start
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Sr_Start:
  27              	.LFB126:
  28              		.file 1 "Src/synchronous_rectifier.c"
   1:Src/synchronous_rectifier.c **** #include "synchronous_rectifier.h"
   2:Src/synchronous_rectifier.c **** #include "math.h"
   3:Src/synchronous_rectifier.c **** 
   4:Src/synchronous_rectifier.c **** /* Private definitions -----------------------------------------------------*/
   5:Src/synchronous_rectifier.c **** #define CROSSING_EMA_FILTER_COEFF 0.2f
   6:Src/synchronous_rectifier.c **** #define CHOCK_IND 10e-3
   7:Src/synchronous_rectifier.c **** #define FILTER_CAP 1.5e-3
   8:Src/synchronous_rectifier.c **** #define MAX_SURGE_CURRENT 10.0f
   9:Src/synchronous_rectifier.c **** #define PEAK_VOLTAGE 311.1269f
  10:Src/synchronous_rectifier.c **** #define MAINS_FREQ 50.0f
  11:Src/synchronous_rectifier.c **** #define MAINS_AMPLITUDE 311.1269837220809f
  12:Src/synchronous_rectifier.c **** #define ALPHA_OF_BRIDGE_TRANSITION 0.6f
  13:Src/synchronous_rectifier.c **** 
  14:Src/synchronous_rectifier.c **** /* Imported variables ------------------------------------------------------*/
  15:Src/synchronous_rectifier.c **** extern TIM_HandleTypeDef htim3;
  16:Src/synchronous_rectifier.c **** 
  17:Src/synchronous_rectifier.c **** /* Private variables --------------------------------------------------------*/
  18:Src/synchronous_rectifier.c **** // Runtime variables.
  19:Src/synchronous_rectifier.c **** static volatile float Alpha;
  20:Src/synchronous_rectifier.c **** static volatile uint16_t LastCapture;
  21:Src/synchronous_rectifier.c **** static float AlphaSlewRate;
  22:Src/synchronous_rectifier.c **** static float AlphaDestination;
  23:Src/synchronous_rectifier.c **** static volatile float PositivePeriodInUs;
  24:Src/synchronous_rectifier.c **** static volatile float NegativePeriodInUs;
  25:Src/synchronous_rectifier.c **** static Bool_t PhaseLocked;
  26:Src/synchronous_rectifier.c **** static Bool_t ToSetDrive0;
  27:Src/synchronous_rectifier.c **** static Bool_t ToSetDrive1;
  28:Src/synchronous_rectifier.c **** 
  29:Src/synchronous_rectifier.c **** /* Exported functions ------------------------------------------------------*/
  30:Src/synchronous_rectifier.c **** void Sr_Start(void)
ARM GAS  /tmp/ccy4Xcy6.s 			page 2


  31:Src/synchronous_rectifier.c **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  32:Src/synchronous_rectifier.c ****     // Initialize runtime variables.
  33:Src/synchronous_rectifier.c ****     Alpha = 0.0f;
  40              		.loc 1 33 5 view .LVU1
  41              		.loc 1 33 11 is_stmt 0 view .LVU2
  42 0002 0023     		movs	r3, #0
  43 0004 154A     		ldr	r2, .L3
  44 0006 1360     		str	r3, [r2]	@ float
  34:Src/synchronous_rectifier.c ****     AlphaDestination = 0.0f;
  45              		.loc 1 34 5 is_stmt 1 view .LVU3
  46              		.loc 1 34 22 is_stmt 0 view .LVU4
  47 0008 154A     		ldr	r2, .L3+4
  48 000a 1360     		str	r3, [r2]	@ float
  35:Src/synchronous_rectifier.c ****     AlphaSlewRate = 0.0f;
  49              		.loc 1 35 5 is_stmt 1 view .LVU5
  50              		.loc 1 35 19 is_stmt 0 view .LVU6
  51 000c 154A     		ldr	r2, .L3+8
  52 000e 1360     		str	r3, [r2]	@ float
  36:Src/synchronous_rectifier.c ****     PositivePeriodInUs = (1e6 / (2.0f * MAINS_FREQ));
  53              		.loc 1 36 5 is_stmt 1 view .LVU7
  54              		.loc 1 36 24 is_stmt 0 view .LVU8
  55 0010 154B     		ldr	r3, .L3+12
  56 0012 164A     		ldr	r2, .L3+16
  57 0014 1360     		str	r3, [r2]	@ float
  37:Src/synchronous_rectifier.c ****     NegativePeriodInUs = (1e6 / (2.0f * MAINS_FREQ));
  58              		.loc 1 37 5 is_stmt 1 view .LVU9
  59              		.loc 1 37 24 is_stmt 0 view .LVU10
  60 0016 164A     		ldr	r2, .L3+20
  61 0018 1360     		str	r3, [r2]	@ float
  38:Src/synchronous_rectifier.c ****     LastCapture = 0;
  62              		.loc 1 38 5 is_stmt 1 view .LVU11
  63              		.loc 1 38 17 is_stmt 0 view .LVU12
  64 001a 0024     		movs	r4, #0
  65 001c 154B     		ldr	r3, .L3+24
  66 001e 1C80     		strh	r4, [r3]	@ movhi
  39:Src/synchronous_rectifier.c ****     ToSetDrive0 = FALSE;
  67              		.loc 1 39 5 is_stmt 1 view .LVU13
  68              		.loc 1 39 17 is_stmt 0 view .LVU14
  69 0020 154B     		ldr	r3, .L3+28
  70 0022 1C70     		strb	r4, [r3]
  40:Src/synchronous_rectifier.c ****     ToSetDrive1 = FALSE;
  71              		.loc 1 40 5 is_stmt 1 view .LVU15
  72              		.loc 1 40 17 is_stmt 0 view .LVU16
  73 0024 154B     		ldr	r3, .L3+32
  74 0026 1C70     		strb	r4, [r3]
  41:Src/synchronous_rectifier.c ****     PhaseLocked = FALSE;
ARM GAS  /tmp/ccy4Xcy6.s 			page 3


  75              		.loc 1 41 5 is_stmt 1 view .LVU17
  76              		.loc 1 41 17 is_stmt 0 view .LVU18
  77 0028 154B     		ldr	r3, .L3+36
  78 002a 1C70     		strb	r4, [r3]
  42:Src/synchronous_rectifier.c **** 
  43:Src/synchronous_rectifier.c ****     HAL_GPIO_WritePin(THYRISTOR0_DRIVE_GPIO_Port, THYRISTOR0_DRIVE_Pin, GPIO_PIN_RESET);
  79              		.loc 1 43 5 is_stmt 1 view .LVU19
  80 002c 154D     		ldr	r5, .L3+40
  81 002e 2246     		mov	r2, r4
  82 0030 4FF48071 		mov	r1, #256
  83 0034 2846     		mov	r0, r5
  84 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
  85              	.LVL0:
  44:Src/synchronous_rectifier.c ****     HAL_GPIO_WritePin(THYRISTOR1_DRIVE_GPIO_Port, THYRISTOR1_DRIVE_Pin, GPIO_PIN_RESET);
  86              		.loc 1 44 5 view .LVU20
  87 003a 2246     		mov	r2, r4
  88 003c 4FF40071 		mov	r1, #512
  89 0040 2846     		mov	r0, r5
  90 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  91              	.LVL1:
  45:Src/synchronous_rectifier.c **** 
  46:Src/synchronous_rectifier.c ****     // Start input capture interrupts.
  47:Src/synchronous_rectifier.c ****     HAL_TIM_IC_Start_IT(&htim3, TIM_CHANNEL_3);
  92              		.loc 1 47 5 view .LVU21
  93 0046 104C     		ldr	r4, .L3+44
  94 0048 0821     		movs	r1, #8
  95 004a 2046     		mov	r0, r4
  96 004c FFF7FEFF 		bl	HAL_TIM_IC_Start_IT
  97              	.LVL2:
  48:Src/synchronous_rectifier.c ****     HAL_TIM_IC_Start_IT(&htim3, TIM_CHANNEL_4);
  98              		.loc 1 48 5 view .LVU22
  99 0050 0C21     		movs	r1, #12
 100 0052 2046     		mov	r0, r4
 101 0054 FFF7FEFF 		bl	HAL_TIM_IC_Start_IT
 102              	.LVL3:
  49:Src/synchronous_rectifier.c **** }
 103              		.loc 1 49 1 is_stmt 0 view .LVU23
 104 0058 38BD     		pop	{r3, r4, r5, pc}
 105              	.L4:
 106 005a 00BF     		.align	2
 107              	.L3:
 108 005c 00000000 		.word	.LANCHOR0
 109 0060 00000000 		.word	.LANCHOR1
 110 0064 00000000 		.word	.LANCHOR2
 111 0068 00401C46 		.word	1176256512
 112 006c 00000000 		.word	.LANCHOR3
 113 0070 00000000 		.word	.LANCHOR4
 114 0074 00000000 		.word	.LANCHOR5
 115 0078 00000000 		.word	.LANCHOR6
 116 007c 00000000 		.word	.LANCHOR7
 117 0080 00000000 		.word	.LANCHOR8
 118 0084 00040048 		.word	1207960576
 119 0088 00000000 		.word	htim3
 120              		.cfi_endproc
 121              	.LFE126:
 123              		.section	.text.Sr_IsStabilized,"ax",%progbits
 124              		.align	1
ARM GAS  /tmp/ccy4Xcy6.s 			page 4


 125              		.global	Sr_IsStabilized
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	Sr_IsStabilized:
 132              	.LFB127:
  50:Src/synchronous_rectifier.c **** 
  51:Src/synchronous_rectifier.c **** Bool_t Sr_IsStabilized(void)
  52:Src/synchronous_rectifier.c **** {
 133              		.loc 1 52 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
  53:Src/synchronous_rectifier.c ****     return TRUE;
 138              		.loc 1 53 5 view .LVU25
  54:Src/synchronous_rectifier.c ****     if (AlphaDestination <= Alpha)
  55:Src/synchronous_rectifier.c ****     {
  56:Src/synchronous_rectifier.c ****         return TRUE;
  57:Src/synchronous_rectifier.c ****     }
  58:Src/synchronous_rectifier.c ****     else
  59:Src/synchronous_rectifier.c ****     {
  60:Src/synchronous_rectifier.c ****         return FALSE;
  61:Src/synchronous_rectifier.c ****     }
  62:Src/synchronous_rectifier.c **** }
 139              		.loc 1 62 1 is_stmt 0 view .LVU26
 140 0000 0120     		movs	r0, #1
 141 0002 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE127:
 145              		.section	.text.Sr_Stop,"ax",%progbits
 146              		.align	1
 147              		.global	Sr_Stop
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	Sr_Stop:
 154              	.LFB128:
  63:Src/synchronous_rectifier.c **** 
  64:Src/synchronous_rectifier.c **** void Sr_Stop(void)
  65:Src/synchronous_rectifier.c **** {
 155              		.loc 1 65 1 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 10B5     		push	{r4, lr}
 160              	.LCFI1:
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
  66:Src/synchronous_rectifier.c ****     // Stop input capture interrupts.
  67:Src/synchronous_rectifier.c ****     HAL_TIM_IC_Stop_IT(&htim3, TIM_CHANNEL_3);
 164              		.loc 1 67 5 view .LVU28
 165 0002 054C     		ldr	r4, .L8
 166 0004 0821     		movs	r1, #8
ARM GAS  /tmp/ccy4Xcy6.s 			page 5


 167 0006 2046     		mov	r0, r4
 168 0008 FFF7FEFF 		bl	HAL_TIM_IC_Stop_IT
 169              	.LVL4:
  68:Src/synchronous_rectifier.c ****     HAL_TIM_IC_Stop_IT(&htim3, TIM_CHANNEL_4);
 170              		.loc 1 68 5 view .LVU29
 171 000c 0C21     		movs	r1, #12
 172 000e 2046     		mov	r0, r4
 173 0010 FFF7FEFF 		bl	HAL_TIM_IC_Stop_IT
 174              	.LVL5:
  69:Src/synchronous_rectifier.c **** }
 175              		.loc 1 69 1 is_stmt 0 view .LVU30
 176 0014 10BD     		pop	{r4, pc}
 177              	.L9:
 178 0016 00BF     		.align	2
 179              	.L8:
 180 0018 00000000 		.word	htim3
 181              		.cfi_endproc
 182              	.LFE128:
 184              		.global	__aeabi_f2d
 185              		.global	__aeabi_dmul
 186              		.global	__aeabi_d2f
 187              		.global	__aeabi_ddiv
 188              		.section	.text.Sr_SetVoltage,"ax",%progbits
 189              		.align	1
 190              		.global	Sr_SetVoltage
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	Sr_SetVoltage:
 197              	.LVL6:
 198              	.LFB129:
  70:Src/synchronous_rectifier.c **** 
  71:Src/synchronous_rectifier.c **** void Sr_SetVoltage(float normalizedVoltage)
  72:Src/synchronous_rectifier.c **** {
 199              		.loc 1 72 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		.loc 1 72 1 is_stmt 0 view .LVU32
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              	.LCFI2:
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 6, -8
 210              		.cfi_offset 14, -4
 211 0002 2DED028B 		vpush.64	{d8}
 212              	.LCFI3:
 213              		.cfi_def_cfa_offset 24
 214              		.cfi_offset 80, -24
 215              		.cfi_offset 81, -20
 216 0006 B0EE408A 		vmov.f32	s16, s0
  73:Src/synchronous_rectifier.c ****     float norm_destination_voltage;
 217              		.loc 1 73 5 is_stmt 1 view .LVU33
  74:Src/synchronous_rectifier.c ****     if (AlphaDestination >= 0.499f)
 218              		.loc 1 74 5 view .LVU34
ARM GAS  /tmp/ccy4Xcy6.s 			page 6


 219              		.loc 1 74 26 is_stmt 0 view .LVU35
 220 000a 514B     		ldr	r3, .L24+24
 221 000c D3ED007A 		vldr.32	s15, [r3]
 222              		.loc 1 74 8 view .LVU36
 223 0010 9FED507A 		vldr.32	s14, .L24+28
 224 0014 F4EEC77A 		vcmpe.f32	s15, s14
 225 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 226 001c 0FDA     		bge	.L18
  75:Src/synchronous_rectifier.c ****     {
  76:Src/synchronous_rectifier.c ****         norm_destination_voltage = 1.0f;
  77:Src/synchronous_rectifier.c ****     }
  78:Src/synchronous_rectifier.c ****     else
  79:Src/synchronous_rectifier.c ****     {
  80:Src/synchronous_rectifier.c ****         norm_destination_voltage = sinf(M_PI * AlphaDestination);
 227              		.loc 1 80 9 is_stmt 1 view .LVU37
 228              		.loc 1 80 46 is_stmt 0 view .LVU38
 229 001e 17EE900A 		vmov	r0, s15
 230 0022 FFF7FEFF 		bl	__aeabi_f2d
 231              	.LVL7:
 232              		.loc 1 80 46 view .LVU39
 233 0026 44A3     		adr	r3, .L24
 234 0028 D3E90023 		ldrd	r2, [r3]
 235 002c FFF7FEFF 		bl	__aeabi_dmul
 236              	.LVL8:
 237              		.loc 1 80 36 view .LVU40
 238 0030 FFF7FEFF 		bl	__aeabi_d2f
 239              	.LVL9:
 240 0034 00EE100A 		vmov	s0, r0
 241 0038 FFF7FEFF 		bl	sinf
 242              	.LVL10:
 243              		.loc 1 80 36 view .LVU41
 244 003c 01E0     		b	.L11
 245              	.LVL11:
 246              	.L18:
  76:Src/synchronous_rectifier.c ****     }
 247              		.loc 1 76 34 view .LVU42
 248 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 249              	.LVL12:
 250              	.L11:
  81:Src/synchronous_rectifier.c ****     }
  82:Src/synchronous_rectifier.c **** 
  83:Src/synchronous_rectifier.c ****     if (normalizedVoltage >= norm_destination_voltage)
 251              		.loc 1 83 5 is_stmt 1 view .LVU43
 252              		.loc 1 83 8 is_stmt 0 view .LVU44
 253 0042 B4EEC80A 		vcmpe.f32	s0, s16
 254 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 255 004a 51D8     		bhi	.L22
 256              	.LBB2:
  84:Src/synchronous_rectifier.c ****     {
  85:Src/synchronous_rectifier.c ****         float settling_period;
 257              		.loc 1 85 9 is_stmt 1 view .LVU45
  86:Src/synchronous_rectifier.c ****         float current_volt2 = norm_destination_voltage * norm_destination_voltage;
 258              		.loc 1 86 9 view .LVU46
 259              		.loc 1 86 15 is_stmt 0 view .LVU47
 260 004c 20EE000A 		vmul.f32	s0, s0, s0
 261              	.LVL13:
  87:Src/synchronous_rectifier.c ****         float dest_volt2 = normalizedVoltage * normalizedVoltage;
ARM GAS  /tmp/ccy4Xcy6.s 			page 7


 262              		.loc 1 87 9 is_stmt 1 view .LVU48
 263              		.loc 1 87 15 is_stmt 0 view .LVU49
 264 0050 68EE087A 		vmul.f32	s15, s16, s16
 265              	.LVL14:
  88:Src/synchronous_rectifier.c **** 
  89:Src/synchronous_rectifier.c ****         settling_period = MAINS_AMPLITUDE * MAINS_AMPLITUDE * FILTER_CAP * (dest_volt2 - current_vo
 266              		.loc 1 89 9 is_stmt 1 view .LVU50
 267              		.loc 1 89 88 is_stmt 0 view .LVU51
 268 0054 77EEC07A 		vsub.f32	s15, s15, s0
 269              	.LVL15:
 270              		.loc 1 89 88 view .LVU52
 271 0058 17EE900A 		vmov	r0, s15
 272 005c FFF7FEFF 		bl	__aeabi_f2d
 273              	.LVL16:
 274              		.loc 1 89 74 view .LVU53
 275 0060 37A3     		adr	r3, .L24+8
 276 0062 D3E90023 		ldrd	r2, [r3]
 277 0066 FFF7FEFF 		bl	__aeabi_dmul
 278              	.LVL17:
 279              		.loc 1 89 105 view .LVU54
 280 006a 0022     		movs	r2, #0
 281 006c 3A4B     		ldr	r3, .L24+32
 282 006e FFF7FEFF 		bl	__aeabi_ddiv
 283              	.LVL18:
 284              		.loc 1 89 25 view .LVU55
 285 0072 FFF7FEFF 		bl	__aeabi_d2f
 286              	.LVL19:
 287 0076 0646     		mov	r6, r0	@ float
 288              	.LVL20:
  90:Src/synchronous_rectifier.c ****                           (2 * CHOCK_IND * MAX_SURGE_CURRENT * MAX_SURGE_CURRENT * MAINS_FREQ);
  91:Src/synchronous_rectifier.c **** 
  92:Src/synchronous_rectifier.c ****         AlphaDestination = asinf(normalizedVoltage) / M_PI;
 289              		.loc 1 92 9 is_stmt 1 view .LVU56
 290              		.loc 1 92 28 is_stmt 0 view .LVU57
 291 0078 B0EE480A 		vmov.f32	s0, s16
 292 007c FFF7FEFF 		bl	asinf
 293              	.LVL21:
 294              		.loc 1 92 28 view .LVU58
 295 0080 10EE100A 		vmov	r0, s0
 296 0084 FFF7FEFF 		bl	__aeabi_f2d
 297              	.LVL22:
 298              		.loc 1 92 53 view .LVU59
 299 0088 2BA3     		adr	r3, .L24
 300 008a D3E90023 		ldrd	r2, [r3]
 301 008e FFF7FEFF 		bl	__aeabi_ddiv
 302              	.LVL23:
 303 0092 FFF7FEFF 		bl	__aeabi_d2f
 304              	.LVL24:
 305 0096 08EE100A 		vmov	s16, r0
 306              	.LVL25:
 307              		.loc 1 92 26 view .LVU60
 308 009a 2D4B     		ldr	r3, .L24+24
 309 009c 1860     		str	r0, [r3]	@ float
  93:Src/synchronous_rectifier.c ****         AlphaSlewRate = (AlphaDestination - Alpha) / (settling_period * 1e6);
 310              		.loc 1 93 9 is_stmt 1 view .LVU61
 311              		.loc 1 93 43 is_stmt 0 view .LVU62
 312 009e 2F4B     		ldr	r3, .L24+36
ARM GAS  /tmp/ccy4Xcy6.s 			page 8


 313 00a0 D3ED007A 		vldr.32	s15, [r3]
 314 00a4 78EE677A 		vsub.f32	s15, s16, s15
 315 00a8 17EE900A 		vmov	r0, s15
 316 00ac FFF7FEFF 		bl	__aeabi_f2d
 317              	.LVL26:
 318 00b0 0446     		mov	r4, r0
 319 00b2 0D46     		mov	r5, r1
 320              		.loc 1 93 71 view .LVU63
 321 00b4 3046     		mov	r0, r6	@ float
 322 00b6 FFF7FEFF 		bl	__aeabi_f2d
 323              	.LVL27:
 324 00ba 23A3     		adr	r3, .L24+16
 325 00bc D3E90023 		ldrd	r2, [r3]
 326 00c0 FFF7FEFF 		bl	__aeabi_dmul
 327              	.LVL28:
 328              		.loc 1 93 52 view .LVU64
 329 00c4 0246     		mov	r2, r0
 330 00c6 0B46     		mov	r3, r1
 331 00c8 2046     		mov	r0, r4
 332 00ca 2946     		mov	r1, r5
 333 00cc FFF7FEFF 		bl	__aeabi_ddiv
 334              	.LVL29:
 335 00d0 FFF7FEFF 		bl	__aeabi_d2f
 336              	.LVL30:
 337              		.loc 1 93 23 view .LVU65
 338 00d4 224B     		ldr	r3, .L24+40
 339 00d6 1860     		str	r0, [r3]	@ float
  94:Src/synchronous_rectifier.c **** 
  95:Src/synchronous_rectifier.c ****         // If full turned on; set destination angle to M_PI.
  96:Src/synchronous_rectifier.c ****         if (AlphaDestination > 0.499f)
 340              		.loc 1 96 9 is_stmt 1 view .LVU66
 341              		.loc 1 96 12 is_stmt 0 view .LVU67
 342 00d8 DFED1E7A 		vldr.32	s15, .L24+28
 343 00dc B4EEE78A 		vcmpe.f32	s16, s15
 344 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 345 00e4 25DD     		ble	.L10
  97:Src/synchronous_rectifier.c ****         {
  98:Src/synchronous_rectifier.c ****             AlphaDestination = 1.0f;
 346              		.loc 1 98 13 is_stmt 1 view .LVU68
 347              		.loc 1 98 30 is_stmt 0 view .LVU69
 348 00e6 1A4B     		ldr	r3, .L24+24
 349 00e8 4FF07E52 		mov	r2, #1065353216
 350 00ec 1A60     		str	r2, [r3]	@ float
 351 00ee 20E0     		b	.L10
 352              	.LVL31:
 353              	.L22:
 354              		.loc 1 98 30 view .LVU70
 355              	.LBE2:
  99:Src/synchronous_rectifier.c ****         }
 100:Src/synchronous_rectifier.c ****     }
 101:Src/synchronous_rectifier.c ****     else
 102:Src/synchronous_rectifier.c ****     {
 103:Src/synchronous_rectifier.c ****         AlphaDestination = asinf(normalizedVoltage) / M_PI;
 356              		.loc 1 103 9 is_stmt 1 view .LVU71
 357              		.loc 1 103 28 is_stmt 0 view .LVU72
 358 00f0 B0EE480A 		vmov.f32	s0, s16
 359              	.LVL32:
ARM GAS  /tmp/ccy4Xcy6.s 			page 9


 360              		.loc 1 103 28 view .LVU73
 361 00f4 FFF7FEFF 		bl	asinf
 362              	.LVL33:
 363 00f8 10EE100A 		vmov	r0, s0
 364 00fc FFF7FEFF 		bl	__aeabi_f2d
 365              	.LVL34:
 366              		.loc 1 103 53 view .LVU74
 367 0100 0DA3     		adr	r3, .L24
 368 0102 D3E90023 		ldrd	r2, [r3]
 369 0106 FFF7FEFF 		bl	__aeabi_ddiv
 370              	.LVL35:
 371 010a FFF7FEFF 		bl	__aeabi_d2f
 372              	.LVL36:
 373 010e 07EE900A 		vmov	s15, r0
 374              		.loc 1 103 26 view .LVU75
 375 0112 0F4B     		ldr	r3, .L24+24
 376 0114 1860     		str	r0, [r3]	@ float
 104:Src/synchronous_rectifier.c **** 
 105:Src/synchronous_rectifier.c ****         // If fully turned on; set destination angle 1.
 106:Src/synchronous_rectifier.c ****         if (AlphaDestination > 0.499f)
 377              		.loc 1 106 9 is_stmt 1 view .LVU76
 378              		.loc 1 106 12 is_stmt 0 view .LVU77
 379 0116 9FED0F7A 		vldr.32	s14, .L24+28
 380 011a F4EEC77A 		vcmpe.f32	s15, s14
 381 011e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 382 0122 02DD     		ble	.L16
 107:Src/synchronous_rectifier.c ****         {
 108:Src/synchronous_rectifier.c ****             AlphaDestination = 1.0f;
 383              		.loc 1 108 13 is_stmt 1 view .LVU78
 384              		.loc 1 108 30 is_stmt 0 view .LVU79
 385 0124 4FF07E52 		mov	r2, #1065353216
 386 0128 1A60     		str	r2, [r3]	@ float
 387              	.L16:
 109:Src/synchronous_rectifier.c ****         }
 110:Src/synchronous_rectifier.c **** 
 111:Src/synchronous_rectifier.c ****         Alpha = AlphaDestination;
 388              		.loc 1 111 9 is_stmt 1 view .LVU80
 389              		.loc 1 111 15 is_stmt 0 view .LVU81
 390 012a 094B     		ldr	r3, .L24+24
 391 012c 1A68     		ldr	r2, [r3]	@ float
 392 012e 0B4B     		ldr	r3, .L24+36
 393 0130 1A60     		str	r2, [r3]	@ float
 394              	.LVL37:
 395              	.L10:
 112:Src/synchronous_rectifier.c ****     }
 113:Src/synchronous_rectifier.c **** }
 396              		.loc 1 113 1 view .LVU82
 397 0132 BDEC028B 		vldm	sp!, {d8}
 398              	.LCFI4:
 399              		.cfi_restore 80
 400              		.cfi_restore 81
 401              		.cfi_def_cfa_offset 16
 402 0136 70BD     		pop	{r4, r5, r6, pc}
 403              	.L25:
 404              		.align	3
 405              	.L24:
 406 0138 182D4454 		.word	1413754136
ARM GAS  /tmp/ccy4Xcy6.s 			page 10


 407 013c FB210940 		.word	1074340347
 408 0140 67666666 		.word	1717986919
 409 0144 66266240 		.word	1080174182
 410 0148 00000000 		.word	0
 411 014c 80842E41 		.word	1093567616
 412 0150 00000000 		.word	.LANCHOR1
 413 0154 EE7CFF3E 		.word	1056931054
 414 0158 00005940 		.word	1079574528
 415 015c 00000000 		.word	.LANCHOR0
 416 0160 00000000 		.word	.LANCHOR2
 417              		.cfi_endproc
 418              	.LFE129:
 420              		.global	__aeabi_dadd
 421              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
 422              		.align	1
 423              		.global	HAL_TIM_IC_CaptureCallback
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu fpv4-sp-d16
 429              	HAL_TIM_IC_CaptureCallback:
 430              	.LVL38:
 431              	.LFB130:
 114:Src/synchronous_rectifier.c **** 
 115:Src/synchronous_rectifier.c **** /* Callback implementations ------------------------------------------------*/
 116:Src/synchronous_rectifier.c **** void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 117:Src/synchronous_rectifier.c **** {
 432              		.loc 1 117 1 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 16
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 118:Src/synchronous_rectifier.c ****     // Findout new capture value. Some kind of moving average filter may help resolving this issue.
 119:Src/synchronous_rectifier.c ****     if (htim == &htim3)
 436              		.loc 1 119 5 view .LVU84
 437              		.loc 1 119 8 is_stmt 0 view .LVU85
 438 0000 B14B     		ldr	r3, .L62+8
 439 0002 9842     		cmp	r0, r3
 440 0004 00D0     		beq	.L55
 441 0006 7047     		bx	lr
 442              	.L55:
 117:Src/synchronous_rectifier.c ****     // Findout new capture value. Some kind of moving average filter may help resolving this issue.
 443              		.loc 1 117 1 view .LVU86
 444 0008 F0B5     		push	{r4, r5, r6, r7, lr}
 445              	.LCFI5:
 446              		.cfi_def_cfa_offset 20
 447              		.cfi_offset 4, -20
 448              		.cfi_offset 5, -16
 449              		.cfi_offset 6, -12
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 000a 85B0     		sub	sp, sp, #20
 453              	.LCFI6:
 454              		.cfi_def_cfa_offset 40
 455 000c 0446     		mov	r4, r0
 120:Src/synchronous_rectifier.c ****     {
 121:Src/synchronous_rectifier.c ****         // If the line is rising
 122:Src/synchronous_rectifier.c ****         if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_3)
ARM GAS  /tmp/ccy4Xcy6.s 			page 11


 456              		.loc 1 122 9 is_stmt 1 view .LVU87
 457              		.loc 1 122 17 is_stmt 0 view .LVU88
 458 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 459              		.loc 1 122 12 view .LVU89
 460 0010 042B     		cmp	r3, #4
 461 0012 05D0     		beq	.L56
 462              	.LVL39:
 463              	.L28:
 123:Src/synchronous_rectifier.c ****         {
 124:Src/synchronous_rectifier.c ****             if (!PhaseLocked)
 125:Src/synchronous_rectifier.c ****             {
 126:Src/synchronous_rectifier.c ****                 LastCapture = htim->Instance->CCR3;
 127:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 128:Src/synchronous_rectifier.c ****                 return;
 129:Src/synchronous_rectifier.c ****             }
 130:Src/synchronous_rectifier.c **** 
 131:Src/synchronous_rectifier.c ****             ToSetDrive0 = FALSE;
 132:Src/synchronous_rectifier.c ****             ToSetDrive1 = FALSE;
 133:Src/synchronous_rectifier.c **** 
 134:Src/synchronous_rectifier.c ****             volatile uint16_t ccr;
 135:Src/synchronous_rectifier.c ****             volatile float negative_period;
 136:Src/synchronous_rectifier.c **** 
 137:Src/synchronous_rectifier.c ****             ccr = htim->Instance->CCR3;
 138:Src/synchronous_rectifier.c ****             negative_period = (float)(ccr - LastCapture);
 139:Src/synchronous_rectifier.c **** 
 140:Src/synchronous_rectifier.c ****             if (negative_period < 0.0)
 141:Src/synchronous_rectifier.c ****                 negative_period += 65536.0f;
 142:Src/synchronous_rectifier.c **** 
 143:Src/synchronous_rectifier.c ****             NegativePeriodInUs = negative_period * CROSSING_EMA_FILTER_COEFF +
 144:Src/synchronous_rectifier.c ****                                          NegativePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 145:Src/synchronous_rectifier.c **** 
 146:Src/synchronous_rectifier.c ****             if (AlphaDestination > Alpha)
 147:Src/synchronous_rectifier.c ****             {
 148:Src/synchronous_rectifier.c ****                 Alpha += (negative_period * AlphaSlewRate);
 149:Src/synchronous_rectifier.c ****             }
 150:Src/synchronous_rectifier.c **** 
 151:Src/synchronous_rectifier.c ****             LastCapture = ccr;
 152:Src/synchronous_rectifier.c **** 
 153:Src/synchronous_rectifier.c ****             if (Alpha < ALPHA_OF_BRIDGE_TRANSITION)
 154:Src/synchronous_rectifier.c ****             {
 155:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR1_DRIVE_GPIO_Port, THYRISTOR1_DRIVE_Pin, GPIO_PIN_RESET)
 156:Src/synchronous_rectifier.c ****                 ToSetDrive0 = TRUE;
 157:Src/synchronous_rectifier.c ****                 
 158:Src/synchronous_rectifier.c ****                 uint16_t time2setdrive0;
 159:Src/synchronous_rectifier.c ****                 time2setdrive0 = ccr + (uint16_t)(PositivePeriodInUs * (1.0f - Alpha));
 160:Src/synchronous_rectifier.c **** 
 161:Src/synchronous_rectifier.c ****                 // Start output compare interrupt.
 162:Src/synchronous_rectifier.c ****                 __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, time2setdrive0);
 163:Src/synchronous_rectifier.c ****                 HAL_TIM_OC_Start_IT(&htim3, TIM_CHANNEL_1);
 164:Src/synchronous_rectifier.c ****             }
 165:Src/synchronous_rectifier.c ****             else
 166:Src/synchronous_rectifier.c ****             {
 167:Src/synchronous_rectifier.c ****                 Alpha = AlphaDestination;
 168:Src/synchronous_rectifier.c **** 
 169:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR0_DRIVE_GPIO_Port, THYRISTOR0_DRIVE_Pin, GPIO_PIN_SET);
 170:Src/synchronous_rectifier.c ****             }
 171:Src/synchronous_rectifier.c ****         }
ARM GAS  /tmp/ccy4Xcy6.s 			page 12


 172:Src/synchronous_rectifier.c **** 
 173:Src/synchronous_rectifier.c ****         // If falling edge has been detected(This means line is falling)
 174:Src/synchronous_rectifier.c ****         if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_4)
 464              		.loc 1 174 9 is_stmt 1 view .LVU90
 465              		.loc 1 174 17 is_stmt 0 view .LVU91
 466 0014 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 467              		.loc 1 174 12 view .LVU92
 468 0016 082B     		cmp	r3, #8
 469 0018 00F0AA80 		beq	.L57
 470              	.LVL40:
 471              	.L26:
 175:Src/synchronous_rectifier.c ****         {
 176:Src/synchronous_rectifier.c ****             if (!PhaseLocked)
 177:Src/synchronous_rectifier.c ****             {
 178:Src/synchronous_rectifier.c ****                 LastCapture = htim->Instance->CCR4;
 179:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 180:Src/synchronous_rectifier.c ****                 return;
 181:Src/synchronous_rectifier.c ****             }
 182:Src/synchronous_rectifier.c **** 
 183:Src/synchronous_rectifier.c ****             ToSetDrive0 = FALSE;
 184:Src/synchronous_rectifier.c ****             ToSetDrive1 = FALSE;
 185:Src/synchronous_rectifier.c **** 
 186:Src/synchronous_rectifier.c ****             volatile uint16_t ccr;
 187:Src/synchronous_rectifier.c ****             volatile float positive_period;
 188:Src/synchronous_rectifier.c **** 
 189:Src/synchronous_rectifier.c ****             ccr = htim->Instance->CCR4;
 190:Src/synchronous_rectifier.c ****             positive_period = (float)(ccr - LastCapture);
 191:Src/synchronous_rectifier.c **** 
 192:Src/synchronous_rectifier.c ****             if (positive_period < 0.0)
 193:Src/synchronous_rectifier.c ****                 positive_period += 65536.0f;
 194:Src/synchronous_rectifier.c **** 
 195:Src/synchronous_rectifier.c ****             PositivePeriodInUs = positive_period * CROSSING_EMA_FILTER_COEFF +
 196:Src/synchronous_rectifier.c ****                                 PositivePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 197:Src/synchronous_rectifier.c **** 
 198:Src/synchronous_rectifier.c ****             if (AlphaDestination > Alpha)
 199:Src/synchronous_rectifier.c ****             {
 200:Src/synchronous_rectifier.c ****                 Alpha += (positive_period * AlphaSlewRate);
 201:Src/synchronous_rectifier.c ****             }
 202:Src/synchronous_rectifier.c **** 
 203:Src/synchronous_rectifier.c ****             LastCapture = ccr;
 204:Src/synchronous_rectifier.c **** 
 205:Src/synchronous_rectifier.c ****             if (Alpha < ALPHA_OF_BRIDGE_TRANSITION)
 206:Src/synchronous_rectifier.c ****             {
 207:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR0_DRIVE_GPIO_Port, THYRISTOR0_DRIVE_Pin, GPIO_PIN_RESET)
 208:Src/synchronous_rectifier.c ****                 ToSetDrive1 = TRUE;
 209:Src/synchronous_rectifier.c **** 
 210:Src/synchronous_rectifier.c ****                 uint16_t time2setdrive1;
 211:Src/synchronous_rectifier.c ****                 time2setdrive1 = ccr + (uint16_t)(NegativePeriodInUs * (1.0f - Alpha));
 212:Src/synchronous_rectifier.c **** 
 213:Src/synchronous_rectifier.c ****                 // Start output compare interrupt.
 214:Src/synchronous_rectifier.c ****                 __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_2, time2setdrive1);
 215:Src/synchronous_rectifier.c ****                 HAL_TIM_OC_Start_IT(&htim3, TIM_CHANNEL_2);
 216:Src/synchronous_rectifier.c ****             }
 217:Src/synchronous_rectifier.c ****             else
 218:Src/synchronous_rectifier.c ****             {
 219:Src/synchronous_rectifier.c ****                 Alpha = AlphaDestination;
 220:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR1_DRIVE_GPIO_Port, THYRISTOR1_DRIVE_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/ccy4Xcy6.s 			page 13


 221:Src/synchronous_rectifier.c ****             }
 222:Src/synchronous_rectifier.c ****         }
 223:Src/synchronous_rectifier.c ****     }
 224:Src/synchronous_rectifier.c **** }
 472              		.loc 1 224 1 view .LVU93
 473 001c 05B0     		add	sp, sp, #20
 474              	.LCFI7:
 475              		.cfi_remember_state
 476              		.cfi_def_cfa_offset 20
 477              		@ sp needed
 478 001e F0BD     		pop	{r4, r5, r6, r7, pc}
 479              	.LVL41:
 480              	.L56:
 481              	.LCFI8:
 482              		.cfi_restore_state
 483              	.LBB3:
 124:Src/synchronous_rectifier.c ****             {
 484              		.loc 1 124 13 is_stmt 1 view .LVU94
 124:Src/synchronous_rectifier.c ****             {
 485              		.loc 1 124 17 is_stmt 0 view .LVU95
 486 0020 AA4B     		ldr	r3, .L62+12
 487 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 124:Src/synchronous_rectifier.c ****             {
 488              		.loc 1 124 16 view .LVU96
 489 0024 002B     		cmp	r3, #0
 490 0026 00F08780 		beq	.L58
 131:Src/synchronous_rectifier.c ****             ToSetDrive1 = FALSE;
 491              		.loc 1 131 13 is_stmt 1 view .LVU97
 131:Src/synchronous_rectifier.c ****             ToSetDrive1 = FALSE;
 492              		.loc 1 131 25 is_stmt 0 view .LVU98
 493 002a 0023     		movs	r3, #0
 494 002c A84A     		ldr	r2, .L62+16
 495 002e 1370     		strb	r3, [r2]
 132:Src/synchronous_rectifier.c **** 
 496              		.loc 1 132 13 is_stmt 1 view .LVU99
 132:Src/synchronous_rectifier.c **** 
 497              		.loc 1 132 25 is_stmt 0 view .LVU100
 498 0030 A84A     		ldr	r2, .L62+20
 499 0032 1370     		strb	r3, [r2]
 134:Src/synchronous_rectifier.c ****             volatile float negative_period;
 500              		.loc 1 134 13 is_stmt 1 view .LVU101
 135:Src/synchronous_rectifier.c **** 
 501              		.loc 1 135 13 view .LVU102
 137:Src/synchronous_rectifier.c ****             negative_period = (float)(ccr - LastCapture);
 502              		.loc 1 137 13 view .LVU103
 137:Src/synchronous_rectifier.c ****             negative_period = (float)(ccr - LastCapture);
 503              		.loc 1 137 23 is_stmt 0 view .LVU104
 504 0034 0368     		ldr	r3, [r0]
 137:Src/synchronous_rectifier.c ****             negative_period = (float)(ccr - LastCapture);
 505              		.loc 1 137 33 view .LVU105
 506 0036 DB6B     		ldr	r3, [r3, #60]
 137:Src/synchronous_rectifier.c ****             negative_period = (float)(ccr - LastCapture);
 507              		.loc 1 137 17 view .LVU106
 508 0038 9BB2     		uxth	r3, r3
 509 003a ADF80430 		strh	r3, [sp, #4]	@ movhi
 138:Src/synchronous_rectifier.c **** 
 510              		.loc 1 138 13 is_stmt 1 view .LVU107
ARM GAS  /tmp/ccy4Xcy6.s 			page 14


 138:Src/synchronous_rectifier.c **** 
 511              		.loc 1 138 43 is_stmt 0 view .LVU108
 512 003e BDF80430 		ldrh	r3, [sp, #4]
 513 0042 A54A     		ldr	r2, .L62+24
 514 0044 1288     		ldrh	r2, [r2]
 515 0046 9B1A     		subs	r3, r3, r2
 138:Src/synchronous_rectifier.c **** 
 516              		.loc 1 138 31 view .LVU109
 517 0048 07EE903A 		vmov	s15, r3	@ int
 518 004c F8EEE77A 		vcvt.f32.s32	s15, s15
 138:Src/synchronous_rectifier.c **** 
 519              		.loc 1 138 29 view .LVU110
 520 0050 CDED027A 		vstr.32	s15, [sp, #8]
 140:Src/synchronous_rectifier.c ****                 negative_period += 65536.0f;
 521              		.loc 1 140 13 is_stmt 1 view .LVU111
 140:Src/synchronous_rectifier.c ****                 negative_period += 65536.0f;
 522              		.loc 1 140 33 is_stmt 0 view .LVU112
 523 0054 DDED027A 		vldr.32	s15, [sp, #8]
 140:Src/synchronous_rectifier.c ****                 negative_period += 65536.0f;
 524              		.loc 1 140 16 view .LVU113
 525 0058 F5EEC07A 		vcmpe.f32	s15, #0
 526 005c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 527 0060 73D4     		bmi	.L59
 528              	.L30:
 143:Src/synchronous_rectifier.c ****                                          NegativePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 529              		.loc 1 143 13 is_stmt 1 view .LVU114
 143:Src/synchronous_rectifier.c ****                                          NegativePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 530              		.loc 1 143 50 is_stmt 0 view .LVU115
 531 0062 9DED027A 		vldr.32	s14, [sp, #8]
 532 0066 DFED9D7A 		vldr.32	s15, .L62+28
 533 006a 67EE277A 		vmul.f32	s15, s14, s15
 534 006e 17EE900A 		vmov	r0, s15
 535              	.LVL42:
 143:Src/synchronous_rectifier.c ****                                          NegativePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 536              		.loc 1 143 50 view .LVU116
 537 0072 FFF7FEFF 		bl	__aeabi_f2d
 538              	.LVL43:
 539 0076 0646     		mov	r6, r0
 540 0078 0F46     		mov	r7, r1
 144:Src/synchronous_rectifier.c **** 
 541              		.loc 1 144 61 view .LVU117
 542 007a 994D     		ldr	r5, .L62+32
 543 007c 2868     		ldr	r0, [r5]	@ float
 544 007e FFF7FEFF 		bl	__aeabi_f2d
 545              	.LVL44:
 546 0082 8FA3     		adr	r3, .L62
 547 0084 D3E90023 		ldrd	r2, [r3]
 548 0088 FFF7FEFF 		bl	__aeabi_dmul
 549              	.LVL45:
 143:Src/synchronous_rectifier.c ****                                          NegativePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 550              		.loc 1 143 78 view .LVU118
 551 008c 0246     		mov	r2, r0
 552 008e 0B46     		mov	r3, r1
 553 0090 3046     		mov	r0, r6
 554 0092 3946     		mov	r1, r7
 555 0094 FFF7FEFF 		bl	__aeabi_dadd
 556              	.LVL46:
ARM GAS  /tmp/ccy4Xcy6.s 			page 15


 557 0098 FFF7FEFF 		bl	__aeabi_d2f
 558              	.LVL47:
 143:Src/synchronous_rectifier.c ****                                          NegativePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 559              		.loc 1 143 32 view .LVU119
 560 009c 2860     		str	r0, [r5]	@ float
 146:Src/synchronous_rectifier.c ****             {
 561              		.loc 1 146 13 is_stmt 1 view .LVU120
 146:Src/synchronous_rectifier.c ****             {
 562              		.loc 1 146 34 is_stmt 0 view .LVU121
 563 009e 914B     		ldr	r3, .L62+36
 564 00a0 D3ED007A 		vldr.32	s15, [r3]
 565 00a4 904B     		ldr	r3, .L62+40
 566 00a6 93ED007A 		vldr.32	s14, [r3]
 146:Src/synchronous_rectifier.c ****             {
 567              		.loc 1 146 16 view .LVU122
 568 00aa F4EEC77A 		vcmpe.f32	s15, s14
 569 00ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 570 00b2 0DDD     		ble	.L32
 148:Src/synchronous_rectifier.c ****             }
 571              		.loc 1 148 17 is_stmt 1 view .LVU123
 148:Src/synchronous_rectifier.c ****             }
 572              		.loc 1 148 43 is_stmt 0 view .LVU124
 573 00b4 9DED027A 		vldr.32	s14, [sp, #8]
 574 00b8 8C4B     		ldr	r3, .L62+44
 575 00ba D3ED006A 		vldr.32	s13, [r3]
 576 00be 67EE266A 		vmul.f32	s13, s14, s13
 148:Src/synchronous_rectifier.c ****             }
 577              		.loc 1 148 23 view .LVU125
 578 00c2 894B     		ldr	r3, .L62+40
 579 00c4 93ED007A 		vldr.32	s14, [r3]
 580 00c8 37EE267A 		vadd.f32	s14, s14, s13
 581 00cc 83ED007A 		vstr.32	s14, [r3]
 582              	.L32:
 151:Src/synchronous_rectifier.c **** 
 583              		.loc 1 151 13 is_stmt 1 view .LVU126
 151:Src/synchronous_rectifier.c **** 
 584              		.loc 1 151 25 is_stmt 0 view .LVU127
 585 00d0 BDF80430 		ldrh	r3, [sp, #4]
 586 00d4 9BB2     		uxth	r3, r3
 587 00d6 804A     		ldr	r2, .L62+24
 588 00d8 1380     		strh	r3, [r2]	@ movhi
 153:Src/synchronous_rectifier.c ****             {
 589              		.loc 1 153 13 is_stmt 1 view .LVU128
 153:Src/synchronous_rectifier.c ****             {
 590              		.loc 1 153 23 is_stmt 0 view .LVU129
 591 00da 834B     		ldr	r3, .L62+40
 592 00dc D3ED006A 		vldr.32	s13, [r3]
 153:Src/synchronous_rectifier.c ****             {
 593              		.loc 1 153 16 view .LVU130
 594 00e0 9FED837A 		vldr.32	s14, .L62+48
 595 00e4 F4EEC76A 		vcmpe.f32	s13, s14
 596 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 597 00ec 36D5     		bpl	.L49
 598              	.LBB4:
 155:Src/synchronous_rectifier.c ****                 ToSetDrive0 = TRUE;
 599              		.loc 1 155 17 is_stmt 1 view .LVU131
 600 00ee 0022     		movs	r2, #0
ARM GAS  /tmp/ccy4Xcy6.s 			page 16


 601 00f0 4FF40071 		mov	r1, #512
 602 00f4 7F48     		ldr	r0, .L62+52
 603 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 604              	.LVL48:
 156:Src/synchronous_rectifier.c ****                 
 605              		.loc 1 156 17 view .LVU132
 156:Src/synchronous_rectifier.c ****                 
 606              		.loc 1 156 29 is_stmt 0 view .LVU133
 607 00fa 754B     		ldr	r3, .L62+16
 608 00fc 0122     		movs	r2, #1
 609 00fe 1A70     		strb	r2, [r3]
 158:Src/synchronous_rectifier.c ****                 time2setdrive0 = ccr + (uint16_t)(PositivePeriodInUs * (1.0f - Alpha));
 610              		.loc 1 158 17 is_stmt 1 view .LVU134
 159:Src/synchronous_rectifier.c **** 
 611              		.loc 1 159 17 view .LVU135
 159:Src/synchronous_rectifier.c **** 
 612              		.loc 1 159 78 is_stmt 0 view .LVU136
 613 0100 794B     		ldr	r3, .L62+40
 614 0102 93ED007A 		vldr.32	s14, [r3]
 615 0106 F7EE007A 		vmov.f32	s15, #1.0e+0
 616 010a 77EEC77A 		vsub.f32	s15, s15, s14
 159:Src/synchronous_rectifier.c **** 
 617              		.loc 1 159 70 view .LVU137
 618 010e 7A4B     		ldr	r3, .L62+56
 619 0110 93ED007A 		vldr.32	s14, [r3]
 620 0114 67EE877A 		vmul.f32	s15, s15, s14
 159:Src/synchronous_rectifier.c **** 
 621              		.loc 1 159 40 view .LVU138
 622 0118 FCEEE77A 		vcvt.u32.f32	s15, s15
 623 011c 17EE903A 		vmov	r3, s15	@ int
 159:Src/synchronous_rectifier.c **** 
 624              		.loc 1 159 38 view .LVU139
 625 0120 BDF80420 		ldrh	r2, [sp, #4]
 159:Src/synchronous_rectifier.c **** 
 626              		.loc 1 159 32 view .LVU140
 627 0124 12FA83F3 		uxtah	r3, r2, r3
 628 0128 9BB2     		uxth	r3, r3
 629              	.LVL49:
 162:Src/synchronous_rectifier.c ****                 HAL_TIM_OC_Start_IT(&htim3, TIM_CHANNEL_1);
 630              		.loc 1 162 17 is_stmt 1 view .LVU141
 631 012a 6748     		ldr	r0, .L62+8
 632 012c 0268     		ldr	r2, [r0]
 633 012e 5363     		str	r3, [r2, #52]
 163:Src/synchronous_rectifier.c ****             }
 634              		.loc 1 163 17 view .LVU142
 635 0130 0021     		movs	r1, #0
 636 0132 FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 637              	.LVL50:
 163:Src/synchronous_rectifier.c ****             }
 638              		.loc 1 163 17 is_stmt 0 view .LVU143
 639              	.LBE4:
 640 0136 6DE7     		b	.L28
 641              	.LVL51:
 642              	.L58:
 126:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 643              		.loc 1 126 17 is_stmt 1 view .LVU144
 126:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
ARM GAS  /tmp/ccy4Xcy6.s 			page 17


 644              		.loc 1 126 35 is_stmt 0 view .LVU145
 645 0138 0368     		ldr	r3, [r0]
 126:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 646              		.loc 1 126 45 view .LVU146
 647 013a DB6B     		ldr	r3, [r3, #60]
 126:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 648              		.loc 1 126 29 view .LVU147
 649 013c 9BB2     		uxth	r3, r3
 650 013e 664A     		ldr	r2, .L62+24
 651 0140 1380     		strh	r3, [r2]	@ movhi
 127:Src/synchronous_rectifier.c ****                 return;
 652              		.loc 1 127 17 is_stmt 1 view .LVU148
 127:Src/synchronous_rectifier.c ****                 return;
 653              		.loc 1 127 29 is_stmt 0 view .LVU149
 654 0142 624B     		ldr	r3, .L62+12
 655 0144 0122     		movs	r2, #1
 656 0146 1A70     		strb	r2, [r3]
 128:Src/synchronous_rectifier.c ****             }
 657              		.loc 1 128 17 is_stmt 1 view .LVU150
 658 0148 68E7     		b	.L26
 659              	.L59:
 141:Src/synchronous_rectifier.c **** 
 660              		.loc 1 141 17 view .LVU151
 141:Src/synchronous_rectifier.c **** 
 661              		.loc 1 141 33 is_stmt 0 view .LVU152
 662 014a DDED027A 		vldr.32	s15, [sp, #8]
 663 014e 9FED6B7A 		vldr.32	s14, .L62+60
 664 0152 77EE877A 		vadd.f32	s15, s15, s14
 665 0156 CDED027A 		vstr.32	s15, [sp, #8]
 666 015a 82E7     		b	.L30
 667              	.LVL52:
 668              	.L49:
 167:Src/synchronous_rectifier.c **** 
 669              		.loc 1 167 17 is_stmt 1 view .LVU153
 167:Src/synchronous_rectifier.c **** 
 670              		.loc 1 167 23 is_stmt 0 view .LVU154
 671 015c 624B     		ldr	r3, .L62+40
 672 015e C3ED007A 		vstr.32	s15, [r3]
 169:Src/synchronous_rectifier.c ****             }
 673              		.loc 1 169 17 is_stmt 1 view .LVU155
 674 0162 0122     		movs	r2, #1
 675 0164 4FF48071 		mov	r1, #256
 676 0168 6248     		ldr	r0, .L62+52
 677 016a FFF7FEFF 		bl	HAL_GPIO_WritePin
 678              	.LVL53:
 679 016e 51E7     		b	.L28
 680              	.L57:
 169:Src/synchronous_rectifier.c ****             }
 681              		.loc 1 169 17 is_stmt 0 view .LVU156
 682              	.LBE3:
 683              	.LBB5:
 176:Src/synchronous_rectifier.c ****             {
 684              		.loc 1 176 13 is_stmt 1 view .LVU157
 176:Src/synchronous_rectifier.c ****             {
 685              		.loc 1 176 17 is_stmt 0 view .LVU158
 686 0170 564B     		ldr	r3, .L62+12
 687 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccy4Xcy6.s 			page 18


 176:Src/synchronous_rectifier.c ****             {
 688              		.loc 1 176 16 view .LVU159
 689 0174 002B     		cmp	r3, #0
 690 0176 00F08780 		beq	.L60
 183:Src/synchronous_rectifier.c ****             ToSetDrive1 = FALSE;
 691              		.loc 1 183 13 is_stmt 1 view .LVU160
 183:Src/synchronous_rectifier.c ****             ToSetDrive1 = FALSE;
 692              		.loc 1 183 25 is_stmt 0 view .LVU161
 693 017a 0023     		movs	r3, #0
 694 017c 544A     		ldr	r2, .L62+16
 695 017e 1370     		strb	r3, [r2]
 184:Src/synchronous_rectifier.c **** 
 696              		.loc 1 184 13 is_stmt 1 view .LVU162
 184:Src/synchronous_rectifier.c **** 
 697              		.loc 1 184 25 is_stmt 0 view .LVU163
 698 0180 544A     		ldr	r2, .L62+20
 699 0182 1370     		strb	r3, [r2]
 186:Src/synchronous_rectifier.c ****             volatile float positive_period;
 700              		.loc 1 186 13 is_stmt 1 view .LVU164
 187:Src/synchronous_rectifier.c **** 
 701              		.loc 1 187 13 view .LVU165
 189:Src/synchronous_rectifier.c ****             positive_period = (float)(ccr - LastCapture);
 702              		.loc 1 189 13 view .LVU166
 189:Src/synchronous_rectifier.c ****             positive_period = (float)(ccr - LastCapture);
 703              		.loc 1 189 23 is_stmt 0 view .LVU167
 704 0184 2368     		ldr	r3, [r4]
 189:Src/synchronous_rectifier.c ****             positive_period = (float)(ccr - LastCapture);
 705              		.loc 1 189 33 view .LVU168
 706 0186 1B6C     		ldr	r3, [r3, #64]
 189:Src/synchronous_rectifier.c ****             positive_period = (float)(ccr - LastCapture);
 707              		.loc 1 189 17 view .LVU169
 708 0188 9BB2     		uxth	r3, r3
 709 018a ADF80630 		strh	r3, [sp, #6]	@ movhi
 190:Src/synchronous_rectifier.c **** 
 710              		.loc 1 190 13 is_stmt 1 view .LVU170
 190:Src/synchronous_rectifier.c **** 
 711              		.loc 1 190 43 is_stmt 0 view .LVU171
 712 018e BDF80630 		ldrh	r3, [sp, #6]
 713 0192 514A     		ldr	r2, .L62+24
 714 0194 1288     		ldrh	r2, [r2]
 715 0196 9B1A     		subs	r3, r3, r2
 190:Src/synchronous_rectifier.c **** 
 716              		.loc 1 190 31 view .LVU172
 717 0198 07EE903A 		vmov	s15, r3	@ int
 718 019c F8EEE77A 		vcvt.f32.s32	s15, s15
 190:Src/synchronous_rectifier.c **** 
 719              		.loc 1 190 29 view .LVU173
 720 01a0 CDED037A 		vstr.32	s15, [sp, #12]
 192:Src/synchronous_rectifier.c ****                 positive_period += 65536.0f;
 721              		.loc 1 192 13 is_stmt 1 view .LVU174
 192:Src/synchronous_rectifier.c ****                 positive_period += 65536.0f;
 722              		.loc 1 192 33 is_stmt 0 view .LVU175
 723 01a4 DDED037A 		vldr.32	s15, [sp, #12]
 192:Src/synchronous_rectifier.c ****                 positive_period += 65536.0f;
 724              		.loc 1 192 16 view .LVU176
 725 01a8 F5EEC07A 		vcmpe.f32	s15, #0
 726 01ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /tmp/ccy4Xcy6.s 			page 19


 727 01b0 73D4     		bmi	.L61
 728              	.L37:
 195:Src/synchronous_rectifier.c ****                                 PositivePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 729              		.loc 1 195 13 is_stmt 1 view .LVU177
 195:Src/synchronous_rectifier.c ****                                 PositivePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 730              		.loc 1 195 50 is_stmt 0 view .LVU178
 731 01b2 9DED037A 		vldr.32	s14, [sp, #12]
 732 01b6 DFED497A 		vldr.32	s15, .L62+28
 733 01ba 67EE277A 		vmul.f32	s15, s14, s15
 734 01be 17EE900A 		vmov	r0, s15
 735 01c2 FFF7FEFF 		bl	__aeabi_f2d
 736              	.LVL54:
 737 01c6 0646     		mov	r6, r0
 738 01c8 0F46     		mov	r7, r1
 196:Src/synchronous_rectifier.c **** 
 739              		.loc 1 196 52 view .LVU179
 740 01ca 4B4C     		ldr	r4, .L62+56
 741              	.LVL55:
 196:Src/synchronous_rectifier.c **** 
 742              		.loc 1 196 52 view .LVU180
 743 01cc 2068     		ldr	r0, [r4]	@ float
 744 01ce FFF7FEFF 		bl	__aeabi_f2d
 745              	.LVL56:
 746 01d2 3BA3     		adr	r3, .L62
 747 01d4 D3E90023 		ldrd	r2, [r3]
 748 01d8 FFF7FEFF 		bl	__aeabi_dmul
 749              	.LVL57:
 195:Src/synchronous_rectifier.c ****                                 PositivePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 750              		.loc 1 195 78 view .LVU181
 751 01dc 0246     		mov	r2, r0
 752 01de 0B46     		mov	r3, r1
 753 01e0 3046     		mov	r0, r6
 754 01e2 3946     		mov	r1, r7
 755 01e4 FFF7FEFF 		bl	__aeabi_dadd
 756              	.LVL58:
 757 01e8 FFF7FEFF 		bl	__aeabi_d2f
 758              	.LVL59:
 195:Src/synchronous_rectifier.c ****                                 PositivePeriodInUs * (1.0 - CROSSING_EMA_FILTER_COEFF);
 759              		.loc 1 195 32 view .LVU182
 760 01ec 2060     		str	r0, [r4]	@ float
 198:Src/synchronous_rectifier.c ****             {
 761              		.loc 1 198 13 is_stmt 1 view .LVU183
 198:Src/synchronous_rectifier.c ****             {
 762              		.loc 1 198 34 is_stmt 0 view .LVU184
 763 01ee 3D4B     		ldr	r3, .L62+36
 764 01f0 D3ED007A 		vldr.32	s15, [r3]
 765 01f4 3C4B     		ldr	r3, .L62+40
 766 01f6 93ED007A 		vldr.32	s14, [r3]
 198:Src/synchronous_rectifier.c ****             {
 767              		.loc 1 198 16 view .LVU185
 768 01fa F4EEC77A 		vcmpe.f32	s15, s14
 769 01fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 770 0202 0DDD     		ble	.L39
 200:Src/synchronous_rectifier.c ****             }
 771              		.loc 1 200 17 is_stmt 1 view .LVU186
 200:Src/synchronous_rectifier.c ****             }
 772              		.loc 1 200 43 is_stmt 0 view .LVU187
ARM GAS  /tmp/ccy4Xcy6.s 			page 20


 773 0204 9DED037A 		vldr.32	s14, [sp, #12]
 774 0208 384B     		ldr	r3, .L62+44
 775 020a D3ED006A 		vldr.32	s13, [r3]
 776 020e 67EE266A 		vmul.f32	s13, s14, s13
 200:Src/synchronous_rectifier.c ****             }
 777              		.loc 1 200 23 view .LVU188
 778 0212 354B     		ldr	r3, .L62+40
 779 0214 93ED007A 		vldr.32	s14, [r3]
 780 0218 37EE267A 		vadd.f32	s14, s14, s13
 781 021c 83ED007A 		vstr.32	s14, [r3]
 782              	.L39:
 203:Src/synchronous_rectifier.c **** 
 783              		.loc 1 203 13 is_stmt 1 view .LVU189
 203:Src/synchronous_rectifier.c **** 
 784              		.loc 1 203 25 is_stmt 0 view .LVU190
 785 0220 BDF80630 		ldrh	r3, [sp, #6]
 786 0224 9BB2     		uxth	r3, r3
 787 0226 2C4A     		ldr	r2, .L62+24
 788 0228 1380     		strh	r3, [r2]	@ movhi
 205:Src/synchronous_rectifier.c ****             {
 789              		.loc 1 205 13 is_stmt 1 view .LVU191
 205:Src/synchronous_rectifier.c ****             {
 790              		.loc 1 205 23 is_stmt 0 view .LVU192
 791 022a 2F4B     		ldr	r3, .L62+40
 792 022c D3ED006A 		vldr.32	s13, [r3]
 205:Src/synchronous_rectifier.c ****             {
 793              		.loc 1 205 16 view .LVU193
 794 0230 9FED2F7A 		vldr.32	s14, .L62+48
 795 0234 F4EEC76A 		vcmpe.f32	s13, s14
 796 0238 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 797 023c 36D5     		bpl	.L50
 798              	.LBB6:
 207:Src/synchronous_rectifier.c ****                 ToSetDrive1 = TRUE;
 799              		.loc 1 207 17 is_stmt 1 view .LVU194
 800 023e 0022     		movs	r2, #0
 801 0240 4FF48071 		mov	r1, #256
 802 0244 2B48     		ldr	r0, .L62+52
 803 0246 FFF7FEFF 		bl	HAL_GPIO_WritePin
 804              	.LVL60:
 208:Src/synchronous_rectifier.c **** 
 805              		.loc 1 208 17 view .LVU195
 208:Src/synchronous_rectifier.c **** 
 806              		.loc 1 208 29 is_stmt 0 view .LVU196
 807 024a 224B     		ldr	r3, .L62+20
 808 024c 0122     		movs	r2, #1
 809 024e 1A70     		strb	r2, [r3]
 210:Src/synchronous_rectifier.c ****                 time2setdrive1 = ccr + (uint16_t)(NegativePeriodInUs * (1.0f - Alpha));
 810              		.loc 1 210 17 is_stmt 1 view .LVU197
 211:Src/synchronous_rectifier.c **** 
 811              		.loc 1 211 17 view .LVU198
 211:Src/synchronous_rectifier.c **** 
 812              		.loc 1 211 78 is_stmt 0 view .LVU199
 813 0250 254B     		ldr	r3, .L62+40
 814 0252 93ED007A 		vldr.32	s14, [r3]
 815 0256 F7EE007A 		vmov.f32	s15, #1.0e+0
 816 025a 77EEC77A 		vsub.f32	s15, s15, s14
 211:Src/synchronous_rectifier.c **** 
ARM GAS  /tmp/ccy4Xcy6.s 			page 21


 817              		.loc 1 211 70 view .LVU200
 818 025e 204B     		ldr	r3, .L62+32
 819 0260 93ED007A 		vldr.32	s14, [r3]
 820 0264 67EE877A 		vmul.f32	s15, s15, s14
 211:Src/synchronous_rectifier.c **** 
 821              		.loc 1 211 40 view .LVU201
 822 0268 FCEEE77A 		vcvt.u32.f32	s15, s15
 823 026c 17EE903A 		vmov	r3, s15	@ int
 211:Src/synchronous_rectifier.c **** 
 824              		.loc 1 211 38 view .LVU202
 825 0270 BDF80620 		ldrh	r2, [sp, #6]
 211:Src/synchronous_rectifier.c **** 
 826              		.loc 1 211 32 view .LVU203
 827 0274 12FA83F3 		uxtah	r3, r2, r3
 828 0278 9BB2     		uxth	r3, r3
 829              	.LVL61:
 214:Src/synchronous_rectifier.c ****                 HAL_TIM_OC_Start_IT(&htim3, TIM_CHANNEL_2);
 830              		.loc 1 214 17 is_stmt 1 view .LVU204
 831 027a 1348     		ldr	r0, .L62+8
 832 027c 0268     		ldr	r2, [r0]
 833 027e 9363     		str	r3, [r2, #56]
 215:Src/synchronous_rectifier.c ****             }
 834              		.loc 1 215 17 view .LVU205
 835 0280 0421     		movs	r1, #4
 836 0282 FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 837              	.LVL62:
 215:Src/synchronous_rectifier.c ****             }
 838              		.loc 1 215 17 is_stmt 0 view .LVU206
 839              	.LBE6:
 840 0286 C9E6     		b	.L26
 841              	.LVL63:
 842              	.L60:
 178:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 843              		.loc 1 178 17 is_stmt 1 view .LVU207
 178:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 844              		.loc 1 178 35 is_stmt 0 view .LVU208
 845 0288 2368     		ldr	r3, [r4]
 178:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 846              		.loc 1 178 45 view .LVU209
 847 028a 1B6C     		ldr	r3, [r3, #64]
 178:Src/synchronous_rectifier.c ****                 PhaseLocked = TRUE;
 848              		.loc 1 178 29 view .LVU210
 849 028c 9BB2     		uxth	r3, r3
 850 028e 124A     		ldr	r2, .L62+24
 851 0290 1380     		strh	r3, [r2]	@ movhi
 179:Src/synchronous_rectifier.c ****                 return;
 852              		.loc 1 179 17 is_stmt 1 view .LVU211
 179:Src/synchronous_rectifier.c ****                 return;
 853              		.loc 1 179 29 is_stmt 0 view .LVU212
 854 0292 0E4B     		ldr	r3, .L62+12
 855 0294 0122     		movs	r2, #1
 856 0296 1A70     		strb	r2, [r3]
 180:Src/synchronous_rectifier.c ****             }
 857              		.loc 1 180 17 is_stmt 1 view .LVU213
 858 0298 C0E6     		b	.L26
 859              	.L61:
 193:Src/synchronous_rectifier.c **** 
ARM GAS  /tmp/ccy4Xcy6.s 			page 22


 860              		.loc 1 193 17 view .LVU214
 193:Src/synchronous_rectifier.c **** 
 861              		.loc 1 193 33 is_stmt 0 view .LVU215
 862 029a DDED037A 		vldr.32	s15, [sp, #12]
 863 029e 9FED177A 		vldr.32	s14, .L62+60
 864 02a2 77EE877A 		vadd.f32	s15, s15, s14
 865 02a6 CDED037A 		vstr.32	s15, [sp, #12]
 866 02aa 82E7     		b	.L37
 867              	.LVL64:
 868              	.L50:
 219:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR1_DRIVE_GPIO_Port, THYRISTOR1_DRIVE_Pin, GPIO_PIN_SET);
 869              		.loc 1 219 17 is_stmt 1 view .LVU216
 219:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR1_DRIVE_GPIO_Port, THYRISTOR1_DRIVE_Pin, GPIO_PIN_SET);
 870              		.loc 1 219 23 is_stmt 0 view .LVU217
 871 02ac 0E4B     		ldr	r3, .L62+40
 872 02ae C3ED007A 		vstr.32	s15, [r3]
 220:Src/synchronous_rectifier.c ****             }
 873              		.loc 1 220 17 is_stmt 1 view .LVU218
 874 02b2 0122     		movs	r2, #1
 875 02b4 4FF40071 		mov	r1, #512
 876 02b8 0E48     		ldr	r0, .L62+52
 877 02ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 878              	.LVL65:
 879 02be ADE6     		b	.L26
 880              	.L63:
 881              		.align	3
 882              	.L62:
 883 02c0 00000098 		.word	2550136832
 884 02c4 9999E93F 		.word	1072273817
 885 02c8 00000000 		.word	htim3
 886 02cc 00000000 		.word	.LANCHOR8
 887 02d0 00000000 		.word	.LANCHOR6
 888 02d4 00000000 		.word	.LANCHOR7
 889 02d8 00000000 		.word	.LANCHOR5
 890 02dc CDCC4C3E 		.word	1045220557
 891 02e0 00000000 		.word	.LANCHOR4
 892 02e4 00000000 		.word	.LANCHOR1
 893 02e8 00000000 		.word	.LANCHOR0
 894 02ec 00000000 		.word	.LANCHOR2
 895 02f0 9A99193F 		.word	1058642330
 896 02f4 00040048 		.word	1207960576
 897 02f8 00000000 		.word	.LANCHOR3
 898 02fc 00008047 		.word	1199570944
 899              	.LBE5:
 900              		.cfi_endproc
 901              	.LFE130:
 903              		.section	.text.HAL_TIM_OC_DelayElapsedCallback,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_TIM_OC_DelayElapsedCallback
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	HAL_TIM_OC_DelayElapsedCallback:
 912              	.LVL66:
 913              	.LFB131:
 225:Src/synchronous_rectifier.c **** 
ARM GAS  /tmp/ccy4Xcy6.s 			page 23


 226:Src/synchronous_rectifier.c **** void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 227:Src/synchronous_rectifier.c **** {
 914              		.loc 1 227 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 228:Src/synchronous_rectifier.c ****     if (htim == &htim3)
 918              		.loc 1 228 5 view .LVU220
 919              		.loc 1 228 8 is_stmt 0 view .LVU221
 920 0000 144B     		ldr	r3, .L74
 921 0002 9842     		cmp	r0, r3
 922 0004 00D0     		beq	.L71
 923 0006 7047     		bx	lr
 924              	.L71:
 227:Src/synchronous_rectifier.c ****     if (htim == &htim3)
 925              		.loc 1 227 1 view .LVU222
 926 0008 10B5     		push	{r4, lr}
 927              	.LCFI9:
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 4, -8
 930              		.cfi_offset 14, -4
 931 000a 0446     		mov	r4, r0
 229:Src/synchronous_rectifier.c ****     {
 230:Src/synchronous_rectifier.c ****         if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 932              		.loc 1 230 9 is_stmt 1 view .LVU223
 933              		.loc 1 230 17 is_stmt 0 view .LVU224
 934 000c 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 935              		.loc 1 230 12 view .LVU225
 936 000e 012B     		cmp	r3, #1
 937 0010 03D0     		beq	.L72
 938              	.LVL67:
 939              	.L66:
 231:Src/synchronous_rectifier.c ****         {
 232:Src/synchronous_rectifier.c ****             if (ToSetDrive0)
 233:Src/synchronous_rectifier.c ****             {
 234:Src/synchronous_rectifier.c ****                 ToSetDrive0 = FALSE;
 235:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR0_DRIVE_GPIO_Port, THYRISTOR0_DRIVE_Pin, GPIO_PIN_SET);
 236:Src/synchronous_rectifier.c ****             }
 237:Src/synchronous_rectifier.c ****         }
 238:Src/synchronous_rectifier.c **** 
 239:Src/synchronous_rectifier.c ****         if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_2)
 940              		.loc 1 239 9 is_stmt 1 view .LVU226
 941              		.loc 1 239 17 is_stmt 0 view .LVU227
 942 0012 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 943              		.loc 1 239 12 view .LVU228
 944 0014 022B     		cmp	r3, #2
 945 0016 0ED0     		beq	.L73
 946              	.L64:
 240:Src/synchronous_rectifier.c ****         {
 241:Src/synchronous_rectifier.c ****             if (ToSetDrive1)
 242:Src/synchronous_rectifier.c ****             {
 243:Src/synchronous_rectifier.c ****                 ToSetDrive1 = FALSE;
 244:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR1_DRIVE_GPIO_Port, THYRISTOR1_DRIVE_Pin, GPIO_PIN_SET);
 245:Src/synchronous_rectifier.c ****             }
 246:Src/synchronous_rectifier.c ****         }
 247:Src/synchronous_rectifier.c ****     }
 248:Src/synchronous_rectifier.c **** }
ARM GAS  /tmp/ccy4Xcy6.s 			page 24


 947              		.loc 1 248 1 view .LVU229
 948 0018 10BD     		pop	{r4, pc}
 949              	.LVL68:
 950              	.L72:
 232:Src/synchronous_rectifier.c ****             {
 951              		.loc 1 232 13 is_stmt 1 view .LVU230
 232:Src/synchronous_rectifier.c ****             {
 952              		.loc 1 232 17 is_stmt 0 view .LVU231
 953 001a 0F4B     		ldr	r3, .L74+4
 954 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 232:Src/synchronous_rectifier.c ****             {
 955              		.loc 1 232 16 view .LVU232
 956 001e 002B     		cmp	r3, #0
 957 0020 F7D0     		beq	.L66
 234:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR0_DRIVE_GPIO_Port, THYRISTOR0_DRIVE_Pin, GPIO_PIN_SET);
 958              		.loc 1 234 17 is_stmt 1 view .LVU233
 234:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR0_DRIVE_GPIO_Port, THYRISTOR0_DRIVE_Pin, GPIO_PIN_SET);
 959              		.loc 1 234 29 is_stmt 0 view .LVU234
 960 0022 0D4B     		ldr	r3, .L74+4
 961 0024 0022     		movs	r2, #0
 962 0026 1A70     		strb	r2, [r3]
 235:Src/synchronous_rectifier.c ****             }
 963              		.loc 1 235 17 is_stmt 1 view .LVU235
 964 0028 0122     		movs	r2, #1
 965 002a 4FF48071 		mov	r1, #256
 966 002e 0B48     		ldr	r0, .L74+8
 967              	.LVL69:
 235:Src/synchronous_rectifier.c ****             }
 968              		.loc 1 235 17 is_stmt 0 view .LVU236
 969 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 970              	.LVL70:
 971 0034 EDE7     		b	.L66
 972              	.L73:
 241:Src/synchronous_rectifier.c ****             {
 973              		.loc 1 241 13 is_stmt 1 view .LVU237
 241:Src/synchronous_rectifier.c ****             {
 974              		.loc 1 241 17 is_stmt 0 view .LVU238
 975 0036 0A4B     		ldr	r3, .L74+12
 976 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 241:Src/synchronous_rectifier.c ****             {
 977              		.loc 1 241 16 view .LVU239
 978 003a 002B     		cmp	r3, #0
 979 003c ECD0     		beq	.L64
 243:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR1_DRIVE_GPIO_Port, THYRISTOR1_DRIVE_Pin, GPIO_PIN_SET);
 980              		.loc 1 243 17 is_stmt 1 view .LVU240
 243:Src/synchronous_rectifier.c ****                 HAL_GPIO_WritePin(THYRISTOR1_DRIVE_GPIO_Port, THYRISTOR1_DRIVE_Pin, GPIO_PIN_SET);
 981              		.loc 1 243 29 is_stmt 0 view .LVU241
 982 003e 084B     		ldr	r3, .L74+12
 983 0040 0022     		movs	r2, #0
 984 0042 1A70     		strb	r2, [r3]
 244:Src/synchronous_rectifier.c ****             }
 985              		.loc 1 244 17 is_stmt 1 view .LVU242
 986 0044 0122     		movs	r2, #1
 987 0046 4FF40071 		mov	r1, #512
 988 004a 0448     		ldr	r0, .L74+8
 989 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 990              	.LVL71:
ARM GAS  /tmp/ccy4Xcy6.s 			page 25


 991              		.loc 1 248 1 is_stmt 0 view .LVU243
 992 0050 E2E7     		b	.L64
 993              	.L75:
 994 0052 00BF     		.align	2
 995              	.L74:
 996 0054 00000000 		.word	htim3
 997 0058 00000000 		.word	.LANCHOR6
 998 005c 00040048 		.word	1207960576
 999 0060 00000000 		.word	.LANCHOR7
 1000              		.cfi_endproc
 1001              	.LFE131:
 1003              		.section	.bss.Alpha,"aw",%nobits
 1004              		.align	2
 1005              		.set	.LANCHOR0,. + 0
 1008              	Alpha:
 1009 0000 00000000 		.space	4
 1010              		.section	.bss.AlphaDestination,"aw",%nobits
 1011              		.align	2
 1012              		.set	.LANCHOR1,. + 0
 1015              	AlphaDestination:
 1016 0000 00000000 		.space	4
 1017              		.section	.bss.AlphaSlewRate,"aw",%nobits
 1018              		.align	2
 1019              		.set	.LANCHOR2,. + 0
 1022              	AlphaSlewRate:
 1023 0000 00000000 		.space	4
 1024              		.section	.bss.LastCapture,"aw",%nobits
 1025              		.align	1
 1026              		.set	.LANCHOR5,. + 0
 1029              	LastCapture:
 1030 0000 0000     		.space	2
 1031              		.section	.bss.NegativePeriodInUs,"aw",%nobits
 1032              		.align	2
 1033              		.set	.LANCHOR4,. + 0
 1036              	NegativePeriodInUs:
 1037 0000 00000000 		.space	4
 1038              		.section	.bss.PhaseLocked,"aw",%nobits
 1039              		.set	.LANCHOR8,. + 0
 1042              	PhaseLocked:
 1043 0000 00       		.space	1
 1044              		.section	.bss.PositivePeriodInUs,"aw",%nobits
 1045              		.align	2
 1046              		.set	.LANCHOR3,. + 0
 1049              	PositivePeriodInUs:
 1050 0000 00000000 		.space	4
 1051              		.section	.bss.ToSetDrive0,"aw",%nobits
 1052              		.set	.LANCHOR6,. + 0
 1055              	ToSetDrive0:
 1056 0000 00       		.space	1
 1057              		.section	.bss.ToSetDrive1,"aw",%nobits
 1058              		.set	.LANCHOR7,. + 0
 1061              	ToSetDrive1:
 1062 0000 00       		.space	1
 1063              		.text
 1064              	.Letext0:
 1065              		.file 2 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine
 1066              		.file 3 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_st
ARM GAS  /tmp/ccy4Xcy6.s 			page 26


 1067              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1068              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1069              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 1070              		.file 7 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/loc
 1071              		.file 8 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_ty
 1072              		.file 9 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/i
 1073              		.file 10 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/re
 1074              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1075              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1076              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1077              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1078              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1079              		.file 16 "Inc/global.h"
 1080              		.file 17 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/math.h
ARM GAS  /tmp/ccy4Xcy6.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 synchronous_rectifier.c
     /tmp/ccy4Xcy6.s:18     .text.Sr_Start:0000000000000000 $t
     /tmp/ccy4Xcy6.s:26     .text.Sr_Start:0000000000000000 Sr_Start
     /tmp/ccy4Xcy6.s:108    .text.Sr_Start:000000000000005c $d
     /tmp/ccy4Xcy6.s:124    .text.Sr_IsStabilized:0000000000000000 $t
     /tmp/ccy4Xcy6.s:131    .text.Sr_IsStabilized:0000000000000000 Sr_IsStabilized
     /tmp/ccy4Xcy6.s:146    .text.Sr_Stop:0000000000000000 $t
     /tmp/ccy4Xcy6.s:153    .text.Sr_Stop:0000000000000000 Sr_Stop
     /tmp/ccy4Xcy6.s:180    .text.Sr_Stop:0000000000000018 $d
     /tmp/ccy4Xcy6.s:189    .text.Sr_SetVoltage:0000000000000000 $t
     /tmp/ccy4Xcy6.s:196    .text.Sr_SetVoltage:0000000000000000 Sr_SetVoltage
     /tmp/ccy4Xcy6.s:406    .text.Sr_SetVoltage:0000000000000138 $d
     /tmp/ccy4Xcy6.s:422    .text.HAL_TIM_IC_CaptureCallback:0000000000000000 $t
     /tmp/ccy4Xcy6.s:429    .text.HAL_TIM_IC_CaptureCallback:0000000000000000 HAL_TIM_IC_CaptureCallback
     /tmp/ccy4Xcy6.s:883    .text.HAL_TIM_IC_CaptureCallback:00000000000002c0 $d
     /tmp/ccy4Xcy6.s:904    .text.HAL_TIM_OC_DelayElapsedCallback:0000000000000000 $t
     /tmp/ccy4Xcy6.s:911    .text.HAL_TIM_OC_DelayElapsedCallback:0000000000000000 HAL_TIM_OC_DelayElapsedCallback
     /tmp/ccy4Xcy6.s:996    .text.HAL_TIM_OC_DelayElapsedCallback:0000000000000054 $d
     /tmp/ccy4Xcy6.s:1004   .bss.Alpha:0000000000000000 $d
     /tmp/ccy4Xcy6.s:1008   .bss.Alpha:0000000000000000 Alpha
     /tmp/ccy4Xcy6.s:1011   .bss.AlphaDestination:0000000000000000 $d
     /tmp/ccy4Xcy6.s:1015   .bss.AlphaDestination:0000000000000000 AlphaDestination
     /tmp/ccy4Xcy6.s:1018   .bss.AlphaSlewRate:0000000000000000 $d
     /tmp/ccy4Xcy6.s:1022   .bss.AlphaSlewRate:0000000000000000 AlphaSlewRate
     /tmp/ccy4Xcy6.s:1025   .bss.LastCapture:0000000000000000 $d
     /tmp/ccy4Xcy6.s:1029   .bss.LastCapture:0000000000000000 LastCapture
     /tmp/ccy4Xcy6.s:1032   .bss.NegativePeriodInUs:0000000000000000 $d
     /tmp/ccy4Xcy6.s:1036   .bss.NegativePeriodInUs:0000000000000000 NegativePeriodInUs
     /tmp/ccy4Xcy6.s:1042   .bss.PhaseLocked:0000000000000000 PhaseLocked
     /tmp/ccy4Xcy6.s:1043   .bss.PhaseLocked:0000000000000000 $d
     /tmp/ccy4Xcy6.s:1045   .bss.PositivePeriodInUs:0000000000000000 $d
     /tmp/ccy4Xcy6.s:1049   .bss.PositivePeriodInUs:0000000000000000 PositivePeriodInUs
     /tmp/ccy4Xcy6.s:1055   .bss.ToSetDrive0:0000000000000000 ToSetDrive0
     /tmp/ccy4Xcy6.s:1056   .bss.ToSetDrive0:0000000000000000 $d
     /tmp/ccy4Xcy6.s:1061   .bss.ToSetDrive1:0000000000000000 ToSetDrive1
     /tmp/ccy4Xcy6.s:1062   .bss.ToSetDrive1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_TIM_IC_Start_IT
htim3
HAL_TIM_IC_Stop_IT
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
sinf
asinf
__aeabi_dadd
HAL_TIM_OC_Start_IT
