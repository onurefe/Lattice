ARM GAS  /tmp/cc87BusA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    ****   /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    ****   /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "lattice.h"
  24:Src/main.c    **** #include "eeprom_emulator.h"
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/cc87BusA.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** ADC_HandleTypeDef hadc1;
  47:Src/main.c    **** DMA_HandleTypeDef hdma_adc1;
  48:Src/main.c    **** 
  49:Src/main.c    **** HRTIM_HandleTypeDef hhrtim1;
  50:Src/main.c    **** 
  51:Src/main.c    **** UART_HandleTypeDef huart1;
  52:Src/main.c    **** UART_HandleTypeDef huart3;
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** static void MX_GPIO_Init(void);
  61:Src/main.c    **** static void MX_DMA_Init(void);
  62:Src/main.c    **** static void MX_HRTIM1_Init(void);
  63:Src/main.c    **** static void MX_ADC1_Init(void);
  64:Src/main.c    **** static void MX_USART1_UART_Init(void);
  65:Src/main.c    **** static void MX_USART3_UART_Init(void);
  66:Src/main.c    **** /* USER CODE BEGIN PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PFP */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  71:Src/main.c    **** /* USER CODE BEGIN 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /**
  76:Src/main.c    ****   * @brief  The application entry point.
  77:Src/main.c    ****   * @retval int
  78:Src/main.c    ****   */
  79:Src/main.c    **** int main(void)
  80:Src/main.c    **** {
  81:Src/main.c    ****     /* USER CODE BEGIN 1 */
  82:Src/main.c    **** 
  83:Src/main.c    ****     /* USER CODE END 1 */
  84:Src/main.c    **** 
  85:Src/main.c    ****     /* MCU Configuration--------------------------------------------------------*/
  86:Src/main.c    **** 
  87:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Src/main.c    ****     HAL_Init();
ARM GAS  /tmp/cc87BusA.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****     /* USER CODE BEGIN Init */
  91:Src/main.c    **** 
  92:Src/main.c    ****     /* USER CODE END Init */
  93:Src/main.c    **** 
  94:Src/main.c    ****     /* Configure the system clock */
  95:Src/main.c    ****     SystemClock_Config();
  96:Src/main.c    **** 
  97:Src/main.c    ****     /* USER CODE BEGIN SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****     /* USER CODE END SysInit */
 100:Src/main.c    **** 
 101:Src/main.c    ****     /* Initialize all configured peripherals */
 102:Src/main.c    ****     MX_GPIO_Init();
 103:Src/main.c    ****     MX_DMA_Init();
 104:Src/main.c    ****     MX_HRTIM1_Init();
 105:Src/main.c    ****     MX_ADC1_Init();
 106:Src/main.c    ****     MX_USART1_UART_Init();
 107:Src/main.c    ****     MX_USART3_UART_Init();
 108:Src/main.c    **** 
 109:Src/main.c    ****     /* USER CODE BEGIN 2 */
 110:Src/main.c    ****     HAL_Delay(STARTUP_DELAY_IN_MS);
 111:Src/main.c    **** 
 112:Src/main.c    ****     // Turn on the contactor.
 113:Src/main.c    ****     EepromEmulator_Init();
 114:Src/main.c    ****     HAL_GPIO_WritePin(CONTACTOR_CTRL_GPIO_Port, CONTACTOR_CTRL_Pin, GPIO_PIN_RESET);
 115:Src/main.c    ****     Lattice_Start();
 116:Src/main.c    ****     /* USER CODE END 2 */
 117:Src/main.c    **** 
 118:Src/main.c    ****     /* Infinite loop */
 119:Src/main.c    ****     /* USER CODE BEGIN WHILE */
 120:Src/main.c    ****     while (1)
 121:Src/main.c    ****     {
 122:Src/main.c    ****         Lattice_Execute();
 123:Src/main.c    ****         /* USER CODE END WHILE */
 124:Src/main.c    **** 
 125:Src/main.c    ****         /* USER CODE BEGIN 3 */
 126:Src/main.c    ****     }
 127:Src/main.c    ****     /* USER CODE END 3 */
 128:Src/main.c    **** }
 129:Src/main.c    **** 
 130:Src/main.c    **** /**
 131:Src/main.c    ****   * @brief System Clock Configuration
 132:Src/main.c    ****   * @retval None
 133:Src/main.c    ****   */
 134:Src/main.c    **** void SystemClock_Config(void)
 135:Src/main.c    **** {
 136:Src/main.c    ****     RCC_OscInitTypeDef RCC_OscInitStruct ={ 0 };
 137:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct ={ 0 };
 138:Src/main.c    ****     RCC_PeriphCLKInitTypeDef PeriphClkInit ={ 0 };
 139:Src/main.c    **** 
 140:Src/main.c    ****     /** Initializes the CPU, AHB and APB busses clocks
 141:Src/main.c    ****     */
 142:Src/main.c    ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 143:Src/main.c    ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 144:Src/main.c    ****     RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 145:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/cc87BusA.s 			page 4


 146:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 147:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 148:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 149:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 150:Src/main.c    ****     {
 151:Src/main.c    ****         Error_Handler();
 152:Src/main.c    ****     }
 153:Src/main.c    ****     /** Initializes the CPU, AHB and APB busses clocks
 154:Src/main.c    ****     */
 155:Src/main.c    ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 156:Src/main.c    ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 159:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Src/main.c    **** 
 161:Src/main.c    ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 162:Src/main.c    ****     {
 163:Src/main.c    ****         Error_Handler();
 164:Src/main.c    ****     }
 165:Src/main.c    ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_HRTIM1 | RCC_PERIPHCLK_USART1;
 166:Src/main.c    ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 167:Src/main.c    ****     PeriphClkInit.Hrtim1ClockSelection = RCC_HRTIM1CLK_PLLCLK;
 168:Src/main.c    ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 169:Src/main.c    ****     {
 170:Src/main.c    ****         Error_Handler();
 171:Src/main.c    ****     }
 172:Src/main.c    **** }
 173:Src/main.c    **** 
 174:Src/main.c    **** /**
 175:Src/main.c    ****   * @brief ADC1 Initialization Function
 176:Src/main.c    ****   * @param None
 177:Src/main.c    ****   * @retval None
 178:Src/main.c    ****   */
 179:Src/main.c    **** static void MX_ADC1_Init(void)
 180:Src/main.c    **** {
 181:Src/main.c    **** 
 182:Src/main.c    ****     /* USER CODE BEGIN ADC1_Init 0 */
 183:Src/main.c    **** 
 184:Src/main.c    ****     /* USER CODE END ADC1_Init 0 */
 185:Src/main.c    **** 
 186:Src/main.c    ****     ADC_MultiModeTypeDef multimode ={ 0 };
 187:Src/main.c    ****     ADC_ChannelConfTypeDef sConfig ={ 0 };
 188:Src/main.c    **** 
 189:Src/main.c    ****     /* USER CODE BEGIN ADC1_Init 1 */
 190:Src/main.c    **** 
 191:Src/main.c    ****     /* USER CODE END ADC1_Init 1 */
 192:Src/main.c    ****     /** Common config
 193:Src/main.c    ****     */
 194:Src/main.c    ****     hadc1.Instance = ADC1;
 195:Src/main.c    ****     hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 196:Src/main.c    ****     hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 197:Src/main.c    ****     hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 198:Src/main.c    ****     hadc1.Init.ContinuousConvMode = DISABLE;
 199:Src/main.c    ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 200:Src/main.c    ****     hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 201:Src/main.c    ****     hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONVHRTIM_TRG1;
 202:Src/main.c    ****     hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
ARM GAS  /tmp/cc87BusA.s 			page 5


 203:Src/main.c    ****     hadc1.Init.NbrOfConversion = 2;
 204:Src/main.c    ****     hadc1.Init.DMAContinuousRequests = ENABLE;
 205:Src/main.c    ****     hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 206:Src/main.c    ****     hadc1.Init.LowPowerAutoWait = DISABLE;
 207:Src/main.c    ****     hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 208:Src/main.c    ****     if (HAL_ADC_Init(&hadc1) != HAL_OK)
 209:Src/main.c    ****     {
 210:Src/main.c    ****         Error_Handler();
 211:Src/main.c    ****     }
 212:Src/main.c    ****     /** Configure the ADC multi-mode
 213:Src/main.c    ****     */
 214:Src/main.c    ****     multimode.Mode = ADC_MODE_INDEPENDENT;
 215:Src/main.c    ****     if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 216:Src/main.c    ****     {
 217:Src/main.c    ****         Error_Handler();
 218:Src/main.c    ****     }
 219:Src/main.c    ****     /** Configure Regular Channel
 220:Src/main.c    ****     */
 221:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_1;
 222:Src/main.c    ****     sConfig.Rank = ADC_REGULAR_RANK_1;
 223:Src/main.c    ****     sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 224:Src/main.c    ****     sConfig.SamplingTime = ADC_SAMPLETIME_19CYCLES_5;
 225:Src/main.c    ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;
 226:Src/main.c    ****     sConfig.Offset = 0;
 227:Src/main.c    ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 228:Src/main.c    ****     {
 229:Src/main.c    ****         Error_Handler();
 230:Src/main.c    ****     }
 231:Src/main.c    ****     /** Configure Regular Channel
 232:Src/main.c    ****     */
 233:Src/main.c    ****     sConfig.Channel = ADC_CHANNEL_3;
 234:Src/main.c    ****     sConfig.Rank = ADC_REGULAR_RANK_2;
 235:Src/main.c    ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 236:Src/main.c    ****     {
 237:Src/main.c    ****         Error_Handler();
 238:Src/main.c    ****     }
 239:Src/main.c    ****     /* USER CODE BEGIN ADC1_Init 2 */
 240:Src/main.c    **** 
 241:Src/main.c    ****     /* USER CODE END ADC1_Init 2 */
 242:Src/main.c    **** }
 243:Src/main.c    **** 
 244:Src/main.c    **** /**
 245:Src/main.c    ****   * @brief HRTIM1 Initialization Function
 246:Src/main.c    ****   * @param None
 247:Src/main.c    ****   * @retval None
 248:Src/main.c    ****   */
 249:Src/main.c    **** static void MX_HRTIM1_Init(void)
 250:Src/main.c    **** {
 251:Src/main.c    **** 
 252:Src/main.c    ****     /* USER CODE BEGIN HRTIM1_Init 0 */
 253:Src/main.c    **** 
 254:Src/main.c    ****     /* USER CODE END HRTIM1_Init 0 */
 255:Src/main.c    **** 
 256:Src/main.c    ****     HRTIM_ADCTriggerCfgTypeDef pADCTriggerCfg ={ 0 };
 257:Src/main.c    ****     HRTIM_TimeBaseCfgTypeDef pTimeBaseCfg ={ 0 };
 258:Src/main.c    ****     HRTIM_TimerCfgTypeDef pTimerCfg ={ 0 };
 259:Src/main.c    ****     HRTIM_CompareCfgTypeDef pCompareCfg ={ 0 };
ARM GAS  /tmp/cc87BusA.s 			page 6


 260:Src/main.c    ****     HRTIM_DeadTimeCfgTypeDef pDeadTimeCfg ={ 0 };
 261:Src/main.c    ****     HRTIM_OutputCfgTypeDef pOutputCfg ={ 0 };
 262:Src/main.c    **** 
 263:Src/main.c    ****     /* USER CODE BEGIN HRTIM1_Init 1 */
 264:Src/main.c    **** 
 265:Src/main.c    ****     /* USER CODE END HRTIM1_Init 1 */
 266:Src/main.c    ****     hhrtim1.Instance = HRTIM1;
 267:Src/main.c    ****     hhrtim1.Init.HRTIMInterruptResquests = HRTIM_IT_NONE;
 268:Src/main.c    ****     hhrtim1.Init.SyncOptions = HRTIM_SYNCOPTION_NONE;
 269:Src/main.c    ****     if (HAL_HRTIM_Init(&hhrtim1) != HAL_OK)
 270:Src/main.c    ****     {
 271:Src/main.c    ****         Error_Handler();
 272:Src/main.c    ****     }
 273:Src/main.c    ****     if (HAL_HRTIM_DLLCalibrationStart(&hhrtim1, HRTIM_CALIBRATIONRATE_14) != HAL_OK)
 274:Src/main.c    ****     {
 275:Src/main.c    ****         Error_Handler();
 276:Src/main.c    ****     }
 277:Src/main.c    ****     if (HAL_HRTIM_PollForDLLCalibration(&hhrtim1, 10) != HAL_OK)
 278:Src/main.c    ****     {
 279:Src/main.c    ****         Error_Handler();
 280:Src/main.c    ****     }
 281:Src/main.c    ****     pADCTriggerCfg.UpdateSource = HRTIM_ADCTRIGGERUPDATE_TIMER_B;
 282:Src/main.c    ****     pADCTriggerCfg.Trigger = HRTIM_ADCTRIGGEREVENT13_TIMERB_CMP2;
 283:Src/main.c    ****     if (HAL_HRTIM_ADCTriggerConfig(&hhrtim1, HRTIM_ADCTRIGGER_1, &pADCTriggerCfg) != HAL_OK)
 284:Src/main.c    ****     {
 285:Src/main.c    ****         Error_Handler();
 286:Src/main.c    ****     }
 287:Src/main.c    ****     pTimeBaseCfg.Period = 0xFFF7;
 288:Src/main.c    ****     pTimeBaseCfg.RepetitionCounter = 0x00;
 289:Src/main.c    ****     pTimeBaseCfg.PrescalerRatio = HRTIM_PRESCALERRATIO_MUL8;
 290:Src/main.c    ****     pTimeBaseCfg.Mode = HRTIM_MODE_CONTINUOUS;
 291:Src/main.c    ****     if (HAL_HRTIM_TimeBaseConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pTimeBaseCfg) != HAL_OK)
 292:Src/main.c    ****     {
 293:Src/main.c    ****         Error_Handler();
 294:Src/main.c    ****     }
 295:Src/main.c    ****     pTimerCfg.InterruptRequests = HRTIM_TIM_IT_NONE;
 296:Src/main.c    ****     pTimerCfg.DMARequests = HRTIM_TIM_DMA_NONE;
 297:Src/main.c    ****     pTimerCfg.DMASrcAddress = 0x0000;
 298:Src/main.c    ****     pTimerCfg.DMADstAddress = 0x0000;
 299:Src/main.c    ****     pTimerCfg.DMASize = 0x1;
 300:Src/main.c    ****     pTimerCfg.HalfModeEnable = HRTIM_HALFMODE_DISABLED;
 301:Src/main.c    ****     pTimerCfg.StartOnSync = HRTIM_SYNCSTART_DISABLED;
 302:Src/main.c    ****     pTimerCfg.ResetOnSync = HRTIM_SYNCRESET_DISABLED;
 303:Src/main.c    ****     pTimerCfg.DACSynchro = HRTIM_DACSYNC_NONE;
 304:Src/main.c    ****     pTimerCfg.PreloadEnable = HRTIM_PRELOAD_ENABLED;
 305:Src/main.c    ****     pTimerCfg.UpdateGating = HRTIM_UPDATEGATING_INDEPENDENT;
 306:Src/main.c    ****     pTimerCfg.BurstMode = HRTIM_TIMERBURSTMODE_MAINTAINCLOCK;
 307:Src/main.c    ****     pTimerCfg.RepetitionUpdate = HRTIM_UPDATEONREPETITION_DISABLED;
 308:Src/main.c    ****     pTimerCfg.PushPull = HRTIM_TIMPUSHPULLMODE_DISABLED;
 309:Src/main.c    ****     pTimerCfg.FaultEnable = HRTIM_TIMFAULTENABLE_NONE;
 310:Src/main.c    ****     pTimerCfg.FaultLock = HRTIM_TIMFAULTLOCK_READONLY;
 311:Src/main.c    ****     pTimerCfg.DeadTimeInsertion = HRTIM_TIMDEADTIMEINSERTION_ENABLED;
 312:Src/main.c    ****     pTimerCfg.DelayedProtectionMode = HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DISABLED;
 313:Src/main.c    ****     pTimerCfg.UpdateTrigger = HRTIM_TIMUPDATETRIGGER_NONE;
 314:Src/main.c    ****     pTimerCfg.ResetTrigger = HRTIM_TIMRESETTRIGGER_NONE;
 315:Src/main.c    ****     pTimerCfg.ResetUpdate = HRTIM_TIMUPDATEONRESET_ENABLED;
 316:Src/main.c    ****     if (HAL_HRTIM_WaveformTimerConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pTimerCfg) != HAL_OK)
ARM GAS  /tmp/cc87BusA.s 			page 7


 317:Src/main.c    ****     {
 318:Src/main.c    ****         Error_Handler();
 319:Src/main.c    ****     }
 320:Src/main.c    ****     pTimerCfg.DMASrcAddress = 0x0000;
 321:Src/main.c    ****     pTimerCfg.DMADstAddress = 0x0000;
 322:Src/main.c    ****     pTimerCfg.DMASize = 0x1;
 323:Src/main.c    ****     pTimerCfg.FaultLock = HRTIM_TIMFAULTLOCK_READWRITE;
 324:Src/main.c    ****     pTimerCfg.DeadTimeInsertion = HRTIM_TIMDEADTIMEINSERTION_DISABLED;
 325:Src/main.c    ****     pTimerCfg.UpdateTrigger = HRTIM_TIMUPDATETRIGGER_TIMER_A;
 326:Src/main.c    ****     pTimerCfg.ResetTrigger = HRTIM_TIMRESETTRIGGER_OTHER1_CMP1;
 327:Src/main.c    ****     pTimerCfg.ResetUpdate = HRTIM_TIMUPDATEONRESET_DISABLED;
 328:Src/main.c    ****     if (HAL_HRTIM_WaveformTimerConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_B, &pTimerCfg) != HAL_OK)
 329:Src/main.c    ****     {
 330:Src/main.c    ****         Error_Handler();
 331:Src/main.c    ****     }
 332:Src/main.c    ****     pCompareCfg.CompareValue = 0x0018;
 333:Src/main.c    ****     if (HAL_HRTIM_WaveformCompareConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_COMPAREUNIT_1, &p
 334:Src/main.c    ****     {
 335:Src/main.c    ****         Error_Handler();
 336:Src/main.c    ****     }
 337:Src/main.c    ****     pCompareCfg.CompareValue = 0xFFF7;
 338:Src/main.c    ****     pCompareCfg.AutoDelayedMode = HRTIM_AUTODELAYEDMODE_REGULAR;
 339:Src/main.c    ****     pCompareCfg.AutoDelayedTimeout = 0x0000;
 340:Src/main.c    **** 
 341:Src/main.c    ****     if (HAL_HRTIM_WaveformCompareConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_COMPAREUNIT_2, &p
 342:Src/main.c    ****     {
 343:Src/main.c    ****         Error_Handler();
 344:Src/main.c    ****     }
 345:Src/main.c    ****     pCompareCfg.CompareValue = 0x8000;
 346:Src/main.c    ****     pCompareCfg.AutoDelayedTimeout = 0x0000;
 347:Src/main.c    **** 
 348:Src/main.c    ****     if (HAL_HRTIM_WaveformCompareConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_B, HRTIM_COMPAREUNIT_2, &p
 349:Src/main.c    ****     {
 350:Src/main.c    ****         Error_Handler();
 351:Src/main.c    ****     }
 352:Src/main.c    ****     pDeadTimeCfg.Prescaler = HRTIM_TIMDEADTIME_PRESCALERRATIO_DIV1;
 353:Src/main.c    ****     pDeadTimeCfg.RisingValue = 360;
 354:Src/main.c    ****     pDeadTimeCfg.RisingSign = HRTIM_TIMDEADTIME_RISINGSIGN_POSITIVE;
 355:Src/main.c    ****     pDeadTimeCfg.RisingLock = HRTIM_TIMDEADTIME_RISINGLOCK_READONLY;
 356:Src/main.c    ****     pDeadTimeCfg.RisingSignLock = HRTIM_TIMDEADTIME_RISINGSIGNLOCK_READONLY;
 357:Src/main.c    ****     pDeadTimeCfg.FallingValue = 332;
 358:Src/main.c    ****     pDeadTimeCfg.FallingSign = HRTIM_TIMDEADTIME_FALLINGSIGN_POSITIVE;
 359:Src/main.c    ****     pDeadTimeCfg.FallingLock = HRTIM_TIMDEADTIME_FALLINGLOCK_READONLY;
 360:Src/main.c    ****     pDeadTimeCfg.FallingSignLock = HRTIM_TIMDEADTIME_FALLINGSIGNLOCK_READONLY;
 361:Src/main.c    ****     if (HAL_HRTIM_DeadTimeConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pDeadTimeCfg) != HAL_OK)
 362:Src/main.c    ****     {
 363:Src/main.c    ****         Error_Handler();
 364:Src/main.c    ****     }
 365:Src/main.c    ****     pOutputCfg.Polarity = HRTIM_OUTPUTPOLARITY_LOW;
 366:Src/main.c    ****     pOutputCfg.SetSource = HRTIM_OUTPUTSET_TIMPER;
 367:Src/main.c    ****     pOutputCfg.ResetSource = HRTIM_OUTPUTRESET_TIMCMP2;
 368:Src/main.c    ****     pOutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
 369:Src/main.c    ****     pOutputCfg.IdleLevel = HRTIM_OUTPUTIDLELEVEL_INACTIVE;
 370:Src/main.c    ****     pOutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
 371:Src/main.c    ****     pOutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
 372:Src/main.c    ****     pOutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
 373:Src/main.c    ****     if (HAL_HRTIM_WaveformOutputConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_OUTPUT_TA1, &pOutp
ARM GAS  /tmp/cc87BusA.s 			page 8


 374:Src/main.c    ****     {
 375:Src/main.c    ****         Error_Handler();
 376:Src/main.c    ****     }
 377:Src/main.c    ****     pOutputCfg.SetSource = HRTIM_OUTPUTSET_NONE;
 378:Src/main.c    ****     pOutputCfg.ResetSource = HRTIM_OUTPUTRESET_NONE;
 379:Src/main.c    ****     if (HAL_HRTIM_WaveformOutputConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_OUTPUT_TA2, &pOutp
 380:Src/main.c    ****     {
 381:Src/main.c    ****         Error_Handler();
 382:Src/main.c    ****     }
 383:Src/main.c    ****     if (HAL_HRTIM_TimeBaseConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_B, &pTimeBaseCfg) != HAL_OK)
 384:Src/main.c    ****     {
 385:Src/main.c    ****         Error_Handler();
 386:Src/main.c    ****     }
 387:Src/main.c    ****     /* USER CODE BEGIN HRTIM1_Init 2 */
 388:Src/main.c    **** 
 389:Src/main.c    ****     /* USER CODE END HRTIM1_Init 2 */
 390:Src/main.c    ****     HAL_HRTIM_MspPostInit(&hhrtim1);
 391:Src/main.c    **** }
 392:Src/main.c    **** 
 393:Src/main.c    **** /**
 394:Src/main.c    ****   * @brief USART1 Initialization Function
 395:Src/main.c    ****   * @param None
 396:Src/main.c    ****   * @retval None
 397:Src/main.c    ****   */
 398:Src/main.c    **** static void MX_USART1_UART_Init(void)
 399:Src/main.c    **** {
 400:Src/main.c    **** 
 401:Src/main.c    ****     /* USER CODE BEGIN USART1_Init 0 */
 402:Src/main.c    **** 
 403:Src/main.c    ****     /* USER CODE END USART1_Init 0 */
 404:Src/main.c    **** 
 405:Src/main.c    ****     /* USER CODE BEGIN USART1_Init 1 */
 406:Src/main.c    **** 
 407:Src/main.c    ****     /* USER CODE END USART1_Init 1 */
 408:Src/main.c    ****     huart1.Instance = USART1;
 409:Src/main.c    ****     huart1.Init.BaudRate = 38400;
 410:Src/main.c    ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
 411:Src/main.c    ****     huart1.Init.StopBits = UART_STOPBITS_1;
 412:Src/main.c    ****     huart1.Init.Parity = UART_PARITY_NONE;
 413:Src/main.c    ****     huart1.Init.Mode = UART_MODE_TX_RX;
 414:Src/main.c    ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 415:Src/main.c    ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 416:Src/main.c    ****     huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 417:Src/main.c    ****     huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 418:Src/main.c    ****     if (HAL_UART_Init(&huart1) != HAL_OK)
 419:Src/main.c    ****     {
 420:Src/main.c    ****         Error_Handler();
 421:Src/main.c    ****     }
 422:Src/main.c    ****     /* USER CODE BEGIN USART1_Init 2 */
 423:Src/main.c    **** 
 424:Src/main.c    ****     /* USER CODE END USART1_Init 2 */
 425:Src/main.c    **** }
 426:Src/main.c    **** 
 427:Src/main.c    **** /**
 428:Src/main.c    ****   * @brief USART3 Initialization Function
 429:Src/main.c    ****   * @param None
 430:Src/main.c    ****   * @retval None
ARM GAS  /tmp/cc87BusA.s 			page 9


 431:Src/main.c    ****   */
 432:Src/main.c    **** static void MX_USART3_UART_Init(void)
 433:Src/main.c    **** {
 434:Src/main.c    **** 
 435:Src/main.c    ****     /* USER CODE BEGIN USART3_Init 0 */
 436:Src/main.c    **** 
 437:Src/main.c    ****     /* USER CODE END USART3_Init 0 */
 438:Src/main.c    **** 
 439:Src/main.c    ****     /* USER CODE BEGIN USART3_Init 1 */
 440:Src/main.c    **** 
 441:Src/main.c    ****     /* USER CODE END USART3_Init 1 */
 442:Src/main.c    ****     huart3.Instance = USART3;
 443:Src/main.c    ****     huart3.Init.BaudRate = 38400;
 444:Src/main.c    ****     huart3.Init.WordLength = UART_WORDLENGTH_8B;
 445:Src/main.c    ****     huart3.Init.StopBits = UART_STOPBITS_1;
 446:Src/main.c    ****     huart3.Init.Parity = UART_PARITY_NONE;
 447:Src/main.c    ****     huart3.Init.Mode = UART_MODE_TX_RX;
 448:Src/main.c    ****     huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 449:Src/main.c    ****     huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 450:Src/main.c    ****     huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 451:Src/main.c    ****     huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 452:Src/main.c    ****     if (HAL_UART_Init(&huart3) != HAL_OK)
 453:Src/main.c    ****     {
 454:Src/main.c    ****         Error_Handler();
 455:Src/main.c    ****     }
 456:Src/main.c    ****     /* USER CODE BEGIN USART3_Init 2 */
 457:Src/main.c    **** 
 458:Src/main.c    ****     /* USER CODE END USART3_Init 2 */
 459:Src/main.c    **** }
 460:Src/main.c    **** 
 461:Src/main.c    **** /**
 462:Src/main.c    ****   * Enable DMA controller clock
 463:Src/main.c    ****   */
 464:Src/main.c    **** static void MX_DMA_Init(void)
 465:Src/main.c    **** {
 466:Src/main.c    ****     /* DMA controller clock enable */
 467:Src/main.c    ****     __HAL_RCC_DMA1_CLK_ENABLE();
 468:Src/main.c    **** 
 469:Src/main.c    ****     /* DMA interrupt init */
 470:Src/main.c    ****     /* DMA1_Channel1_IRQn interrupt configuration */
 471:Src/main.c    ****     HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 1, 0);
 472:Src/main.c    ****     HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 473:Src/main.c    **** }
 474:Src/main.c    **** 
 475:Src/main.c    **** /**
 476:Src/main.c    ****   * @brief GPIO Initialization Function
 477:Src/main.c    ****   * @param None
 478:Src/main.c    ****   * @retval None
 479:Src/main.c    ****   */
 480:Src/main.c    **** static void MX_GPIO_Init(void)
 481:Src/main.c    **** {
  28              		.loc 1 481 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
ARM GAS  /tmp/cc87BusA.s 			page 10


  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 482:Src/main.c    ****     GPIO_InitTypeDef GPIO_InitStruct ={ 0 };
  43              		.loc 1 482 5 view .LVU1
  44              		.loc 1 482 22 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0394     		str	r4, [sp, #12]
  47 0008 0494     		str	r4, [sp, #16]
  48 000a 0594     		str	r4, [sp, #20]
  49 000c 0694     		str	r4, [sp, #24]
  50 000e 0794     		str	r4, [sp, #28]
 483:Src/main.c    **** 
 484:Src/main.c    ****     /* GPIO Ports Clock Enable */
 485:Src/main.c    ****     __HAL_RCC_GPIOF_CLK_ENABLE();
  51              		.loc 1 485 5 is_stmt 1 view .LVU3
  52              	.LBB2:
  53              		.loc 1 485 5 view .LVU4
  54              		.loc 1 485 5 view .LVU5
  55 0010 314B     		ldr	r3, .L3
  56 0012 5A69     		ldr	r2, [r3, #20]
  57 0014 42F48002 		orr	r2, r2, #4194304
  58 0018 5A61     		str	r2, [r3, #20]
  59              		.loc 1 485 5 view .LVU6
  60 001a 5A69     		ldr	r2, [r3, #20]
  61 001c 02F48002 		and	r2, r2, #4194304
  62 0020 0092     		str	r2, [sp]
  63              		.loc 1 485 5 view .LVU7
  64 0022 009A     		ldr	r2, [sp]
  65              	.LBE2:
 486:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 486 5 view .LVU8
  67              	.LBB3:
  68              		.loc 1 486 5 view .LVU9
  69              		.loc 1 486 5 view .LVU10
  70 0024 5A69     		ldr	r2, [r3, #20]
  71 0026 42F40032 		orr	r2, r2, #131072
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 486 5 view .LVU11
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 02F40032 		and	r2, r2, #131072
  76 0032 0192     		str	r2, [sp, #4]
  77              		.loc 1 486 5 view .LVU12
  78 0034 019A     		ldr	r2, [sp, #4]
  79              	.LBE3:
 487:Src/main.c    ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 487 5 view .LVU13
  81              	.LBB4:
  82              		.loc 1 487 5 view .LVU14
  83              		.loc 1 487 5 view .LVU15
  84 0036 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/cc87BusA.s 			page 11


  85 0038 42F48022 		orr	r2, r2, #262144
  86 003c 5A61     		str	r2, [r3, #20]
  87              		.loc 1 487 5 view .LVU16
  88 003e 5B69     		ldr	r3, [r3, #20]
  89 0040 03F48023 		and	r3, r3, #262144
  90 0044 0293     		str	r3, [sp, #8]
  91              		.loc 1 487 5 view .LVU17
  92 0046 029B     		ldr	r3, [sp, #8]
  93              	.LBE4:
 488:Src/main.c    **** 
 489:Src/main.c    ****     /*Configure GPIO pin Output Level */
 490:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, RS485_DEnRE_Pin | LED_RED_Pin | LED_GREEN_Pin | LED_BLUE_Pin | MISC0_P
  94              		.loc 1 490 5 view .LVU18
  95 0048 244E     		ldr	r6, .L3+4
  96 004a 2246     		mov	r2, r4
  97 004c 47F21C01 		movw	r1, #28700
  98 0050 3046     		mov	r0, r6
  99 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 100              	.LVL0:
 491:Src/main.c    ****     HAL_GPIO_WritePin(CONTACTOR_CTRL_GPIO_Port, CONTACTOR_CTRL_Pin, GPIO_PIN_SET);
 101              		.loc 1 491 5 view .LVU19
 102 0056 0122     		movs	r2, #1
 103 0058 2021     		movs	r1, #32
 104 005a 3046     		mov	r0, r6
 105 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 106              	.LVL1:
 492:Src/main.c    **** 
 493:Src/main.c    ****     /*Configure GPIO pins : TRIGIN_RISING_Pin */
 494:Src/main.c    ****     GPIO_InitStruct.Pin = TRIGIN_RISING_Pin;
 107              		.loc 1 494 5 view .LVU20
 108              		.loc 1 494 25 is_stmt 0 view .LVU21
 109 0060 1023     		movs	r3, #16
 110 0062 0393     		str	r3, [sp, #12]
 495:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 111              		.loc 1 495 5 is_stmt 1 view .LVU22
 112              		.loc 1 495 26 is_stmt 0 view .LVU23
 113 0064 1E4B     		ldr	r3, .L3+8
 114 0066 0493     		str	r3, [sp, #16]
 496:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 115              		.loc 1 496 5 is_stmt 1 view .LVU24
 116              		.loc 1 496 26 is_stmt 0 view .LVU25
 117 0068 0225     		movs	r5, #2
 118 006a 0595     		str	r5, [sp, #20]
 497:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 119              		.loc 1 497 5 is_stmt 1 view .LVU26
 120 006c 03A9     		add	r1, sp, #12
 121 006e 4FF09040 		mov	r0, #1207959552
 122 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 498:Src/main.c    **** 
 499:Src/main.c    ****     /*Configure GPIO pins : TRIGIN_FALLING_Pin */
 500:Src/main.c    ****     GPIO_InitStruct.Pin = TRIGIN_FALLING_Pin;
 124              		.loc 1 500 5 view .LVU27
 125              		.loc 1 500 25 is_stmt 0 view .LVU28
 126 0076 2023     		movs	r3, #32
 127 0078 0393     		str	r3, [sp, #12]
 501:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
ARM GAS  /tmp/cc87BusA.s 			page 12


 128              		.loc 1 501 5 is_stmt 1 view .LVU29
 129              		.loc 1 501 26 is_stmt 0 view .LVU30
 130 007a 1A4B     		ldr	r3, .L3+12
 131 007c 0493     		str	r3, [sp, #16]
 502:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 132              		.loc 1 502 5 is_stmt 1 view .LVU31
 133              		.loc 1 502 26 is_stmt 0 view .LVU32
 134 007e 0595     		str	r5, [sp, #20]
 503:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 135              		.loc 1 503 5 is_stmt 1 view .LVU33
 136 0080 03A9     		add	r1, sp, #12
 137 0082 4FF09040 		mov	r0, #1207959552
 138 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL3:
 504:Src/main.c    **** 
 505:Src/main.c    ****     /*Configure GPIO pins : RS485_DEnRE_Pin */
 506:Src/main.c    ****     GPIO_InitStruct.Pin = RS485_DEnRE_Pin;
 140              		.loc 1 506 5 view .LVU34
 141              		.loc 1 506 25 is_stmt 0 view .LVU35
 142 008a 0423     		movs	r3, #4
 143 008c 0393     		str	r3, [sp, #12]
 507:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 144              		.loc 1 507 5 is_stmt 1 view .LVU36
 145              		.loc 1 507 26 is_stmt 0 view .LVU37
 146 008e 0127     		movs	r7, #1
 147 0090 0497     		str	r7, [sp, #16]
 508:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 148              		.loc 1 508 5 is_stmt 1 view .LVU38
 149              		.loc 1 508 26 is_stmt 0 view .LVU39
 150 0092 0594     		str	r4, [sp, #20]
 509:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 151              		.loc 1 509 5 is_stmt 1 view .LVU40
 152              		.loc 1 509 27 is_stmt 0 view .LVU41
 153 0094 0697     		str	r7, [sp, #24]
 510:Src/main.c    ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 154              		.loc 1 510 5 is_stmt 1 view .LVU42
 155 0096 03A9     		add	r1, sp, #12
 156 0098 3046     		mov	r0, r6
 157 009a FFF7FEFF 		bl	HAL_GPIO_Init
 158              	.LVL4:
 511:Src/main.c    **** 
 512:Src/main.c    ****     /*Configure GPIO pins : LED_RED_Pin LED_GREEN_Pin LED_BLUE_Pin MISC0_Pin
 513:Src/main.c    ****                              MISC1_Pin MISC2_Pin */
 514:Src/main.c    ****     GPIO_InitStruct.Pin = LED_RED_Pin | LED_GREEN_Pin | LED_BLUE_Pin | MISC0_Pin | MISC1_Pin | CONT
 159              		.loc 1 514 5 view .LVU43
 160              		.loc 1 514 25 is_stmt 0 view .LVU44
 161 009e 47F23803 		movw	r3, #28728
 162 00a2 0393     		str	r3, [sp, #12]
 515:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 163              		.loc 1 515 5 is_stmt 1 view .LVU45
 164              		.loc 1 515 26 is_stmt 0 view .LVU46
 165 00a4 0497     		str	r7, [sp, #16]
 516:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 516 5 is_stmt 1 view .LVU47
 167              		.loc 1 516 26 is_stmt 0 view .LVU48
 168 00a6 0594     		str	r4, [sp, #20]
 517:Src/main.c    ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/cc87BusA.s 			page 13


 169              		.loc 1 517 5 is_stmt 1 view .LVU49
 170              		.loc 1 517 27 is_stmt 0 view .LVU50
 171 00a8 0694     		str	r4, [sp, #24]
 518:Src/main.c    ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 172              		.loc 1 518 5 is_stmt 1 view .LVU51
 173 00aa 03A9     		add	r1, sp, #12
 174 00ac 3046     		mov	r0, r6
 175 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 176              	.LVL5:
 519:Src/main.c    **** 
 520:Src/main.c    ****     /* EXTI interrupt init*/
 521:Src/main.c    ****     HAL_NVIC_SetPriority(EXTI4_IRQn, 2, 0);
 177              		.loc 1 521 5 view .LVU52
 178 00b2 2246     		mov	r2, r4
 179 00b4 2946     		mov	r1, r5
 180 00b6 0A20     		movs	r0, #10
 181 00b8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 182              	.LVL6:
 522:Src/main.c    ****     HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 183              		.loc 1 522 5 view .LVU53
 184 00bc 0A20     		movs	r0, #10
 185 00be FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 186              	.LVL7:
 523:Src/main.c    **** 
 524:Src/main.c    ****     HAL_NVIC_SetPriority(EXTI9_5_IRQn, 2, 0);
 187              		.loc 1 524 5 view .LVU54
 188 00c2 2246     		mov	r2, r4
 189 00c4 2946     		mov	r1, r5
 190 00c6 1720     		movs	r0, #23
 191 00c8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 192              	.LVL8:
 525:Src/main.c    ****     HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 193              		.loc 1 525 5 view .LVU55
 194 00cc 1720     		movs	r0, #23
 195 00ce FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 196              	.LVL9:
 526:Src/main.c    **** }
 197              		.loc 1 526 1 is_stmt 0 view .LVU56
 198 00d2 09B0     		add	sp, sp, #36
 199              	.LCFI2:
 200              		.cfi_def_cfa_offset 20
 201              		@ sp needed
 202 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 203              	.L4:
 204 00d6 00BF     		.align	2
 205              	.L3:
 206 00d8 00100240 		.word	1073876992
 207 00dc 00040048 		.word	1207960576
 208 00e0 00001110 		.word	269549568
 209 00e4 00002110 		.word	270598144
 210              		.cfi_endproc
 211              	.LFE133:
 213              		.section	.text.MX_DMA_Init,"ax",%progbits
 214              		.align	1
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
ARM GAS  /tmp/cc87BusA.s 			page 14


 218              		.fpu fpv4-sp-d16
 220              	MX_DMA_Init:
 221              	.LFB132:
 465:Src/main.c    ****     /* DMA controller clock enable */
 222              		.loc 1 465 1 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226 0000 00B5     		push	{lr}
 227              	.LCFI3:
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 14, -4
 230 0002 83B0     		sub	sp, sp, #12
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 16
 467:Src/main.c    **** 
 233              		.loc 1 467 5 view .LVU58
 234              	.LBB5:
 467:Src/main.c    **** 
 235              		.loc 1 467 5 view .LVU59
 467:Src/main.c    **** 
 236              		.loc 1 467 5 view .LVU60
 237 0004 0A4B     		ldr	r3, .L7
 238 0006 5A69     		ldr	r2, [r3, #20]
 239 0008 42F00102 		orr	r2, r2, #1
 240 000c 5A61     		str	r2, [r3, #20]
 467:Src/main.c    **** 
 241              		.loc 1 467 5 view .LVU61
 242 000e 5B69     		ldr	r3, [r3, #20]
 243 0010 03F00103 		and	r3, r3, #1
 244 0014 0193     		str	r3, [sp, #4]
 467:Src/main.c    **** 
 245              		.loc 1 467 5 view .LVU62
 246 0016 019B     		ldr	r3, [sp, #4]
 247              	.LBE5:
 471:Src/main.c    ****     HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 248              		.loc 1 471 5 view .LVU63
 249 0018 0022     		movs	r2, #0
 250 001a 0121     		movs	r1, #1
 251 001c 0B20     		movs	r0, #11
 252 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 253              	.LVL10:
 472:Src/main.c    **** }
 254              		.loc 1 472 5 view .LVU64
 255 0022 0B20     		movs	r0, #11
 256 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 257              	.LVL11:
 473:Src/main.c    **** 
 258              		.loc 1 473 1 is_stmt 0 view .LVU65
 259 0028 03B0     		add	sp, sp, #12
 260              	.LCFI5:
 261              		.cfi_def_cfa_offset 4
 262              		@ sp needed
 263 002a 5DF804FB 		ldr	pc, [sp], #4
 264              	.L8:
 265 002e 00BF     		.align	2
 266              	.L7:
ARM GAS  /tmp/cc87BusA.s 			page 15


 267 0030 00100240 		.word	1073876992
 268              		.cfi_endproc
 269              	.LFE132:
 271              		.section	.text.MX_HRTIM1_Init,"ax",%progbits
 272              		.align	1
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	MX_HRTIM1_Init:
 279              	.LFB129:
 250:Src/main.c    **** 
 280              		.loc 1 250 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 192
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 285              	.LCFI6:
 286              		.cfi_def_cfa_offset 32
 287              		.cfi_offset 4, -32
 288              		.cfi_offset 5, -28
 289              		.cfi_offset 6, -24
 290              		.cfi_offset 7, -20
 291              		.cfi_offset 8, -16
 292              		.cfi_offset 9, -12
 293              		.cfi_offset 10, -8
 294              		.cfi_offset 14, -4
 295 0004 B0B0     		sub	sp, sp, #192
 296              	.LCFI7:
 297              		.cfi_def_cfa_offset 224
 256:Src/main.c    ****     HRTIM_TimeBaseCfgTypeDef pTimeBaseCfg ={ 0 };
 298              		.loc 1 256 5 view .LVU67
 256:Src/main.c    ****     HRTIM_TimeBaseCfgTypeDef pTimeBaseCfg ={ 0 };
 299              		.loc 1 256 32 is_stmt 0 view .LVU68
 300 0006 0024     		movs	r4, #0
 301 0008 2E94     		str	r4, [sp, #184]
 302 000a 2F94     		str	r4, [sp, #188]
 257:Src/main.c    ****     HRTIM_TimerCfgTypeDef pTimerCfg ={ 0 };
 303              		.loc 1 257 5 is_stmt 1 view .LVU69
 257:Src/main.c    ****     HRTIM_TimerCfgTypeDef pTimerCfg ={ 0 };
 304              		.loc 1 257 30 is_stmt 0 view .LVU70
 305 000c 2A94     		str	r4, [sp, #168]
 306 000e 2B94     		str	r4, [sp, #172]
 307 0010 2C94     		str	r4, [sp, #176]
 308 0012 2D94     		str	r4, [sp, #180]
 258:Src/main.c    ****     HRTIM_CompareCfgTypeDef pCompareCfg ={ 0 };
 309              		.loc 1 258 5 is_stmt 1 view .LVU71
 258:Src/main.c    ****     HRTIM_CompareCfgTypeDef pCompareCfg ={ 0 };
 310              		.loc 1 258 27 is_stmt 0 view .LVU72
 311 0014 5422     		movs	r2, #84
 312 0016 2146     		mov	r1, r4
 313 0018 0DEB0200 		add	r0, sp, r2
 314 001c FFF7FEFF 		bl	memset
 315              	.LVL12:
 259:Src/main.c    ****     HRTIM_DeadTimeCfgTypeDef pDeadTimeCfg ={ 0 };
 316              		.loc 1 259 5 is_stmt 1 view .LVU73
 259:Src/main.c    ****     HRTIM_DeadTimeCfgTypeDef pDeadTimeCfg ={ 0 };
ARM GAS  /tmp/cc87BusA.s 			page 16


 317              		.loc 1 259 29 is_stmt 0 view .LVU74
 318 0020 1294     		str	r4, [sp, #72]
 319 0022 1394     		str	r4, [sp, #76]
 320 0024 1494     		str	r4, [sp, #80]
 260:Src/main.c    ****     HRTIM_OutputCfgTypeDef pOutputCfg ={ 0 };
 321              		.loc 1 260 5 is_stmt 1 view .LVU75
 260:Src/main.c    ****     HRTIM_OutputCfgTypeDef pOutputCfg ={ 0 };
 322              		.loc 1 260 30 is_stmt 0 view .LVU76
 323 0026 2422     		movs	r2, #36
 324 0028 2146     		mov	r1, r4
 325 002a 0DEB0200 		add	r0, sp, r2
 326 002e FFF7FEFF 		bl	memset
 327              	.LVL13:
 261:Src/main.c    **** 
 328              		.loc 1 261 5 is_stmt 1 view .LVU77
 261:Src/main.c    **** 
 329              		.loc 1 261 28 is_stmt 0 view .LVU78
 330 0032 2022     		movs	r2, #32
 331 0034 2146     		mov	r1, r4
 332 0036 01A8     		add	r0, sp, #4
 333 0038 FFF7FEFF 		bl	memset
 334              	.LVL14:
 266:Src/main.c    ****     hhrtim1.Init.HRTIMInterruptResquests = HRTIM_IT_NONE;
 335              		.loc 1 266 5 is_stmt 1 view .LVU79
 266:Src/main.c    ****     hhrtim1.Init.HRTIMInterruptResquests = HRTIM_IT_NONE;
 336              		.loc 1 266 22 is_stmt 0 view .LVU80
 337 003c 5A4D     		ldr	r5, .L11
 338 003e 5B4B     		ldr	r3, .L11+4
 339 0040 2B60     		str	r3, [r5]
 267:Src/main.c    ****     hhrtim1.Init.SyncOptions = HRTIM_SYNCOPTION_NONE;
 340              		.loc 1 267 5 is_stmt 1 view .LVU81
 267:Src/main.c    ****     hhrtim1.Init.SyncOptions = HRTIM_SYNCOPTION_NONE;
 341              		.loc 1 267 42 is_stmt 0 view .LVU82
 342 0042 6C60     		str	r4, [r5, #4]
 268:Src/main.c    ****     if (HAL_HRTIM_Init(&hhrtim1) != HAL_OK)
 343              		.loc 1 268 5 is_stmt 1 view .LVU83
 268:Src/main.c    ****     if (HAL_HRTIM_Init(&hhrtim1) != HAL_OK)
 344              		.loc 1 268 30 is_stmt 0 view .LVU84
 345 0044 AC60     		str	r4, [r5, #8]
 269:Src/main.c    ****     {
 346              		.loc 1 269 5 is_stmt 1 view .LVU85
 269:Src/main.c    ****     {
 347              		.loc 1 269 9 is_stmt 0 view .LVU86
 348 0046 2846     		mov	r0, r5
 349 0048 FFF7FEFF 		bl	HAL_HRTIM_Init
 350              	.LVL15:
 273:Src/main.c    ****     {
 351              		.loc 1 273 5 is_stmt 1 view .LVU87
 273:Src/main.c    ****     {
 352              		.loc 1 273 9 is_stmt 0 view .LVU88
 353 004c 0C21     		movs	r1, #12
 354 004e 2846     		mov	r0, r5
 355 0050 FFF7FEFF 		bl	HAL_HRTIM_DLLCalibrationStart
 356              	.LVL16:
 277:Src/main.c    ****     {
 357              		.loc 1 277 5 is_stmt 1 view .LVU89
 277:Src/main.c    ****     {
ARM GAS  /tmp/cc87BusA.s 			page 17


 358              		.loc 1 277 9 is_stmt 0 view .LVU90
 359 0054 0A21     		movs	r1, #10
 360 0056 2846     		mov	r0, r5
 361 0058 FFF7FEFF 		bl	HAL_HRTIM_PollForDLLCalibration
 362              	.LVL17:
 281:Src/main.c    ****     pADCTriggerCfg.Trigger = HRTIM_ADCTRIGGEREVENT13_TIMERB_CMP2;
 363              		.loc 1 281 5 is_stmt 1 view .LVU91
 281:Src/main.c    ****     pADCTriggerCfg.Trigger = HRTIM_ADCTRIGGEREVENT13_TIMERB_CMP2;
 364              		.loc 1 281 33 is_stmt 0 view .LVU92
 365 005c 4FF40033 		mov	r3, #131072
 366 0060 2E93     		str	r3, [sp, #184]
 282:Src/main.c    ****     if (HAL_HRTIM_ADCTriggerConfig(&hhrtim1, HRTIM_ADCTRIGGER_1, &pADCTriggerCfg) != HAL_OK)
 367              		.loc 1 282 5 is_stmt 1 view .LVU93
 282:Src/main.c    ****     if (HAL_HRTIM_ADCTriggerConfig(&hhrtim1, HRTIM_ADCTRIGGER_1, &pADCTriggerCfg) != HAL_OK)
 368              		.loc 1 282 28 is_stmt 0 view .LVU94
 369 0062 4FF40048 		mov	r8, #32768
 370 0066 CDF8BC80 		str	r8, [sp, #188]
 283:Src/main.c    ****     {
 371              		.loc 1 283 5 is_stmt 1 view .LVU95
 283:Src/main.c    ****     {
 372              		.loc 1 283 9 is_stmt 0 view .LVU96
 373 006a 2EAA     		add	r2, sp, #184
 374 006c 0121     		movs	r1, #1
 375 006e 2846     		mov	r0, r5
 376 0070 FFF7FEFF 		bl	HAL_HRTIM_ADCTriggerConfig
 377              	.LVL18:
 287:Src/main.c    ****     pTimeBaseCfg.RepetitionCounter = 0x00;
 378              		.loc 1 287 5 is_stmt 1 view .LVU97
 287:Src/main.c    ****     pTimeBaseCfg.RepetitionCounter = 0x00;
 379              		.loc 1 287 25 is_stmt 0 view .LVU98
 380 0074 4FF6F77A 		movw	r10, #65527
 381 0078 CDF8A8A0 		str	r10, [sp, #168]
 288:Src/main.c    ****     pTimeBaseCfg.PrescalerRatio = HRTIM_PRESCALERRATIO_MUL8;
 382              		.loc 1 288 5 is_stmt 1 view .LVU99
 288:Src/main.c    ****     pTimeBaseCfg.PrescalerRatio = HRTIM_PRESCALERRATIO_MUL8;
 383              		.loc 1 288 36 is_stmt 0 view .LVU100
 384 007c 2B94     		str	r4, [sp, #172]
 289:Src/main.c    ****     pTimeBaseCfg.Mode = HRTIM_MODE_CONTINUOUS;
 385              		.loc 1 289 5 is_stmt 1 view .LVU101
 289:Src/main.c    ****     pTimeBaseCfg.Mode = HRTIM_MODE_CONTINUOUS;
 386              		.loc 1 289 33 is_stmt 0 view .LVU102
 387 007e 0227     		movs	r7, #2
 388 0080 2C97     		str	r7, [sp, #176]
 290:Src/main.c    ****     if (HAL_HRTIM_TimeBaseConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pTimeBaseCfg) != HAL_OK)
 389              		.loc 1 290 5 is_stmt 1 view .LVU103
 290:Src/main.c    ****     if (HAL_HRTIM_TimeBaseConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pTimeBaseCfg) != HAL_OK)
 390              		.loc 1 290 23 is_stmt 0 view .LVU104
 391 0082 0823     		movs	r3, #8
 392 0084 2D93     		str	r3, [sp, #180]
 291:Src/main.c    ****     {
 393              		.loc 1 291 5 is_stmt 1 view .LVU105
 291:Src/main.c    ****     {
 394              		.loc 1 291 9 is_stmt 0 view .LVU106
 395 0086 2AAA     		add	r2, sp, #168
 396 0088 2146     		mov	r1, r4
 397 008a 2846     		mov	r0, r5
 398 008c FFF7FEFF 		bl	HAL_HRTIM_TimeBaseConfig
ARM GAS  /tmp/cc87BusA.s 			page 18


 399              	.LVL19:
 295:Src/main.c    ****     pTimerCfg.DMARequests = HRTIM_TIM_DMA_NONE;
 400              		.loc 1 295 5 is_stmt 1 view .LVU107
 295:Src/main.c    ****     pTimerCfg.DMARequests = HRTIM_TIM_DMA_NONE;
 401              		.loc 1 295 33 is_stmt 0 view .LVU108
 402 0090 1594     		str	r4, [sp, #84]
 296:Src/main.c    ****     pTimerCfg.DMASrcAddress = 0x0000;
 403              		.loc 1 296 5 is_stmt 1 view .LVU109
 296:Src/main.c    ****     pTimerCfg.DMASrcAddress = 0x0000;
 404              		.loc 1 296 27 is_stmt 0 view .LVU110
 405 0092 1694     		str	r4, [sp, #88]
 297:Src/main.c    ****     pTimerCfg.DMADstAddress = 0x0000;
 406              		.loc 1 297 5 is_stmt 1 view .LVU111
 297:Src/main.c    ****     pTimerCfg.DMADstAddress = 0x0000;
 407              		.loc 1 297 29 is_stmt 0 view .LVU112
 408 0094 1794     		str	r4, [sp, #92]
 298:Src/main.c    ****     pTimerCfg.DMASize = 0x1;
 409              		.loc 1 298 5 is_stmt 1 view .LVU113
 298:Src/main.c    ****     pTimerCfg.DMASize = 0x1;
 410              		.loc 1 298 29 is_stmt 0 view .LVU114
 411 0096 1894     		str	r4, [sp, #96]
 299:Src/main.c    ****     pTimerCfg.HalfModeEnable = HRTIM_HALFMODE_DISABLED;
 412              		.loc 1 299 5 is_stmt 1 view .LVU115
 299:Src/main.c    ****     pTimerCfg.HalfModeEnable = HRTIM_HALFMODE_DISABLED;
 413              		.loc 1 299 23 is_stmt 0 view .LVU116
 414 0098 0126     		movs	r6, #1
 415 009a 1996     		str	r6, [sp, #100]
 300:Src/main.c    ****     pTimerCfg.StartOnSync = HRTIM_SYNCSTART_DISABLED;
 416              		.loc 1 300 5 is_stmt 1 view .LVU117
 300:Src/main.c    ****     pTimerCfg.StartOnSync = HRTIM_SYNCSTART_DISABLED;
 417              		.loc 1 300 30 is_stmt 0 view .LVU118
 418 009c 1A94     		str	r4, [sp, #104]
 301:Src/main.c    ****     pTimerCfg.ResetOnSync = HRTIM_SYNCRESET_DISABLED;
 419              		.loc 1 301 5 is_stmt 1 view .LVU119
 301:Src/main.c    ****     pTimerCfg.ResetOnSync = HRTIM_SYNCRESET_DISABLED;
 420              		.loc 1 301 27 is_stmt 0 view .LVU120
 421 009e 1B94     		str	r4, [sp, #108]
 302:Src/main.c    ****     pTimerCfg.DACSynchro = HRTIM_DACSYNC_NONE;
 422              		.loc 1 302 5 is_stmt 1 view .LVU121
 302:Src/main.c    ****     pTimerCfg.DACSynchro = HRTIM_DACSYNC_NONE;
 423              		.loc 1 302 27 is_stmt 0 view .LVU122
 424 00a0 1C94     		str	r4, [sp, #112]
 303:Src/main.c    ****     pTimerCfg.PreloadEnable = HRTIM_PRELOAD_ENABLED;
 425              		.loc 1 303 5 is_stmt 1 view .LVU123
 303:Src/main.c    ****     pTimerCfg.PreloadEnable = HRTIM_PRELOAD_ENABLED;
 426              		.loc 1 303 26 is_stmt 0 view .LVU124
 427 00a2 1D94     		str	r4, [sp, #116]
 304:Src/main.c    ****     pTimerCfg.UpdateGating = HRTIM_UPDATEGATING_INDEPENDENT;
 428              		.loc 1 304 5 is_stmt 1 view .LVU125
 304:Src/main.c    ****     pTimerCfg.UpdateGating = HRTIM_UPDATEGATING_INDEPENDENT;
 429              		.loc 1 304 29 is_stmt 0 view .LVU126
 430 00a4 4FF00063 		mov	r3, #134217728
 431 00a8 1E93     		str	r3, [sp, #120]
 305:Src/main.c    ****     pTimerCfg.BurstMode = HRTIM_TIMERBURSTMODE_MAINTAINCLOCK;
 432              		.loc 1 305 5 is_stmt 1 view .LVU127
 305:Src/main.c    ****     pTimerCfg.BurstMode = HRTIM_TIMERBURSTMODE_MAINTAINCLOCK;
 433              		.loc 1 305 28 is_stmt 0 view .LVU128
ARM GAS  /tmp/cc87BusA.s 			page 19


 434 00aa 1F94     		str	r4, [sp, #124]
 306:Src/main.c    ****     pTimerCfg.RepetitionUpdate = HRTIM_UPDATEONREPETITION_DISABLED;
 435              		.loc 1 306 5 is_stmt 1 view .LVU129
 306:Src/main.c    ****     pTimerCfg.RepetitionUpdate = HRTIM_UPDATEONREPETITION_DISABLED;
 436              		.loc 1 306 25 is_stmt 0 view .LVU130
 437 00ac 2094     		str	r4, [sp, #128]
 307:Src/main.c    ****     pTimerCfg.PushPull = HRTIM_TIMPUSHPULLMODE_DISABLED;
 438              		.loc 1 307 5 is_stmt 1 view .LVU131
 307:Src/main.c    ****     pTimerCfg.PushPull = HRTIM_TIMPUSHPULLMODE_DISABLED;
 439              		.loc 1 307 32 is_stmt 0 view .LVU132
 440 00ae 2194     		str	r4, [sp, #132]
 308:Src/main.c    ****     pTimerCfg.FaultEnable = HRTIM_TIMFAULTENABLE_NONE;
 441              		.loc 1 308 5 is_stmt 1 view .LVU133
 308:Src/main.c    ****     pTimerCfg.FaultEnable = HRTIM_TIMFAULTENABLE_NONE;
 442              		.loc 1 308 24 is_stmt 0 view .LVU134
 443 00b0 2294     		str	r4, [sp, #136]
 309:Src/main.c    ****     pTimerCfg.FaultLock = HRTIM_TIMFAULTLOCK_READONLY;
 444              		.loc 1 309 5 is_stmt 1 view .LVU135
 309:Src/main.c    ****     pTimerCfg.FaultLock = HRTIM_TIMFAULTLOCK_READONLY;
 445              		.loc 1 309 27 is_stmt 0 view .LVU136
 446 00b2 2394     		str	r4, [sp, #140]
 310:Src/main.c    ****     pTimerCfg.DeadTimeInsertion = HRTIM_TIMDEADTIMEINSERTION_ENABLED;
 447              		.loc 1 310 5 is_stmt 1 view .LVU137
 310:Src/main.c    ****     pTimerCfg.DeadTimeInsertion = HRTIM_TIMDEADTIMEINSERTION_ENABLED;
 448              		.loc 1 310 25 is_stmt 0 view .LVU138
 449 00b4 4FF00049 		mov	r9, #-2147483648
 450 00b8 CDF89090 		str	r9, [sp, #144]
 311:Src/main.c    ****     pTimerCfg.DelayedProtectionMode = HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DISABLED;
 451              		.loc 1 311 5 is_stmt 1 view .LVU139
 311:Src/main.c    ****     pTimerCfg.DelayedProtectionMode = HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DISABLED;
 452              		.loc 1 311 33 is_stmt 0 view .LVU140
 453 00bc 4FF48073 		mov	r3, #256
 454 00c0 2593     		str	r3, [sp, #148]
 312:Src/main.c    ****     pTimerCfg.UpdateTrigger = HRTIM_TIMUPDATETRIGGER_NONE;
 455              		.loc 1 312 5 is_stmt 1 view .LVU141
 312:Src/main.c    ****     pTimerCfg.UpdateTrigger = HRTIM_TIMUPDATETRIGGER_NONE;
 456              		.loc 1 312 37 is_stmt 0 view .LVU142
 457 00c2 2694     		str	r4, [sp, #152]
 313:Src/main.c    ****     pTimerCfg.ResetTrigger = HRTIM_TIMRESETTRIGGER_NONE;
 458              		.loc 1 313 5 is_stmt 1 view .LVU143
 313:Src/main.c    ****     pTimerCfg.ResetTrigger = HRTIM_TIMRESETTRIGGER_NONE;
 459              		.loc 1 313 29 is_stmt 0 view .LVU144
 460 00c4 2794     		str	r4, [sp, #156]
 314:Src/main.c    ****     pTimerCfg.ResetUpdate = HRTIM_TIMUPDATEONRESET_ENABLED;
 461              		.loc 1 314 5 is_stmt 1 view .LVU145
 314:Src/main.c    ****     pTimerCfg.ResetUpdate = HRTIM_TIMUPDATEONRESET_ENABLED;
 462              		.loc 1 314 28 is_stmt 0 view .LVU146
 463 00c6 2894     		str	r4, [sp, #160]
 315:Src/main.c    ****     if (HAL_HRTIM_WaveformTimerConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pTimerCfg) != HAL_OK)
 464              		.loc 1 315 5 is_stmt 1 view .LVU147
 315:Src/main.c    ****     if (HAL_HRTIM_WaveformTimerConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pTimerCfg) != HAL_OK)
 465              		.loc 1 315 27 is_stmt 0 view .LVU148
 466 00c8 4FF48023 		mov	r3, #262144
 467 00cc 2993     		str	r3, [sp, #164]
 316:Src/main.c    ****     {
 468              		.loc 1 316 5 is_stmt 1 view .LVU149
 316:Src/main.c    ****     {
ARM GAS  /tmp/cc87BusA.s 			page 20


 469              		.loc 1 316 9 is_stmt 0 view .LVU150
 470 00ce 15AA     		add	r2, sp, #84
 471 00d0 2146     		mov	r1, r4
 472 00d2 2846     		mov	r0, r5
 473 00d4 FFF7FEFF 		bl	HAL_HRTIM_WaveformTimerConfig
 474              	.LVL20:
 320:Src/main.c    ****     pTimerCfg.DMADstAddress = 0x0000;
 475              		.loc 1 320 5 is_stmt 1 view .LVU151
 320:Src/main.c    ****     pTimerCfg.DMADstAddress = 0x0000;
 476              		.loc 1 320 29 is_stmt 0 view .LVU152
 477 00d8 1794     		str	r4, [sp, #92]
 321:Src/main.c    ****     pTimerCfg.DMASize = 0x1;
 478              		.loc 1 321 5 is_stmt 1 view .LVU153
 321:Src/main.c    ****     pTimerCfg.DMASize = 0x1;
 479              		.loc 1 321 29 is_stmt 0 view .LVU154
 480 00da 1894     		str	r4, [sp, #96]
 322:Src/main.c    ****     pTimerCfg.FaultLock = HRTIM_TIMFAULTLOCK_READWRITE;
 481              		.loc 1 322 5 is_stmt 1 view .LVU155
 322:Src/main.c    ****     pTimerCfg.FaultLock = HRTIM_TIMFAULTLOCK_READWRITE;
 482              		.loc 1 322 23 is_stmt 0 view .LVU156
 483 00dc 1996     		str	r6, [sp, #100]
 323:Src/main.c    ****     pTimerCfg.DeadTimeInsertion = HRTIM_TIMDEADTIMEINSERTION_DISABLED;
 484              		.loc 1 323 5 is_stmt 1 view .LVU157
 323:Src/main.c    ****     pTimerCfg.DeadTimeInsertion = HRTIM_TIMDEADTIMEINSERTION_DISABLED;
 485              		.loc 1 323 25 is_stmt 0 view .LVU158
 486 00de 2494     		str	r4, [sp, #144]
 324:Src/main.c    ****     pTimerCfg.UpdateTrigger = HRTIM_TIMUPDATETRIGGER_TIMER_A;
 487              		.loc 1 324 5 is_stmt 1 view .LVU159
 324:Src/main.c    ****     pTimerCfg.UpdateTrigger = HRTIM_TIMUPDATETRIGGER_TIMER_A;
 488              		.loc 1 324 33 is_stmt 0 view .LVU160
 489 00e0 2594     		str	r4, [sp, #148]
 325:Src/main.c    ****     pTimerCfg.ResetTrigger = HRTIM_TIMRESETTRIGGER_OTHER1_CMP1;
 490              		.loc 1 325 5 is_stmt 1 view .LVU161
 325:Src/main.c    ****     pTimerCfg.ResetTrigger = HRTIM_TIMRESETTRIGGER_OTHER1_CMP1;
 491              		.loc 1 325 29 is_stmt 0 view .LVU162
 492 00e2 4FF40023 		mov	r3, #524288
 493 00e6 2793     		str	r3, [sp, #156]
 326:Src/main.c    ****     pTimerCfg.ResetUpdate = HRTIM_TIMUPDATEONRESET_DISABLED;
 494              		.loc 1 326 5 is_stmt 1 view .LVU163
 326:Src/main.c    ****     pTimerCfg.ResetUpdate = HRTIM_TIMUPDATEONRESET_DISABLED;
 495              		.loc 1 326 28 is_stmt 0 view .LVU164
 496 00e8 2893     		str	r3, [sp, #160]
 327:Src/main.c    ****     if (HAL_HRTIM_WaveformTimerConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_B, &pTimerCfg) != HAL_OK)
 497              		.loc 1 327 5 is_stmt 1 view .LVU165
 327:Src/main.c    ****     if (HAL_HRTIM_WaveformTimerConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_B, &pTimerCfg) != HAL_OK)
 498              		.loc 1 327 27 is_stmt 0 view .LVU166
 499 00ea 2994     		str	r4, [sp, #164]
 328:Src/main.c    ****     {
 500              		.loc 1 328 5 is_stmt 1 view .LVU167
 328:Src/main.c    ****     {
 501              		.loc 1 328 9 is_stmt 0 view .LVU168
 502 00ec 15AA     		add	r2, sp, #84
 503 00ee 3146     		mov	r1, r6
 504 00f0 2846     		mov	r0, r5
 505 00f2 FFF7FEFF 		bl	HAL_HRTIM_WaveformTimerConfig
 506              	.LVL21:
 332:Src/main.c    ****     if (HAL_HRTIM_WaveformCompareConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_COMPAREUNIT_1, &p
ARM GAS  /tmp/cc87BusA.s 			page 21


 507              		.loc 1 332 5 is_stmt 1 view .LVU169
 332:Src/main.c    ****     if (HAL_HRTIM_WaveformCompareConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_COMPAREUNIT_1, &p
 508              		.loc 1 332 30 is_stmt 0 view .LVU170
 509 00f6 1823     		movs	r3, #24
 510 00f8 1293     		str	r3, [sp, #72]
 333:Src/main.c    ****     {
 511              		.loc 1 333 5 is_stmt 1 view .LVU171
 333:Src/main.c    ****     {
 512              		.loc 1 333 9 is_stmt 0 view .LVU172
 513 00fa 12AB     		add	r3, sp, #72
 514 00fc 3246     		mov	r2, r6
 515 00fe 2146     		mov	r1, r4
 516 0100 2846     		mov	r0, r5
 517 0102 FFF7FEFF 		bl	HAL_HRTIM_WaveformCompareConfig
 518              	.LVL22:
 337:Src/main.c    ****     pCompareCfg.AutoDelayedMode = HRTIM_AUTODELAYEDMODE_REGULAR;
 519              		.loc 1 337 5 is_stmt 1 view .LVU173
 337:Src/main.c    ****     pCompareCfg.AutoDelayedMode = HRTIM_AUTODELAYEDMODE_REGULAR;
 520              		.loc 1 337 30 is_stmt 0 view .LVU174
 521 0106 CDF848A0 		str	r10, [sp, #72]
 338:Src/main.c    ****     pCompareCfg.AutoDelayedTimeout = 0x0000;
 522              		.loc 1 338 5 is_stmt 1 view .LVU175
 338:Src/main.c    ****     pCompareCfg.AutoDelayedTimeout = 0x0000;
 523              		.loc 1 338 33 is_stmt 0 view .LVU176
 524 010a 1394     		str	r4, [sp, #76]
 339:Src/main.c    **** 
 525              		.loc 1 339 5 is_stmt 1 view .LVU177
 339:Src/main.c    **** 
 526              		.loc 1 339 36 is_stmt 0 view .LVU178
 527 010c 1494     		str	r4, [sp, #80]
 341:Src/main.c    ****     {
 528              		.loc 1 341 5 is_stmt 1 view .LVU179
 341:Src/main.c    ****     {
 529              		.loc 1 341 9 is_stmt 0 view .LVU180
 530 010e 12AB     		add	r3, sp, #72
 531 0110 3A46     		mov	r2, r7
 532 0112 2146     		mov	r1, r4
 533 0114 2846     		mov	r0, r5
 534 0116 FFF7FEFF 		bl	HAL_HRTIM_WaveformCompareConfig
 535              	.LVL23:
 345:Src/main.c    ****     pCompareCfg.AutoDelayedTimeout = 0x0000;
 536              		.loc 1 345 5 is_stmt 1 view .LVU181
 345:Src/main.c    ****     pCompareCfg.AutoDelayedTimeout = 0x0000;
 537              		.loc 1 345 30 is_stmt 0 view .LVU182
 538 011a CDF84880 		str	r8, [sp, #72]
 346:Src/main.c    **** 
 539              		.loc 1 346 5 is_stmt 1 view .LVU183
 346:Src/main.c    **** 
 540              		.loc 1 346 36 is_stmt 0 view .LVU184
 541 011e 1494     		str	r4, [sp, #80]
 348:Src/main.c    ****     {
 542              		.loc 1 348 5 is_stmt 1 view .LVU185
 348:Src/main.c    ****     {
 543              		.loc 1 348 9 is_stmt 0 view .LVU186
 544 0120 12AB     		add	r3, sp, #72
 545 0122 3A46     		mov	r2, r7
 546 0124 3146     		mov	r1, r6
ARM GAS  /tmp/cc87BusA.s 			page 22


 547 0126 2846     		mov	r0, r5
 548 0128 FFF7FEFF 		bl	HAL_HRTIM_WaveformCompareConfig
 549              	.LVL24:
 352:Src/main.c    ****     pDeadTimeCfg.RisingValue = 360;
 550              		.loc 1 352 5 is_stmt 1 view .LVU187
 352:Src/main.c    ****     pDeadTimeCfg.RisingValue = 360;
 551              		.loc 1 352 28 is_stmt 0 view .LVU188
 552 012c 4FF44063 		mov	r3, #3072
 553 0130 0993     		str	r3, [sp, #36]
 353:Src/main.c    ****     pDeadTimeCfg.RisingSign = HRTIM_TIMDEADTIME_RISINGSIGN_POSITIVE;
 554              		.loc 1 353 5 is_stmt 1 view .LVU189
 353:Src/main.c    ****     pDeadTimeCfg.RisingSign = HRTIM_TIMDEADTIME_RISINGSIGN_POSITIVE;
 555              		.loc 1 353 30 is_stmt 0 view .LVU190
 556 0132 4FF4B473 		mov	r3, #360
 557 0136 0A93     		str	r3, [sp, #40]
 354:Src/main.c    ****     pDeadTimeCfg.RisingLock = HRTIM_TIMDEADTIME_RISINGLOCK_READONLY;
 558              		.loc 1 354 5 is_stmt 1 view .LVU191
 354:Src/main.c    ****     pDeadTimeCfg.RisingLock = HRTIM_TIMDEADTIME_RISINGLOCK_READONLY;
 559              		.loc 1 354 29 is_stmt 0 view .LVU192
 560 0138 0B94     		str	r4, [sp, #44]
 355:Src/main.c    ****     pDeadTimeCfg.RisingSignLock = HRTIM_TIMDEADTIME_RISINGSIGNLOCK_READONLY;
 561              		.loc 1 355 5 is_stmt 1 view .LVU193
 355:Src/main.c    ****     pDeadTimeCfg.RisingSignLock = HRTIM_TIMDEADTIME_RISINGSIGNLOCK_READONLY;
 562              		.loc 1 355 29 is_stmt 0 view .LVU194
 563 013a CDF83080 		str	r8, [sp, #48]
 356:Src/main.c    ****     pDeadTimeCfg.FallingValue = 332;
 564              		.loc 1 356 5 is_stmt 1 view .LVU195
 356:Src/main.c    ****     pDeadTimeCfg.FallingValue = 332;
 565              		.loc 1 356 33 is_stmt 0 view .LVU196
 566 013e 4FF48043 		mov	r3, #16384
 567 0142 0D93     		str	r3, [sp, #52]
 357:Src/main.c    ****     pDeadTimeCfg.FallingSign = HRTIM_TIMDEADTIME_FALLINGSIGN_POSITIVE;
 568              		.loc 1 357 5 is_stmt 1 view .LVU197
 357:Src/main.c    ****     pDeadTimeCfg.FallingSign = HRTIM_TIMDEADTIME_FALLINGSIGN_POSITIVE;
 569              		.loc 1 357 31 is_stmt 0 view .LVU198
 570 0144 4FF4A673 		mov	r3, #332
 571 0148 0E93     		str	r3, [sp, #56]
 358:Src/main.c    ****     pDeadTimeCfg.FallingLock = HRTIM_TIMDEADTIME_FALLINGLOCK_READONLY;
 572              		.loc 1 358 5 is_stmt 1 view .LVU199
 358:Src/main.c    ****     pDeadTimeCfg.FallingLock = HRTIM_TIMDEADTIME_FALLINGLOCK_READONLY;
 573              		.loc 1 358 30 is_stmt 0 view .LVU200
 574 014a 0F94     		str	r4, [sp, #60]
 359:Src/main.c    ****     pDeadTimeCfg.FallingSignLock = HRTIM_TIMDEADTIME_FALLINGSIGNLOCK_READONLY;
 575              		.loc 1 359 5 is_stmt 1 view .LVU201
 359:Src/main.c    ****     pDeadTimeCfg.FallingSignLock = HRTIM_TIMDEADTIME_FALLINGSIGNLOCK_READONLY;
 576              		.loc 1 359 30 is_stmt 0 view .LVU202
 577 014c CDF84090 		str	r9, [sp, #64]
 360:Src/main.c    ****     if (HAL_HRTIM_DeadTimeConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pDeadTimeCfg) != HAL_OK)
 578              		.loc 1 360 5 is_stmt 1 view .LVU203
 360:Src/main.c    ****     if (HAL_HRTIM_DeadTimeConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, &pDeadTimeCfg) != HAL_OK)
 579              		.loc 1 360 34 is_stmt 0 view .LVU204
 580 0150 4FF08043 		mov	r3, #1073741824
 581 0154 1193     		str	r3, [sp, #68]
 361:Src/main.c    ****     {
 582              		.loc 1 361 5 is_stmt 1 view .LVU205
 361:Src/main.c    ****     {
 583              		.loc 1 361 9 is_stmt 0 view .LVU206
ARM GAS  /tmp/cc87BusA.s 			page 23


 584 0156 09AA     		add	r2, sp, #36
 585 0158 2146     		mov	r1, r4
 586 015a 2846     		mov	r0, r5
 587 015c FFF7FEFF 		bl	HAL_HRTIM_DeadTimeConfig
 588              	.LVL25:
 365:Src/main.c    ****     pOutputCfg.SetSource = HRTIM_OUTPUTSET_TIMPER;
 589              		.loc 1 365 5 is_stmt 1 view .LVU207
 365:Src/main.c    ****     pOutputCfg.SetSource = HRTIM_OUTPUTSET_TIMPER;
 590              		.loc 1 365 25 is_stmt 0 view .LVU208
 591 0160 0197     		str	r7, [sp, #4]
 366:Src/main.c    ****     pOutputCfg.ResetSource = HRTIM_OUTPUTRESET_TIMCMP2;
 592              		.loc 1 366 5 is_stmt 1 view .LVU209
 366:Src/main.c    ****     pOutputCfg.ResetSource = HRTIM_OUTPUTRESET_TIMCMP2;
 593              		.loc 1 366 26 is_stmt 0 view .LVU210
 594 0162 0423     		movs	r3, #4
 595 0164 0293     		str	r3, [sp, #8]
 367:Src/main.c    ****     pOutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
 596              		.loc 1 367 5 is_stmt 1 view .LVU211
 367:Src/main.c    ****     pOutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
 597              		.loc 1 367 28 is_stmt 0 view .LVU212
 598 0166 1023     		movs	r3, #16
 599 0168 0393     		str	r3, [sp, #12]
 368:Src/main.c    ****     pOutputCfg.IdleLevel = HRTIM_OUTPUTIDLELEVEL_INACTIVE;
 600              		.loc 1 368 5 is_stmt 1 view .LVU213
 368:Src/main.c    ****     pOutputCfg.IdleLevel = HRTIM_OUTPUTIDLELEVEL_INACTIVE;
 601              		.loc 1 368 25 is_stmt 0 view .LVU214
 602 016a 0494     		str	r4, [sp, #16]
 369:Src/main.c    ****     pOutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
 603              		.loc 1 369 5 is_stmt 1 view .LVU215
 369:Src/main.c    ****     pOutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
 604              		.loc 1 369 26 is_stmt 0 view .LVU216
 605 016c 0594     		str	r4, [sp, #20]
 370:Src/main.c    ****     pOutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
 606              		.loc 1 370 5 is_stmt 1 view .LVU217
 370:Src/main.c    ****     pOutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
 607              		.loc 1 370 27 is_stmt 0 view .LVU218
 608 016e 0694     		str	r4, [sp, #24]
 371:Src/main.c    ****     pOutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
 609              		.loc 1 371 5 is_stmt 1 view .LVU219
 371:Src/main.c    ****     pOutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
 610              		.loc 1 371 34 is_stmt 0 view .LVU220
 611 0170 0794     		str	r4, [sp, #28]
 372:Src/main.c    ****     if (HAL_HRTIM_WaveformOutputConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_OUTPUT_TA1, &pOutp
 612              		.loc 1 372 5 is_stmt 1 view .LVU221
 372:Src/main.c    ****     if (HAL_HRTIM_WaveformOutputConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_OUTPUT_TA1, &pOutp
 613              		.loc 1 372 38 is_stmt 0 view .LVU222
 614 0172 0894     		str	r4, [sp, #32]
 373:Src/main.c    ****     {
 615              		.loc 1 373 5 is_stmt 1 view .LVU223
 373:Src/main.c    ****     {
 616              		.loc 1 373 9 is_stmt 0 view .LVU224
 617 0174 01AB     		add	r3, sp, #4
 618 0176 3246     		mov	r2, r6
 619 0178 2146     		mov	r1, r4
 620 017a 2846     		mov	r0, r5
 621 017c FFF7FEFF 		bl	HAL_HRTIM_WaveformOutputConfig
 622              	.LVL26:
ARM GAS  /tmp/cc87BusA.s 			page 24


 377:Src/main.c    ****     pOutputCfg.ResetSource = HRTIM_OUTPUTRESET_NONE;
 623              		.loc 1 377 5 is_stmt 1 view .LVU225
 377:Src/main.c    ****     pOutputCfg.ResetSource = HRTIM_OUTPUTRESET_NONE;
 624              		.loc 1 377 26 is_stmt 0 view .LVU226
 625 0180 0294     		str	r4, [sp, #8]
 378:Src/main.c    ****     if (HAL_HRTIM_WaveformOutputConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_OUTPUT_TA2, &pOutp
 626              		.loc 1 378 5 is_stmt 1 view .LVU227
 378:Src/main.c    ****     if (HAL_HRTIM_WaveformOutputConfig(&hhrtim1, HRTIM_TIMERINDEX_TIMER_A, HRTIM_OUTPUT_TA2, &pOutp
 627              		.loc 1 378 28 is_stmt 0 view .LVU228
 628 0182 0394     		str	r4, [sp, #12]
 379:Src/main.c    ****     {
 629              		.loc 1 379 5 is_stmt 1 view .LVU229
 379:Src/main.c    ****     {
 630              		.loc 1 379 9 is_stmt 0 view .LVU230
 631 0184 01AB     		add	r3, sp, #4
 632 0186 3A46     		mov	r2, r7
 633 0188 2146     		mov	r1, r4
 634 018a 2846     		mov	r0, r5
 635 018c FFF7FEFF 		bl	HAL_HRTIM_WaveformOutputConfig
 636              	.LVL27:
 383:Src/main.c    ****     {
 637              		.loc 1 383 5 is_stmt 1 view .LVU231
 383:Src/main.c    ****     {
 638              		.loc 1 383 9 is_stmt 0 view .LVU232
 639 0190 2AAA     		add	r2, sp, #168
 640 0192 3146     		mov	r1, r6
 641 0194 2846     		mov	r0, r5
 642 0196 FFF7FEFF 		bl	HAL_HRTIM_TimeBaseConfig
 643              	.LVL28:
 390:Src/main.c    **** }
 644              		.loc 1 390 5 is_stmt 1 view .LVU233
 645 019a 2846     		mov	r0, r5
 646 019c FFF7FEFF 		bl	HAL_HRTIM_MspPostInit
 647              	.LVL29:
 391:Src/main.c    **** 
 648              		.loc 1 391 1 is_stmt 0 view .LVU234
 649 01a0 30B0     		add	sp, sp, #192
 650              	.LCFI8:
 651              		.cfi_def_cfa_offset 32
 652              		@ sp needed
 653 01a2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 654              	.L12:
 655 01a6 00BF     		.align	2
 656              	.L11:
 657 01a8 00000000 		.word	hhrtim1
 658 01ac 00740140 		.word	1073837056
 659              		.cfi_endproc
 660              	.LFE129:
 662              		.section	.text.MX_ADC1_Init,"ax",%progbits
 663              		.align	1
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	MX_ADC1_Init:
 670              	.LFB128:
 180:Src/main.c    **** 
ARM GAS  /tmp/cc87BusA.s 			page 25


 671              		.loc 1 180 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 40
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 676              	.LCFI9:
 677              		.cfi_def_cfa_offset 20
 678              		.cfi_offset 4, -20
 679              		.cfi_offset 5, -16
 680              		.cfi_offset 6, -12
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 8BB0     		sub	sp, sp, #44
 684              	.LCFI10:
 685              		.cfi_def_cfa_offset 64
 186:Src/main.c    ****     ADC_ChannelConfTypeDef sConfig ={ 0 };
 686              		.loc 1 186 5 view .LVU236
 186:Src/main.c    ****     ADC_ChannelConfTypeDef sConfig ={ 0 };
 687              		.loc 1 186 26 is_stmt 0 view .LVU237
 688 0004 0025     		movs	r5, #0
 689 0006 0795     		str	r5, [sp, #28]
 690 0008 0895     		str	r5, [sp, #32]
 691 000a 0995     		str	r5, [sp, #36]
 187:Src/main.c    **** 
 692              		.loc 1 187 5 is_stmt 1 view .LVU238
 187:Src/main.c    **** 
 693              		.loc 1 187 28 is_stmt 0 view .LVU239
 694 000c 0195     		str	r5, [sp, #4]
 695 000e 0295     		str	r5, [sp, #8]
 696 0010 0395     		str	r5, [sp, #12]
 697 0012 0495     		str	r5, [sp, #16]
 698 0014 0595     		str	r5, [sp, #20]
 699 0016 0695     		str	r5, [sp, #24]
 194:Src/main.c    ****     hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 700              		.loc 1 194 5 is_stmt 1 view .LVU240
 194:Src/main.c    ****     hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 701              		.loc 1 194 20 is_stmt 0 view .LVU241
 702 0018 1B4C     		ldr	r4, .L15
 703 001a 4FF0A043 		mov	r3, #1342177280
 704 001e 2360     		str	r3, [r4]
 195:Src/main.c    ****     hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 705              		.loc 1 195 5 is_stmt 1 view .LVU242
 195:Src/main.c    ****     hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 706              		.loc 1 195 31 is_stmt 0 view .LVU243
 707 0020 4FF40033 		mov	r3, #131072
 708 0024 6360     		str	r3, [r4, #4]
 196:Src/main.c    ****     hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 709              		.loc 1 196 5 is_stmt 1 view .LVU244
 196:Src/main.c    ****     hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 710              		.loc 1 196 27 is_stmt 0 view .LVU245
 711 0026 A560     		str	r5, [r4, #8]
 197:Src/main.c    ****     hadc1.Init.ContinuousConvMode = DISABLE;
 712              		.loc 1 197 5 is_stmt 1 view .LVU246
 197:Src/main.c    ****     hadc1.Init.ContinuousConvMode = DISABLE;
 713              		.loc 1 197 29 is_stmt 0 view .LVU247
 714 0028 0126     		movs	r6, #1
 715 002a 2661     		str	r6, [r4, #16]
ARM GAS  /tmp/cc87BusA.s 			page 26


 198:Src/main.c    ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 716              		.loc 1 198 5 is_stmt 1 view .LVU248
 198:Src/main.c    ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 717              		.loc 1 198 35 is_stmt 0 view .LVU249
 718 002c E561     		str	r5, [r4, #28]
 199:Src/main.c    ****     hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 719              		.loc 1 199 5 is_stmt 1 view .LVU250
 199:Src/main.c    ****     hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 720              		.loc 1 199 38 is_stmt 0 view .LVU251
 721 002e 6562     		str	r5, [r4, #36]
 200:Src/main.c    ****     hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONVHRTIM_TRG1;
 722              		.loc 1 200 5 is_stmt 1 view .LVU252
 200:Src/main.c    ****     hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONVHRTIM_TRG1;
 723              		.loc 1 200 37 is_stmt 0 view .LVU253
 724 0030 4FF48063 		mov	r3, #1024
 725 0034 2363     		str	r3, [r4, #48]
 201:Src/main.c    ****     hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 726              		.loc 1 201 5 is_stmt 1 view .LVU254
 201:Src/main.c    ****     hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 727              		.loc 1 201 33 is_stmt 0 view .LVU255
 728 0036 4FF4E073 		mov	r3, #448
 729 003a E362     		str	r3, [r4, #44]
 202:Src/main.c    ****     hadc1.Init.NbrOfConversion = 2;
 730              		.loc 1 202 5 is_stmt 1 view .LVU256
 202:Src/main.c    ****     hadc1.Init.NbrOfConversion = 2;
 731              		.loc 1 202 26 is_stmt 0 view .LVU257
 732 003c E560     		str	r5, [r4, #12]
 203:Src/main.c    ****     hadc1.Init.DMAContinuousRequests = ENABLE;
 733              		.loc 1 203 5 is_stmt 1 view .LVU258
 203:Src/main.c    ****     hadc1.Init.DMAContinuousRequests = ENABLE;
 734              		.loc 1 203 32 is_stmt 0 view .LVU259
 735 003e 0227     		movs	r7, #2
 736 0040 2762     		str	r7, [r4, #32]
 204:Src/main.c    ****     hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 737              		.loc 1 204 5 is_stmt 1 view .LVU260
 204:Src/main.c    ****     hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 738              		.loc 1 204 38 is_stmt 0 view .LVU261
 739 0042 6663     		str	r6, [r4, #52]
 205:Src/main.c    ****     hadc1.Init.LowPowerAutoWait = DISABLE;
 740              		.loc 1 205 5 is_stmt 1 view .LVU262
 205:Src/main.c    ****     hadc1.Init.LowPowerAutoWait = DISABLE;
 741              		.loc 1 205 29 is_stmt 0 view .LVU263
 742 0044 0823     		movs	r3, #8
 743 0046 6361     		str	r3, [r4, #20]
 206:Src/main.c    ****     hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 744              		.loc 1 206 5 is_stmt 1 view .LVU264
 206:Src/main.c    ****     hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 745              		.loc 1 206 33 is_stmt 0 view .LVU265
 746 0048 A561     		str	r5, [r4, #24]
 207:Src/main.c    ****     if (HAL_ADC_Init(&hadc1) != HAL_OK)
 747              		.loc 1 207 5 is_stmt 1 view .LVU266
 207:Src/main.c    ****     if (HAL_ADC_Init(&hadc1) != HAL_OK)
 748              		.loc 1 207 24 is_stmt 0 view .LVU267
 749 004a A563     		str	r5, [r4, #56]
 208:Src/main.c    ****     {
 750              		.loc 1 208 5 is_stmt 1 view .LVU268
 208:Src/main.c    ****     {
ARM GAS  /tmp/cc87BusA.s 			page 27


 751              		.loc 1 208 9 is_stmt 0 view .LVU269
 752 004c 2046     		mov	r0, r4
 753 004e FFF7FEFF 		bl	HAL_ADC_Init
 754              	.LVL30:
 214:Src/main.c    ****     if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 755              		.loc 1 214 5 is_stmt 1 view .LVU270
 214:Src/main.c    ****     if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 756              		.loc 1 214 20 is_stmt 0 view .LVU271
 757 0052 0795     		str	r5, [sp, #28]
 215:Src/main.c    ****     {
 758              		.loc 1 215 5 is_stmt 1 view .LVU272
 215:Src/main.c    ****     {
 759              		.loc 1 215 9 is_stmt 0 view .LVU273
 760 0054 07A9     		add	r1, sp, #28
 761 0056 2046     		mov	r0, r4
 762 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 763              	.LVL31:
 221:Src/main.c    ****     sConfig.Rank = ADC_REGULAR_RANK_1;
 764              		.loc 1 221 5 is_stmt 1 view .LVU274
 221:Src/main.c    ****     sConfig.Rank = ADC_REGULAR_RANK_1;
 765              		.loc 1 221 21 is_stmt 0 view .LVU275
 766 005c 0196     		str	r6, [sp, #4]
 222:Src/main.c    ****     sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 767              		.loc 1 222 5 is_stmt 1 view .LVU276
 222:Src/main.c    ****     sConfig.SingleDiff = ADC_DIFFERENTIAL_ENDED;
 768              		.loc 1 222 18 is_stmt 0 view .LVU277
 769 005e 0296     		str	r6, [sp, #8]
 223:Src/main.c    ****     sConfig.SamplingTime = ADC_SAMPLETIME_19CYCLES_5;
 770              		.loc 1 223 5 is_stmt 1 view .LVU278
 223:Src/main.c    ****     sConfig.SamplingTime = ADC_SAMPLETIME_19CYCLES_5;
 771              		.loc 1 223 24 is_stmt 0 view .LVU279
 772 0060 0496     		str	r6, [sp, #16]
 224:Src/main.c    ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;
 773              		.loc 1 224 5 is_stmt 1 view .LVU280
 224:Src/main.c    ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;
 774              		.loc 1 224 26 is_stmt 0 view .LVU281
 775 0062 0423     		movs	r3, #4
 776 0064 0393     		str	r3, [sp, #12]
 225:Src/main.c    ****     sConfig.Offset = 0;
 777              		.loc 1 225 5 is_stmt 1 view .LVU282
 225:Src/main.c    ****     sConfig.Offset = 0;
 778              		.loc 1 225 26 is_stmt 0 view .LVU283
 779 0066 0595     		str	r5, [sp, #20]
 226:Src/main.c    ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 780              		.loc 1 226 5 is_stmt 1 view .LVU284
 226:Src/main.c    ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 781              		.loc 1 226 20 is_stmt 0 view .LVU285
 782 0068 0695     		str	r5, [sp, #24]
 227:Src/main.c    ****     {
 783              		.loc 1 227 5 is_stmt 1 view .LVU286
 227:Src/main.c    ****     {
 784              		.loc 1 227 9 is_stmt 0 view .LVU287
 785 006a 0DEB0301 		add	r1, sp, r3
 786 006e 2046     		mov	r0, r4
 787 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 788              	.LVL32:
 233:Src/main.c    ****     sConfig.Rank = ADC_REGULAR_RANK_2;
ARM GAS  /tmp/cc87BusA.s 			page 28


 789              		.loc 1 233 5 is_stmt 1 view .LVU288
 233:Src/main.c    ****     sConfig.Rank = ADC_REGULAR_RANK_2;
 790              		.loc 1 233 21 is_stmt 0 view .LVU289
 791 0074 0323     		movs	r3, #3
 792 0076 0193     		str	r3, [sp, #4]
 234:Src/main.c    ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 793              		.loc 1 234 5 is_stmt 1 view .LVU290
 234:Src/main.c    ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 794              		.loc 1 234 18 is_stmt 0 view .LVU291
 795 0078 0297     		str	r7, [sp, #8]
 235:Src/main.c    ****     {
 796              		.loc 1 235 5 is_stmt 1 view .LVU292
 235:Src/main.c    ****     {
 797              		.loc 1 235 9 is_stmt 0 view .LVU293
 798 007a 01A9     		add	r1, sp, #4
 799 007c 2046     		mov	r0, r4
 800 007e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 801              	.LVL33:
 242:Src/main.c    **** 
 802              		.loc 1 242 1 view .LVU294
 803 0082 0BB0     		add	sp, sp, #44
 804              	.LCFI11:
 805              		.cfi_def_cfa_offset 20
 806              		@ sp needed
 807 0084 F0BD     		pop	{r4, r5, r6, r7, pc}
 808              	.L16:
 809 0086 00BF     		.align	2
 810              	.L15:
 811 0088 00000000 		.word	hadc1
 812              		.cfi_endproc
 813              	.LFE128:
 815              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 816              		.align	1
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	MX_USART1_UART_Init:
 823              	.LFB130:
 399:Src/main.c    **** 
 824              		.loc 1 399 1 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828 0000 08B5     		push	{r3, lr}
 829              	.LCFI12:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 3, -8
 832              		.cfi_offset 14, -4
 408:Src/main.c    ****     huart1.Init.BaudRate = 38400;
 833              		.loc 1 408 5 view .LVU296
 408:Src/main.c    ****     huart1.Init.BaudRate = 38400;
 834              		.loc 1 408 21 is_stmt 0 view .LVU297
 835 0002 0948     		ldr	r0, .L19
 836 0004 094B     		ldr	r3, .L19+4
 837 0006 0360     		str	r3, [r0]
 409:Src/main.c    ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/cc87BusA.s 			page 29


 838              		.loc 1 409 5 is_stmt 1 view .LVU298
 409:Src/main.c    ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
 839              		.loc 1 409 26 is_stmt 0 view .LVU299
 840 0008 4FF41643 		mov	r3, #38400
 841 000c 4360     		str	r3, [r0, #4]
 410:Src/main.c    ****     huart1.Init.StopBits = UART_STOPBITS_1;
 842              		.loc 1 410 5 is_stmt 1 view .LVU300
 410:Src/main.c    ****     huart1.Init.StopBits = UART_STOPBITS_1;
 843              		.loc 1 410 28 is_stmt 0 view .LVU301
 844 000e 0023     		movs	r3, #0
 845 0010 8360     		str	r3, [r0, #8]
 411:Src/main.c    ****     huart1.Init.Parity = UART_PARITY_NONE;
 846              		.loc 1 411 5 is_stmt 1 view .LVU302
 411:Src/main.c    ****     huart1.Init.Parity = UART_PARITY_NONE;
 847              		.loc 1 411 26 is_stmt 0 view .LVU303
 848 0012 C360     		str	r3, [r0, #12]
 412:Src/main.c    ****     huart1.Init.Mode = UART_MODE_TX_RX;
 849              		.loc 1 412 5 is_stmt 1 view .LVU304
 412:Src/main.c    ****     huart1.Init.Mode = UART_MODE_TX_RX;
 850              		.loc 1 412 24 is_stmt 0 view .LVU305
 851 0014 0361     		str	r3, [r0, #16]
 413:Src/main.c    ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 852              		.loc 1 413 5 is_stmt 1 view .LVU306
 413:Src/main.c    ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 853              		.loc 1 413 22 is_stmt 0 view .LVU307
 854 0016 0C22     		movs	r2, #12
 855 0018 4261     		str	r2, [r0, #20]
 414:Src/main.c    ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 856              		.loc 1 414 5 is_stmt 1 view .LVU308
 414:Src/main.c    ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 857              		.loc 1 414 27 is_stmt 0 view .LVU309
 858 001a 8361     		str	r3, [r0, #24]
 415:Src/main.c    ****     huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 859              		.loc 1 415 5 is_stmt 1 view .LVU310
 415:Src/main.c    ****     huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 860              		.loc 1 415 30 is_stmt 0 view .LVU311
 861 001c C361     		str	r3, [r0, #28]
 416:Src/main.c    ****     huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 862              		.loc 1 416 5 is_stmt 1 view .LVU312
 416:Src/main.c    ****     huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 863              		.loc 1 416 32 is_stmt 0 view .LVU313
 864 001e 0362     		str	r3, [r0, #32]
 417:Src/main.c    ****     if (HAL_UART_Init(&huart1) != HAL_OK)
 865              		.loc 1 417 5 is_stmt 1 view .LVU314
 417:Src/main.c    ****     if (HAL_UART_Init(&huart1) != HAL_OK)
 866              		.loc 1 417 40 is_stmt 0 view .LVU315
 867 0020 4362     		str	r3, [r0, #36]
 418:Src/main.c    ****     {
 868              		.loc 1 418 5 is_stmt 1 view .LVU316
 418:Src/main.c    ****     {
 869              		.loc 1 418 9 is_stmt 0 view .LVU317
 870 0022 FFF7FEFF 		bl	HAL_UART_Init
 871              	.LVL34:
 425:Src/main.c    **** 
 872              		.loc 1 425 1 view .LVU318
 873 0026 08BD     		pop	{r3, pc}
 874              	.L20:
ARM GAS  /tmp/cc87BusA.s 			page 30


 875              		.align	2
 876              	.L19:
 877 0028 00000000 		.word	huart1
 878 002c 00380140 		.word	1073821696
 879              		.cfi_endproc
 880              	.LFE130:
 882              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 883              		.align	1
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 887              		.fpu fpv4-sp-d16
 889              	MX_USART3_UART_Init:
 890              	.LFB131:
 433:Src/main.c    **** 
 891              		.loc 1 433 1 is_stmt 1 view -0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895 0000 08B5     		push	{r3, lr}
 896              	.LCFI13:
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 3, -8
 899              		.cfi_offset 14, -4
 442:Src/main.c    ****     huart3.Init.BaudRate = 38400;
 900              		.loc 1 442 5 view .LVU320
 442:Src/main.c    ****     huart3.Init.BaudRate = 38400;
 901              		.loc 1 442 21 is_stmt 0 view .LVU321
 902 0002 0948     		ldr	r0, .L23
 903 0004 094B     		ldr	r3, .L23+4
 904 0006 0360     		str	r3, [r0]
 443:Src/main.c    ****     huart3.Init.WordLength = UART_WORDLENGTH_8B;
 905              		.loc 1 443 5 is_stmt 1 view .LVU322
 443:Src/main.c    ****     huart3.Init.WordLength = UART_WORDLENGTH_8B;
 906              		.loc 1 443 26 is_stmt 0 view .LVU323
 907 0008 4FF41643 		mov	r3, #38400
 908 000c 4360     		str	r3, [r0, #4]
 444:Src/main.c    ****     huart3.Init.StopBits = UART_STOPBITS_1;
 909              		.loc 1 444 5 is_stmt 1 view .LVU324
 444:Src/main.c    ****     huart3.Init.StopBits = UART_STOPBITS_1;
 910              		.loc 1 444 28 is_stmt 0 view .LVU325
 911 000e 0023     		movs	r3, #0
 912 0010 8360     		str	r3, [r0, #8]
 445:Src/main.c    ****     huart3.Init.Parity = UART_PARITY_NONE;
 913              		.loc 1 445 5 is_stmt 1 view .LVU326
 445:Src/main.c    ****     huart3.Init.Parity = UART_PARITY_NONE;
 914              		.loc 1 445 26 is_stmt 0 view .LVU327
 915 0012 C360     		str	r3, [r0, #12]
 446:Src/main.c    ****     huart3.Init.Mode = UART_MODE_TX_RX;
 916              		.loc 1 446 5 is_stmt 1 view .LVU328
 446:Src/main.c    ****     huart3.Init.Mode = UART_MODE_TX_RX;
 917              		.loc 1 446 24 is_stmt 0 view .LVU329
 918 0014 0361     		str	r3, [r0, #16]
 447:Src/main.c    ****     huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 919              		.loc 1 447 5 is_stmt 1 view .LVU330
 447:Src/main.c    ****     huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 920              		.loc 1 447 22 is_stmt 0 view .LVU331
ARM GAS  /tmp/cc87BusA.s 			page 31


 921 0016 0C22     		movs	r2, #12
 922 0018 4261     		str	r2, [r0, #20]
 448:Src/main.c    ****     huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 923              		.loc 1 448 5 is_stmt 1 view .LVU332
 448:Src/main.c    ****     huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 924              		.loc 1 448 27 is_stmt 0 view .LVU333
 925 001a 8361     		str	r3, [r0, #24]
 449:Src/main.c    ****     huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 926              		.loc 1 449 5 is_stmt 1 view .LVU334
 449:Src/main.c    ****     huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 927              		.loc 1 449 30 is_stmt 0 view .LVU335
 928 001c C361     		str	r3, [r0, #28]
 450:Src/main.c    ****     huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 929              		.loc 1 450 5 is_stmt 1 view .LVU336
 450:Src/main.c    ****     huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 930              		.loc 1 450 32 is_stmt 0 view .LVU337
 931 001e 0362     		str	r3, [r0, #32]
 451:Src/main.c    ****     if (HAL_UART_Init(&huart3) != HAL_OK)
 932              		.loc 1 451 5 is_stmt 1 view .LVU338
 451:Src/main.c    ****     if (HAL_UART_Init(&huart3) != HAL_OK)
 933              		.loc 1 451 40 is_stmt 0 view .LVU339
 934 0020 4362     		str	r3, [r0, #36]
 452:Src/main.c    ****     {
 935              		.loc 1 452 5 is_stmt 1 view .LVU340
 452:Src/main.c    ****     {
 936              		.loc 1 452 9 is_stmt 0 view .LVU341
 937 0022 FFF7FEFF 		bl	HAL_UART_Init
 938              	.LVL35:
 459:Src/main.c    **** 
 939              		.loc 1 459 1 view .LVU342
 940 0026 08BD     		pop	{r3, pc}
 941              	.L24:
 942              		.align	2
 943              	.L23:
 944 0028 00000000 		.word	huart3
 945 002c 00480040 		.word	1073760256
 946              		.cfi_endproc
 947              	.LFE131:
 949              		.section	.text.SystemClock_Config,"ax",%progbits
 950              		.align	1
 951              		.global	SystemClock_Config
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 955              		.fpu fpv4-sp-d16
 957              	SystemClock_Config:
 958              	.LFB127:
 135:Src/main.c    ****     RCC_OscInitTypeDef RCC_OscInitStruct ={ 0 };
 959              		.loc 1 135 1 is_stmt 1 view -0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 88
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963 0000 30B5     		push	{r4, r5, lr}
 964              	.LCFI14:
 965              		.cfi_def_cfa_offset 12
 966              		.cfi_offset 4, -12
 967              		.cfi_offset 5, -8
ARM GAS  /tmp/cc87BusA.s 			page 32


 968              		.cfi_offset 14, -4
 969 0002 97B0     		sub	sp, sp, #92
 970              	.LCFI15:
 971              		.cfi_def_cfa_offset 104
 136:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct ={ 0 };
 972              		.loc 1 136 5 view .LVU344
 136:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct ={ 0 };
 973              		.loc 1 136 24 is_stmt 0 view .LVU345
 974 0004 0024     		movs	r4, #0
 975 0006 0E94     		str	r4, [sp, #56]
 976 0008 0F94     		str	r4, [sp, #60]
 977 000a 1194     		str	r4, [sp, #68]
 978 000c 1294     		str	r4, [sp, #72]
 137:Src/main.c    ****     RCC_PeriphCLKInitTypeDef PeriphClkInit ={ 0 };
 979              		.loc 1 137 5 is_stmt 1 view .LVU346
 137:Src/main.c    ****     RCC_PeriphCLKInitTypeDef PeriphClkInit ={ 0 };
 980              		.loc 1 137 24 is_stmt 0 view .LVU347
 981 000e 0794     		str	r4, [sp, #28]
 982 0010 0894     		str	r4, [sp, #32]
 983 0012 0994     		str	r4, [sp, #36]
 984 0014 0A94     		str	r4, [sp, #40]
 985 0016 0B94     		str	r4, [sp, #44]
 138:Src/main.c    **** 
 986              		.loc 1 138 5 is_stmt 1 view .LVU348
 138:Src/main.c    **** 
 987              		.loc 1 138 30 is_stmt 0 view .LVU349
 988 0018 0094     		str	r4, [sp]
 989 001a 0194     		str	r4, [sp, #4]
 990 001c 0294     		str	r4, [sp, #8]
 991 001e 0394     		str	r4, [sp, #12]
 992 0020 0494     		str	r4, [sp, #16]
 993 0022 0594     		str	r4, [sp, #20]
 994 0024 0694     		str	r4, [sp, #24]
 142:Src/main.c    ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 995              		.loc 1 142 5 is_stmt 1 view .LVU350
 142:Src/main.c    ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 996              		.loc 1 142 38 is_stmt 0 view .LVU351
 997 0026 0122     		movs	r2, #1
 998 0028 0C92     		str	r2, [sp, #48]
 143:Src/main.c    ****     RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 999              		.loc 1 143 5 is_stmt 1 view .LVU352
 143:Src/main.c    ****     RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1000              		.loc 1 143 32 is_stmt 0 view .LVU353
 1001 002a 4FF48033 		mov	r3, #65536
 1002 002e 0D93     		str	r3, [sp, #52]
 144:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1003              		.loc 1 144 5 is_stmt 1 view .LVU354
 145:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1004              		.loc 1 145 5 view .LVU355
 145:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1005              		.loc 1 145 32 is_stmt 0 view .LVU356
 1006 0030 1092     		str	r2, [sp, #64]
 146:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1007              		.loc 1 146 5 is_stmt 1 view .LVU357
 146:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1008              		.loc 1 146 36 is_stmt 0 view .LVU358
 1009 0032 0225     		movs	r5, #2
ARM GAS  /tmp/cc87BusA.s 			page 33


 1010 0034 1395     		str	r5, [sp, #76]
 147:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1011              		.loc 1 147 5 is_stmt 1 view .LVU359
 147:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1012              		.loc 1 147 37 is_stmt 0 view .LVU360
 1013 0036 1493     		str	r3, [sp, #80]
 148:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1014              		.loc 1 148 5 is_stmt 1 view .LVU361
 148:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1015              		.loc 1 148 34 is_stmt 0 view .LVU362
 1016 0038 4FF4E013 		mov	r3, #1835008
 1017 003c 1593     		str	r3, [sp, #84]
 149:Src/main.c    ****     {
 1018              		.loc 1 149 5 is_stmt 1 view .LVU363
 149:Src/main.c    ****     {
 1019              		.loc 1 149 9 is_stmt 0 view .LVU364
 1020 003e 0CA8     		add	r0, sp, #48
 1021 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1022              	.LVL36:
 155:Src/main.c    ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1023              		.loc 1 155 5 is_stmt 1 view .LVU365
 155:Src/main.c    ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1024              		.loc 1 155 33 is_stmt 0 view .LVU366
 1025 0044 0F23     		movs	r3, #15
 1026 0046 0793     		str	r3, [sp, #28]
 156:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1027              		.loc 1 156 5 is_stmt 1 view .LVU367
 156:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1028              		.loc 1 156 36 is_stmt 0 view .LVU368
 1029 0048 0895     		str	r5, [sp, #32]
 157:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1030              		.loc 1 157 5 is_stmt 1 view .LVU369
 157:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1031              		.loc 1 157 37 is_stmt 0 view .LVU370
 1032 004a 0994     		str	r4, [sp, #36]
 158:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1033              		.loc 1 158 5 is_stmt 1 view .LVU371
 158:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1034              		.loc 1 158 38 is_stmt 0 view .LVU372
 1035 004c 4FF48063 		mov	r3, #1024
 1036 0050 0A93     		str	r3, [sp, #40]
 159:Src/main.c    **** 
 1037              		.loc 1 159 5 is_stmt 1 view .LVU373
 159:Src/main.c    **** 
 1038              		.loc 1 159 38 is_stmt 0 view .LVU374
 1039 0052 0B94     		str	r4, [sp, #44]
 161:Src/main.c    ****     {
 1040              		.loc 1 161 5 is_stmt 1 view .LVU375
 161:Src/main.c    ****     {
 1041              		.loc 1 161 9 is_stmt 0 view .LVU376
 1042 0054 2946     		mov	r1, r5
 1043 0056 07A8     		add	r0, sp, #28
 1044 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1045              	.LVL37:
 165:Src/main.c    ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 1046              		.loc 1 165 5 is_stmt 1 view .LVU377
 165:Src/main.c    ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
ARM GAS  /tmp/cc87BusA.s 			page 34


 1047              		.loc 1 165 40 is_stmt 0 view .LVU378
 1048 005c 44F20103 		movw	r3, #16385
 1049 0060 0093     		str	r3, [sp]
 166:Src/main.c    ****     PeriphClkInit.Hrtim1ClockSelection = RCC_HRTIM1CLK_PLLCLK;
 1050              		.loc 1 166 5 is_stmt 1 view .LVU379
 166:Src/main.c    ****     PeriphClkInit.Hrtim1ClockSelection = RCC_HRTIM1CLK_PLLCLK;
 1051              		.loc 1 166 40 is_stmt 0 view .LVU380
 1052 0062 0294     		str	r4, [sp, #8]
 167:Src/main.c    ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1053              		.loc 1 167 5 is_stmt 1 view .LVU381
 167:Src/main.c    ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1054              		.loc 1 167 40 is_stmt 0 view .LVU382
 1055 0064 4FF48053 		mov	r3, #4096
 1056 0068 0693     		str	r3, [sp, #24]
 168:Src/main.c    ****     {
 1057              		.loc 1 168 5 is_stmt 1 view .LVU383
 168:Src/main.c    ****     {
 1058              		.loc 1 168 9 is_stmt 0 view .LVU384
 1059 006a 6846     		mov	r0, sp
 1060 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1061              	.LVL38:
 172:Src/main.c    **** 
 1062              		.loc 1 172 1 view .LVU385
 1063 0070 17B0     		add	sp, sp, #92
 1064              	.LCFI16:
 1065              		.cfi_def_cfa_offset 12
 1066              		@ sp needed
 1067 0072 30BD     		pop	{r4, r5, pc}
 1068              		.cfi_endproc
 1069              	.LFE127:
 1071              		.section	.text.main,"ax",%progbits
 1072              		.align	1
 1073              		.global	main
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1079              	main:
 1080              	.LFB126:
  80:Src/main.c    ****     /* USER CODE BEGIN 1 */
 1081              		.loc 1 80 1 is_stmt 1 view -0
 1082              		.cfi_startproc
 1083              		@ Volatile: function does not return.
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086 0000 08B5     		push	{r3, lr}
 1087              	.LCFI17:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 3, -8
 1090              		.cfi_offset 14, -4
  88:Src/main.c    **** 
 1091              		.loc 1 88 5 view .LVU387
 1092 0002 FFF7FEFF 		bl	HAL_Init
 1093              	.LVL39:
  95:Src/main.c    **** 
 1094              		.loc 1 95 5 view .LVU388
 1095 0006 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/cc87BusA.s 			page 35


 1096              	.LVL40:
 102:Src/main.c    ****     MX_DMA_Init();
 1097              		.loc 1 102 5 view .LVU389
 1098 000a FFF7FEFF 		bl	MX_GPIO_Init
 1099              	.LVL41:
 103:Src/main.c    ****     MX_HRTIM1_Init();
 1100              		.loc 1 103 5 view .LVU390
 1101 000e FFF7FEFF 		bl	MX_DMA_Init
 1102              	.LVL42:
 104:Src/main.c    ****     MX_ADC1_Init();
 1103              		.loc 1 104 5 view .LVU391
 1104 0012 FFF7FEFF 		bl	MX_HRTIM1_Init
 1105              	.LVL43:
 105:Src/main.c    ****     MX_USART1_UART_Init();
 1106              		.loc 1 105 5 view .LVU392
 1107 0016 FFF7FEFF 		bl	MX_ADC1_Init
 1108              	.LVL44:
 106:Src/main.c    ****     MX_USART3_UART_Init();
 1109              		.loc 1 106 5 view .LVU393
 1110 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 1111              	.LVL45:
 107:Src/main.c    **** 
 1112              		.loc 1 107 5 view .LVU394
 1113 001e FFF7FEFF 		bl	MX_USART3_UART_Init
 1114              	.LVL46:
 110:Src/main.c    **** 
 1115              		.loc 1 110 5 view .LVU395
 1116 0022 40F2DC50 		movw	r0, #1500
 1117 0026 FFF7FEFF 		bl	HAL_Delay
 1118              	.LVL47:
 113:Src/main.c    ****     HAL_GPIO_WritePin(CONTACTOR_CTRL_GPIO_Port, CONTACTOR_CTRL_Pin, GPIO_PIN_RESET);
 1119              		.loc 1 113 5 view .LVU396
 1120 002a FFF7FEFF 		bl	EepromEmulator_Init
 1121              	.LVL48:
 114:Src/main.c    ****     Lattice_Start();
 1122              		.loc 1 114 5 view .LVU397
 1123 002e 0022     		movs	r2, #0
 1124 0030 2021     		movs	r1, #32
 1125 0032 0448     		ldr	r0, .L30
 1126 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1127              	.LVL49:
 115:Src/main.c    ****     /* USER CODE END 2 */
 1128              		.loc 1 115 5 view .LVU398
 1129 0038 FFF7FEFF 		bl	Lattice_Start
 1130              	.LVL50:
 1131              	.L28:
 120:Src/main.c    ****     {
 1132              		.loc 1 120 5 discriminator 1 view .LVU399
 122:Src/main.c    ****         /* USER CODE END WHILE */
 1133              		.loc 1 122 9 discriminator 1 view .LVU400
 1134 003c FFF7FEFF 		bl	Lattice_Execute
 1135              	.LVL51:
 1136 0040 FCE7     		b	.L28
 1137              	.L31:
 1138 0042 00BF     		.align	2
 1139              	.L30:
 1140 0044 00040048 		.word	1207960576
ARM GAS  /tmp/cc87BusA.s 			page 36


 1141              		.cfi_endproc
 1142              	.LFE126:
 1144              		.section	.text.Lattice_StatusChangeCb,"ax",%progbits
 1145              		.align	1
 1146              		.global	Lattice_StatusChangeCb
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv4-sp-d16
 1152              	Lattice_StatusChangeCb:
 1153              	.LVL52:
 1154              	.LFB134:
 527:Src/main.c    **** 
 528:Src/main.c    **** /* USER CODE BEGIN 4 */
 529:Src/main.c    **** void Lattice_StatusChangeCb(Lattice_Status_t *status)
 530:Src/main.c    **** {
 1155              		.loc 1 530 1 view -0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 531:Src/main.c    **** }
 1160              		.loc 1 531 1 view .LVU402
 1161 0000 7047     		bx	lr
 1162              		.cfi_endproc
 1163              	.LFE134:
 1165              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1166              		.align	1
 1167              		.global	HAL_GPIO_EXTI_Callback
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu fpv4-sp-d16
 1173              	HAL_GPIO_EXTI_Callback:
 1174              	.LVL53:
 1175              	.LFB135:
 532:Src/main.c    **** 
 533:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 534:Src/main.c    **** {
 1176              		.loc 1 534 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              		.loc 1 534 1 is_stmt 0 view .LVU404
 1181 0000 10B5     		push	{r4, lr}
 1182              	.LCFI18:
 1183              		.cfi_def_cfa_offset 8
 1184              		.cfi_offset 4, -8
 1185              		.cfi_offset 14, -4
 1186 0002 0446     		mov	r4, r0
 535:Src/main.c    ****     if (GPIO_Pin == TRIGIN_RISING_Pin)
 1187              		.loc 1 535 5 is_stmt 1 view .LVU405
 1188              		.loc 1 535 8 is_stmt 0 view .LVU406
 1189 0004 1028     		cmp	r0, #16
 1190 0006 02D0     		beq	.L37
 1191              	.LVL54:
 1192              	.L34:
ARM GAS  /tmp/cc87BusA.s 			page 37


 536:Src/main.c    ****     {
 537:Src/main.c    ****         Lattice_CmdPowerOutput(TRUE);
 538:Src/main.c    ****     }
 539:Src/main.c    **** 
 540:Src/main.c    ****     if (GPIO_Pin == TRIGIN_FALLING_Pin)
 1193              		.loc 1 540 5 is_stmt 1 view .LVU407
 1194              		.loc 1 540 8 is_stmt 0 view .LVU408
 1195 0008 202C     		cmp	r4, #32
 1196 000a 04D0     		beq	.L38
 1197              	.L33:
 541:Src/main.c    ****     {
 542:Src/main.c    ****         Lattice_CmdPowerOutput(FALSE);
 543:Src/main.c    ****     }
 544:Src/main.c    **** }
 1198              		.loc 1 544 1 view .LVU409
 1199 000c 10BD     		pop	{r4, pc}
 1200              	.LVL55:
 1201              	.L37:
 537:Src/main.c    ****     }
 1202              		.loc 1 537 9 is_stmt 1 view .LVU410
 1203 000e 0120     		movs	r0, #1
 1204              	.LVL56:
 537:Src/main.c    ****     }
 1205              		.loc 1 537 9 is_stmt 0 view .LVU411
 1206 0010 FFF7FEFF 		bl	Lattice_CmdPowerOutput
 1207              	.LVL57:
 1208 0014 F8E7     		b	.L34
 1209              	.L38:
 542:Src/main.c    ****     }
 1210              		.loc 1 542 9 is_stmt 1 view .LVU412
 1211 0016 0020     		movs	r0, #0
 1212 0018 FFF7FEFF 		bl	Lattice_CmdPowerOutput
 1213              	.LVL58:
 1214              		.loc 1 544 1 is_stmt 0 view .LVU413
 1215 001c F6E7     		b	.L33
 1216              		.cfi_endproc
 1217              	.LFE135:
 1219              		.section	.text.Error_Handler,"ax",%progbits
 1220              		.align	1
 1221              		.global	Error_Handler
 1222              		.syntax unified
 1223              		.thumb
 1224              		.thumb_func
 1225              		.fpu fpv4-sp-d16
 1227              	Error_Handler:
 1228              	.LFB136:
 545:Src/main.c    **** 
 546:Src/main.c    **** /* USER CODE END 4 */
 547:Src/main.c    **** 
 548:Src/main.c    **** /**
 549:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 550:Src/main.c    ****   * @retval None
 551:Src/main.c    ****   */
 552:Src/main.c    **** void Error_Handler(void)
 553:Src/main.c    **** {
 1229              		.loc 1 553 1 is_stmt 1 view -0
 1230              		.cfi_startproc
ARM GAS  /tmp/cc87BusA.s 			page 38


 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		@ link register save eliminated.
 554:Src/main.c    ****     /* USER CODE BEGIN Error_Handler_Debug */
 555:Src/main.c    ****     /* User can add his own implementation to report the HAL error return state */
 556:Src/main.c    **** 
 557:Src/main.c    ****     /* USER CODE END Error_Handler_Debug */
 558:Src/main.c    **** }
 1234              		.loc 1 558 1 view .LVU415
 1235 0000 7047     		bx	lr
 1236              		.cfi_endproc
 1237              	.LFE136:
 1239              		.comm	huart3,112,4
 1240              		.comm	huart1,112,4
 1241              		.comm	hhrtim1,220,4
 1242              		.comm	hdma_adc1,68,4
 1243              		.comm	hadc1,84,4
 1244              		.text
 1245              	.Letext0:
 1246              		.file 2 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine
 1247              		.file 3 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_st
 1248              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1249              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1250              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 1251              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1252              		.file 8 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/loc
 1253              		.file 9 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_ty
 1254              		.file 10 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/
 1255              		.file 11 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/re
 1256              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1257              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1258              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1259              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1260              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1261              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1262              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1263              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_hrtim.h"
 1264              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1265              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1266              		.file 22 "Inc/global.h"
 1267              		.file 23 "Inc/lattice.h"
 1268              		.file 24 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1269              		.file 25 "Inc/main.h"
 1270              		.file 26 "Inc/eeprom_emulator.h"
 1271              		.file 27 "<built-in>"
ARM GAS  /tmp/cc87BusA.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc87BusA.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc87BusA.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc87BusA.s:206    .text.MX_GPIO_Init:00000000000000d8 $d
     /tmp/cc87BusA.s:214    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc87BusA.s:220    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc87BusA.s:267    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/cc87BusA.s:272    .text.MX_HRTIM1_Init:0000000000000000 $t
     /tmp/cc87BusA.s:278    .text.MX_HRTIM1_Init:0000000000000000 MX_HRTIM1_Init
     /tmp/cc87BusA.s:657    .text.MX_HRTIM1_Init:00000000000001a8 $d
                            *COM*:00000000000000dc hhrtim1
     /tmp/cc87BusA.s:663    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc87BusA.s:669    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc87BusA.s:811    .text.MX_ADC1_Init:0000000000000088 $d
                            *COM*:0000000000000054 hadc1
     /tmp/cc87BusA.s:816    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc87BusA.s:822    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc87BusA.s:877    .text.MX_USART1_UART_Init:0000000000000028 $d
                            *COM*:0000000000000070 huart1
     /tmp/cc87BusA.s:883    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/cc87BusA.s:889    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/cc87BusA.s:944    .text.MX_USART3_UART_Init:0000000000000028 $d
                            *COM*:0000000000000070 huart3
     /tmp/cc87BusA.s:950    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc87BusA.s:957    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc87BusA.s:1072   .text.main:0000000000000000 $t
     /tmp/cc87BusA.s:1079   .text.main:0000000000000000 main
     /tmp/cc87BusA.s:1140   .text.main:0000000000000044 $d
     /tmp/cc87BusA.s:1145   .text.Lattice_StatusChangeCb:0000000000000000 $t
     /tmp/cc87BusA.s:1152   .text.Lattice_StatusChangeCb:0000000000000000 Lattice_StatusChangeCb
     /tmp/cc87BusA.s:1166   .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cc87BusA.s:1173   .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cc87BusA.s:1220   .text.Error_Handler:0000000000000000 $t
     /tmp/cc87BusA.s:1227   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000044 hdma_adc1

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_HRTIM_Init
HAL_HRTIM_DLLCalibrationStart
HAL_HRTIM_PollForDLLCalibration
HAL_HRTIM_ADCTriggerConfig
HAL_HRTIM_TimeBaseConfig
HAL_HRTIM_WaveformTimerConfig
HAL_HRTIM_WaveformCompareConfig
HAL_HRTIM_DeadTimeConfig
HAL_HRTIM_WaveformOutputConfig
HAL_HRTIM_MspPostInit
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
ARM GAS  /tmp/cc87BusA.s 			page 40


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_Delay
EepromEmulator_Init
Lattice_Start
Lattice_Execute
Lattice_CmdPowerOutput
